
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		ТекстСообщения = НСтр("ru = 'Уведомление об отгрузке (ЕАЭС) не предназначено для создания в базе. Получите документы с сервера ИС МПТ.'");
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ИнтеграцияИСМПТККлиент.ОповеститьФормы(ИнтеграцияИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОбОтгрузкеЕАЭС());
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СобытияФормИСМПТКПереопределяемый.ПриЧтенииНаСервере(ТекущийОбъект, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СобытияФормИСМПТКПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ИнтеграцияИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОбОтгрузкеЕАЭС()
		Или ИмяСобытия = "УдалениеПриемкаЕАЭС" Тогда
			
		ЭтаФорма.Прочитать();
		
	ИначеЕсли ИмяСобытия = ИнтеграцияИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОПриемкеЕАЭС() Тогда
		
		СформироватьПредставлениеДокументаПриемки();
						
	Иначе
		ИнтеграцияИСМПТККлиентПереопределяемый.ОбработкаОповещенияДокументыИСМПТ(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);		
	КонецЕсли;
	
	УправлениеФормой();
		
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	Объект.Организация = Объект.Получатель;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвязатьТекущийДокументПриемки(Команда)
	
	Успешно = Ложь;
	ОтвязатьТекущуюПриемкуНаСервере(Успешно);
	СформироватьПредставлениеДокументаПриемки();
	
	Если Успешно Тогда
		Оповестить(ИнтеграцияИСМПТККлиентСервер.ИмяСобытияЗаписьУведомлениеОПриемкеЕАЭС());
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ОтвязатьТекущуюПриемкуНаСервере(Успешно)
 
	ДокументПриемка = ДокументПриемки.ПолучитьОбъект();
	
	Если Не ЗначениеЗаполнено(ДокументПриемка.Идентификатор) Тогда 
	
		ДокументПриемка.ДокументОснование = Неопределено;
		ДокументПриемка.ИдентификаторДокументаОтгрузки = "";
		ДокументПриемка.Записать();
		Успешно = Истина;
		
	Иначе
		ТекстСообщения = НСтр("ru = 'Данные документа уже переданы на сервер ИС МПТ. Выполнить отсоединение невозможно.'");
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СужебныеПроцедурыИФункции

#Область СостояниеДокумента

&НаСервере
Процедура СформироватьПредставлениеСостояния()
	
	Если Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ОбрабатываетсяСервером Тогда
		
		ПредставлениеСостояния = НСтр("ru = 'Документ обрабатывается сервером ИС МПТ'");
		
	ИначеЕсли Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ОтклоненСервером Тогда
		
		ПредставлениеСостояния = НСтр("ru = 'Документ отклонен сервером ИС МПТ, т.к. содержит ошибки'");
		
	ИначеЕсли Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ПодтвержденПолучателем Тогда
		
		ПредставлениеСостояния = НСтр("ru = 'Документ принят'");
		
	ИначеЕсли Объект.Состояние = Перечисления.СостоянияДокументовИСМПТК.ДоставленПолучателю Тогда
		
		ПредставлениеСостояния = НСтр("ru = 'Документ ожидает приемку'");
		
	Иначе
		
		Если Объект.Ссылка.Пустая() Тогда
			ПредставлениеСостояния = НСтр("ru = 'Новый документ'");
		Иначе
			ПредставлениеСостояния = НСтр("ru = 'Документ %Состояние%'");
			ПредставлениеСостояния = СтрЗаменить(ПредставлениеСостояния, "%Состояние%", НРег(Объект.Состояние));
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ПредставлениеСостояния.ЦветТекста = ИнтеграцияИСМПТККлиентСервер.ЦветСостояния(Объект.Состояние);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеДокументаПриемки()
	
	ДокументПриемки = ИнтеграцияИСМПТК.ПолучитьСсылкуСвязанногоДокументаПриемкиДляОтгрузки(Объект.Ссылка);
	
	//Вся группа - если есть документ приемки
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаДокументыПриемки", "Видимость", ЗначениеЗаполнено(ДокументПриемки));
	
	//Создание нового документа - только если связанного еще нет
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументУведомлениеОПриемкеЕАЭСИСМПТКСоздатьПриемкаЕАЭС", "Видимость", Не ЗначениеЗаполнено(ДокументПриемки));
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСостоянияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьПредупреждение(, ПредставлениеСостояния);

КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СобытияФормИСМПТККлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоОрганизации()
	
	Объект.Получатель  = Объект.Организация;
			
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьЗначенияПоОрганизации();
		
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УправлениеФормой()
	
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Ошибки", "Видимость", ?(Объект.Ошибки.Количество() = 0, Ложь, Истина));
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДокументыСоответствия", "Видимость", ?(Объект.ДокументыСоответствия.Количество() = 0, Ложь, Истина));
		
	СформироватьПредставлениеДокументаПриемки();
	СформироватьПредставлениеСостояния();                                 
		
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыОрганизацииКонтрагента(Ссылка, Реквизит) Экспорт
	
	Возврат ИнтеграцияИСМПТКПереопределяемый.ПолучитьРеквизитыОрганизацииКонтрагента(Ссылка, Реквизит);
	
КонецФункции

&НаСервере
Функция ПроверитьНаличиеSSCCВДокументе(КодИдентификации)
	
	ТаблицаМарок = Объект.Марки.Выгрузить();
	Возврат Не РазборИОбработкаКодовМаркировкиИСМПТКСлужебный.ВыполнитьПроверкуТранспортногоКодаПоДокументу(КодИдентификации, ТаблицаМарок); 
	
КонецФункции

#КонецОбласти

#Область ВыгрузитьКМ

&НаКлиенте
Процедура ВыгрузитьКодыМаркировкиВФайл(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = "Выбор файла";
	ДиалогВыбораФайла.Фильтр = "CSV (Comma-Separated Values)(*.csv)|*.csv";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьКодыМаркировкиИзФайлаЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКодыМаркировкиИзФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		
		НовыйТекстовыйДокумент = Новый ТекстовыйДокумент;
		
		Для Каждого СтрокаТЧ Из Объект.Марки Цикл
			НовыйТекстовыйДокумент.ДобавитьСтроку(СтрокаТЧ.КодИдентификации);
		КонецЦикла;
		
		НовыйТекстовыйДокумент.Записать(ВыбранныеФайлы[0]);
				
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеВExcel(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Заголовок = "Выбор файла";
	ДиалогВыбораФайла.Фильтр = НСтр("ru='Все поддерживаемые форматы файлов(*.xls;*.xlsx;)|*.xls;*.xlsx;|Книга Excel 97 (*.xls)|*.xls|Книга Excel 2007 (*.xlsx)|*.xlsx'");
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("СоздатьФайлXLS", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлXLS(ВыбранныеФайлы, ДополнительныеПараметрым) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		Итератор = 1;
		Для Каждого СтрокаТЧ Из Объект.Марки Цикл
			КодДляЗаписи = СтрокаТЧ.КодИдентификации;
			ТабличныйДокумент.Область("R" + Формат(Итератор,"ЧГ=0") + "C1").Текст = КодДляЗаписи;
			Итератор = Итератор + 1;
		КонецЦикла;
		
		ТабличныйДокумент.Записать(ВыбранныеФайлы[0], ТипФайлаТабличногоДокумента.XLS97);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

