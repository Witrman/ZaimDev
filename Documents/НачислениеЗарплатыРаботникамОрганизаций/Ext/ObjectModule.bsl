#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область УправлениеДоступом

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	СписокФизЛиц = Начисления.ВыгрузитьКолонку("ФизЛицо");;
	
	РасчетЗарплатыСервер.ЗаполнитьНаборыПоОрганизацииСтрутурномуПодразделениюСпискуФизЛиц(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделение", СписокФизЛиц);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда 
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Начисления);

	КраткийСоставДокумента 			   = ПроцедурыУправленияПерсоналомСервер.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Сотрудник");
	КраткийСоставВидовРасчетаДокумента = ПроцедурыУправленияПерсоналомСервер.ЗаполнитьКраткийСоставВидовРасчетаДокумента(Начисления);


КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.НачислениеЗарплатыРаботникамОрганизаций.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	ТаблицаНачисления = ПараметрыПроведения.Начисления;
	
	ТаблицаВзаиморасчетыСРаботниками = РасчетЗарплатыСервер.ПодготовитьТаблицуВзаиморасчеты(Реквизиты,
																				ТаблицаНачисления,
																				Движения.ВзаиморасчетыСРаботникамиОрганизаций.ВыгрузитьКолонки(),
																				ВидДвиженияНакопления.Приход,
																				Отказ);
	
	ТаблицаИПНСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ИПН", 
																				Движения.ИПНСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("ИсчислятьЕП", Ложь));
																				
	ТаблицаОПВСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ОПВ", 
																				Движения.ОПВСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("ИсчислятьЕП", Ложь));
																				
	ТаблицаСНСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"СН", 
																				Движения.СНСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("ИсчислятьСН", Истина));
																				
	ТаблицаСОСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"СО", 
																				Движения.СОСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("ИсчислятьЕП", Ложь));
																				
	ТаблицаОППВСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ОППВ", 
																				Движения.ОППВСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("ИсчислятьОППВ", Истина));
																				
	ТаблицаООСМССведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ООСМС", 
																				Движения.ООСМССведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("УчитыватьООСМС", Истина));
																				
	ТаблицаВОСМССведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ВОСМС", 
																				Движения.ВОСМССведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("УчитыватьВОСМС", Истина));
																				
	ТаблицаЕПСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ЕП", 
																				Движения.ЕПСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("ИсчислятьЕП", Истина));  
																				
	ТаблицаОПВРСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																				ТаблицаНачисления, 
																				"ОПВР", 
																				Движения.ОПВРСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ,
																				Новый Структура("УчитыватьОПВР", Истина));

																				
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОППВСведенияОДоходах, 		"ОППВСведенияОДоходах", 				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаВзаиморасчетыСРаботниками, "ВзаиморасчетыСРаботникамиОрганизаций", Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИПНСведенияОДоходах,  		"ИПНСведенияОДоходах",  				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОПВСведенияОДоходах,  		"ОПВСведенияОДоходах",  				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаСНСведенияОДоходах,   		"СНСведенияОДоходах",   				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаСОСведенияОДоходах,   		"СОСведенияОДоходах",   				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаООСМССведенияОДоходах, 	"ООСМССведенияОДоходах",   				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаВОСМССведенияОДоходах, 	"ВОСМССведенияОДоходах",   				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаЕПСведенияОДоходах, 	    "ЕПСведенияОДоходах",   				Движения, Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОПВРСведенияОДоходах, 		"ОПВРСведенияОДоходах",   				Движения, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, , , , ОбъектКопирования.Ссылка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ	

#КонецЕсли


