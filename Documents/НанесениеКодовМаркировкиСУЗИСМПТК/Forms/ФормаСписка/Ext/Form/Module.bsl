
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Организации.Добавить(Параметры.Отбор.Организация);
		Организация = Организации.Получить(0).Значение;
		ОрганизацииПредставление = Строка(Организация);
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	Иначе
		ЭтаФорма.Заголовок = "Нанесение кодов маркировки";
	КонецЕсли;	
	
	УстановитьУсловноеОформление();
	
	СобытияФормИСМПТКПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ИнтеграцияИСМПТККлиент.ОбработкаОповещенияВФормеСпискаДокументовИС(
		ЭтотОбъект,
		ИнтеграцияИСМПТККлиентСервер.ИмяПодсистемы(),
		ИмяСобытия,
		Параметр,
		Источник);
		
	Если ИмяСобытия = ИнтеграцияИСМПТККлиентСервер.ИмяСобытияЗаписьНанесениеКодовМаркировки() Тогда
		
		Элементы.Список.Обновить();
		УстановитьВидимостьКнопокИзмененияСтатуса(Элементы.Список.ТекущиеДанные.Статус);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьКодыМаркировкиВФайл(Команда)
	
	ТекстВопроса = НСтр("ru = 'По связанному заказу будут выгружены доступные коды маркировки из Пула кодов.
		|Продолжить?'");
		
	ВыгрузитьКодыМаркировки = Новый ОписаниеОповещения("ВыгрузитьКодыМаркировки", ЭтаФорма);
	ПоказатьВопрос(ВыгрузитьКодыМаркировки, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
			
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокИзмененияСтатуса(Статус = Неопределено)
	
	НеОтправлен = Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОтчетовСУЗИСМПТК.Черновик");
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументНанесениеКодовМаркировкиСУЗИСМПТКОтправить", "Видимость", НеОтправлен);
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументНанесениеКодовМаркировкиСУЗИСМПТКПроверить", "Видимость", Ложь);
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументНанесениеКодовМаркировкиСУЗИСМПТКОбновить",  "Видимость", Не НеОтправлен);
			
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументНанесениеКодовМаркировкиСУЗИСМПТКОбновить", "Доступность", Ложь);
		Возврат;
	КонецЕсли;
	
	УстановитьВидимостьКнопокИзмененияСтатуса(ТекущиеДанные.Статус);
	
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаДокументНанесениеКодовМаркировкиСУЗИСМПТКОбновить", "Доступность", Истина);
	
	Если ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиОтчетовСУЗИСМПТК.Отправлен") Тогда
		//Разрешаем печатать и выгружать коды в файл только когда они нанесены (документ успешно принят сервером)
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСохранитьКодыМаркировкиВФайл", "Видимость", Истина);
	Иначе
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокСохранитьКодыМаркировкиВФайл", "Видимость", Ложь);
	КонецЕсли;
	
КонецПроцедуры

#Область ВыгрузкаВФайл

&НаКлиенте
Процедура ВыгрузитьКодыМаркировкиИзФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ВыбранныеФайлы = Неопределено Тогда
		
		НовыйТекстовыйДокумент = Новый ТекстовыйДокумент;
		
		ОтчетыОбИспользовании = Элементы.Список.ВыделенныеСтроки;
		Заказы = ПолучитьСписокЗаказовПоВыбраннымДокументам(ОтчетыОбИспользовании);
		
		СписокКодов = ИнтеграцияИСМПТКВызовСервера.ПолучитьКодыМаркировкиЗаказов(Заказы);
		
		Если Не СписокКодов = Неопределено Тогда
			
			Для Каждого СтрокаТЧ Из СписокКодов Цикл
				НовыйТекстовыйДокумент.ДобавитьСтроку(РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.Base64ВШтрихкод(СтрокаТЧ.ПолныйКодМаркировки));
			КонецЦикла;
			
			НовыйТекстовыйДокумент.Записать(ВыбранныеФайлы[0]);
			
			ИнтеграцияИСМПТКВызовСервера.ОтметитьВыгрузкуКодовМаркировкиЗаказа(СписокКодов);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЗаказовПоВыбраннымДокументам(ОтчетыОбИспользовании);
	
	Если ОтчетыОбИспользовании.Количество() = 0 Тогда
		Возврат ПредопределенноеЗначение("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.ПустаяСсылка");
	КонецЕсли;
	
	ЗаказыКМ = Новый Массив();
	Для Каждого Нанесение Из ОтчетыОбИспользовании Цикл
		
		Если Не ЗначениеЗаполнено(Нанесение.ДокументОснование) Тогда
			ТекстСообщения = НСтр("ru = 'У отчета %1 не выбран документ-основание (Заказ кодов маркировки). Невозможно обновить сведения в Пуле кодов.
								  |Документ исключен из списка выгрузки в файл.'");
			ТекстСообщения = ИнтеграцияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Нанесение.Ссылка);
			ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения); 
			Продолжить;			
		КонецЕсли;
		
		ЗаказыКМ.Добавить(Нанесение.ДокументОснование);		
		
	КонецЦикла;
	
	Возврат ЗаказыКМ;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьКодыМаркировки(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Заголовок = "Выбор файла";
		ДиалогВыбораФайла.Фильтр = "CSV (Comma-Separated Values)(*.csv)|*.csv";
		ДиалогВыбораФайла.ИндексФильтра = 0;
		ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
		ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ВыгрузитьКодыМаркировкиИзФайлаЗавершение", ЭтотОбъект);
		ДиалогВыбораФайла.Показать(Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
