////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АВРСерверПереопределяемый.АВРФормаСпискаИВыбораПриСозданииНаСервере(ЭтаФорма);
	
	Если ЭСФКлиентСерверПереопределяемый.ИспользуютсяСтруктурныеПодразделения() Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, """"" КАК СтруктурноеПодразделение,", "ЭлектронныйАктВыполненныхРабот.СтруктурноеПодразделение,");
	Иначе
		Элементы.СписокСтруктурноеПодразделение.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеАВР") Тогда
		ОтказПриОткрытии = Истина;
	КонецЕсли;
	
	УстановитьВидимостьСостоянияИТС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Контейнер = АВРКлиентСервер.КонтейнерМетодов();	
	Контейнер.ПриОткрытииФормы(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтказПриОткрытии Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, АВРКлиентСервер.ТекстСообщенияНеУстановленаИспользоватьАВР());
	КонецЕсли;
	
	КлючУникальности = Новый УникальныйИдентификатор;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = АВРКлиентСервер.ИмяСобытияЗаписьАВР() Тогда
		Элементы.Список.Обновить();
		УправлениеФормой();
		УстановитьВидимостьСостоянияИТС();
	ИначеЕсли ИмяСобытия = "АВР_ПроверятьОповещенияФоновогоЗадания"
		И ЭтаФорма.КлючУникальности = Источник Тогда
		
		АВРКлиент.ОбработкаОповещенияАВР_ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, Параметр);
		УстановитьВидимостьСостоянияИТС();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	УстановитьВидимостьКнопокИзмененияСтатуса();	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокИзмененияСтатуса()
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		ПервыйВыделенныйАВР = Элементы.Список.ВыделенныеСтроки[0];
		СответвствиеСтатусов = АВРСервер.РазрешенныеДействияПоСтатусамАВР(ПервыйВыделенныйАВР.Направление);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокОтозвать"				, "Видимость", СответвствиеСтатусов[АВРКлиентСервер.ДействиеОтзыв()][ПервыйВыделенныйАВР.Статус]);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокРасторгнуть"			, "Видимость", СответвствиеСтатусов[АВРКлиентСервер.ДействиеРасторжение()][ПервыйВыделенныйАВР.Статус]);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокОтклонитьРасторжение"	, "Видимость", СответвствиеСтатусов[АВРКлиентСервер.ДействиеОтклонениеРасторжения()][ПервыйВыделенныйАВР.Статус]);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокПодтвердитьРасторжение", "Видимость", СответвствиеСтатусов[АВРКлиентСервер.ДействиеПодтверждениеРасторжения()][ПервыйВыделенныйАВР.Статус]);
	Иначе
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокОтозвать"				, "Видимость", Ложь);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокРасторгнуть"			, "Видимость", Ложь);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокОтклонитьРасторжение"	, "Видимость", Ложь);
		АВРКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокПодтвердитьРасторжение", "Видимость", Ложь);	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	УстановитьВидимостьКнопокИзмененияСтатуса();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьИнформациюИТС(Команда)
	
	ЭлектронноеВзаимодействиеССервисамиВызовСервера.ОбновитьДанныеОкончанияПодписки();
	УстановитьВидимостьСостоянияИТС();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	УстановитьБыстрыйОтбор("Организация", Организация);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Состояние", Состояние);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ВидЭлемента, ЗначениеЭлемента)
	
	ЭСФКлиентСерверПереопределяемый.ИзменитьЭлементОтбораСписка(Список, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УстановитьВидимостьСостоянияИТС()
	
	ДатаОкончанияПодписки = ЭлектронноеВзаимодействиеССервисами.ПолучитьДатуОкончанияПодписки();
	
	Элементы.ГруппаСостояниеИТС.Видимость = ЗначениеЗаполнено(ДатаОкончанияПодписки);
	
	Если Элементы.ГруппаСостояниеИТС.Видимость Тогда
		ServiceNick = ЭлектронноеВзаимодействиеССервисами.ПолучитьServiceNickИСЭСФ();
		Если ЭлектронноеВзаимодействиеССервисами.ВыводитьИнформациюОСрокахПодписки(ServiceNick, Организация, ДатаОкончанияПодписки) Тогда
			Элементы.ГруппаСостояниеИТС.ЦветФона = Новый Цвет(251, 212, 212);
			ТекстСостояния = ЭлектронноеВзаимодействиеССервисами.ПолучитьТекстИнформацииСостояниеПодписки(ДатаОкончанияПодписки);
			Элементы.ОписаниеСостоянияПодписки.Заголовок = ТекстСостояния;
		Иначе
			Элементы.ГруппаСостояниеИТС.ЦветФона = Новый Цвет(204, 255, 204);
			ТекстСостояния = ЭлектронноеВзаимодействиеССервисами.ПолучитьТекстИнформацииСостояниеПодписки();
			Элементы.ОписаниеСостоянияПодписки.Заголовок = ТекстСостояния;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
