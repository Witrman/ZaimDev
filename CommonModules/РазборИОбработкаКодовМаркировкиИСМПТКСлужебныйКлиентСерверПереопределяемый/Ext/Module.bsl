
#Область СлужебныеПроцедурыИФункции

Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки,
	Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
	СтрокаПодстановки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПодстановки,
	Параметр1, Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);	
	
	Возврат СтрокаПодстановки;
	
КонецФункции

Процедура СообщитьПользователю(
		Знач ТекстСообщенияПользователю,
		Знач КлючДанных = Неопределено,
		Знач Поле = "",
		Знач ПутьКДанным = "",
		Отказ = Ложь) Экспорт
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияПользователю,
														КлючДанных,
														Поле,
														ПутьКДанным,
														Отказ);	
КонецПроцедуры

// Определяет принадлежность имени объекта к контексту.
//
// Параметры:
//  Контекст - УправляемаяФорма, ДокументСсылка, СправчникСсылка, Обработка - контекст.
//  ИмяОбъекта - Строка - Имя объекта.
// Возвращаемое значение:
//  Булево - Истина, если имя объекта принадлежит контексту.
Функция ЭтоКонтекстОбъекта(Контекст, Знач ИмяОбъекта) Экспорт
	
	ЭтоСсылка   = Ложь;
	ЭтоФорма    = Ложь;
	Разделитель = ".";
	
	Если ТипЗнч(Контекст) = Тип("ФормаКлиентскогоПриложения") Тогда
		
		ЭтоФорма       = Истина;
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Контекст.ИмяФормы, Разделитель);
		ИмяФормы       = МассивПодстрок[0] + Разделитель + МассивПодстрок[1];
		
	Иначе
		
		ЭтоСсылка      = Истина;
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяОбъекта, Разделитель);
		
		Если МассивПодстрок[0] <> "Документ" Тогда
			Возврат Ложь;
		КонецЕсли;
		
		МассивПодстрок[0] = МассивПодстрок[0] + "Ссылка";
		ИмяОбъекта = СтрСоединить(МассивПодстрок, Разделитель);
		
	КонецЕсли;
	
	Возврат ЭтоФорма И ИмяФормы = ИмяОбъекта Или ЭтоСсылка И ТипЗнч(Контекст) = Тип(ИмяОбъекта);

КонецФункции

#КонецОбласти

#Область ПараметрыСканирования

Процедура ЗаполнитьБазовыеПараметрыСканирования(ПараметрыСканирования, Контекст) Экспорт
	
	//БМ_ИСМПТ НА_РАЗВИТИЕ	Товарные группы, заполнение параметров сканирования КМ
	ВидыПродукцииДляПроверки = Новый Массив();
	ВидыПродукцииДляПроверки.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная"));
	ВидыПродукцииДляПроверки.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная"));
	ВидыПродукцииДляПроверки.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция"));
	ВидыПродукцииДляПроверки.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Алкогольная"));
	ВидыПродукцииДляПроверки.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛегкаяПромышленность"));
	ВидыПродукцииДляПроверки.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты"));
	
	Если РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ДопустимВидПродукции(ПараметрыСканирования, ВидыПродукцииДляПроверки) Тогда 
		
		Если ТипЗнч(Контекст) = Тип("ФормаКлиентскогоПриложения") Тогда
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект")
				И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст.Объект, "Организация") Тогда
				ПараметрыСканирования.Организация = Контекст.Объект.Организация;
			ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Организация") Тогда
				ПараметрыСканирования.Организация = Контекст.Организация;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
