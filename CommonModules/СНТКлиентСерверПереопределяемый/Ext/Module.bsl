
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// См. СНТКлиентСервер.КонтейнерМетодов().
Процедура КонтейнерМетодов(Контейнер, ИспользоватьВнешнююОбработку) Экспорт
	
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Функции для работы с отборами и параметрами динамических списков.
//

Функция ИмяПропуститьПроверкуЗапретаИзменения() Экспорт
	
	Возврат "ПропуститьПроверкуЗапретаИзменения";
	
КонецФункции

Функция ПараметрыВыполненияВФоне(Знач ИдентификаторФормы = Неопределено) Экспорт
	
	//Возврат ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторФормы", ИдентификаторФормы); 
	Результат.Вставить("ДополнительныйРезультат", Ложь);
	Результат.Вставить("ОжидатьЗавершение", ?(ПолучитьСкоростьКлиентскогоСоединения() = ПредопределенноеЗначение("СкоростьКлиентскогоСоединения.Низкая"), 4, 2));
	Результат.Вставить("НаименованиеФоновогоЗадания", "");
	Результат.Вставить("КлючФоновогоЗадания", "");
	Возврат Результат;
	
КонецФункции

#Область ПрямойОбменАВР

Функция ИспользоватьФоновуюОтправкуСНТ() Экспорт
	
	Возврат ЭСФВызовСервераПовтИсп.ИспользоватьФоновуюОтправкуЭСФ();
	
КонецФункции

#КонецОбласти 

// Подставляет параметры в строку. Максимально возможное число параметров - 9.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида "%ИмяПараметра");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
// Пример:
//  ПодставитьПараметрыВСтроку(НСтр("ru='%1 пошел в %2'"), "Вася", "Зоопарк") = "Вася пошел в Зоопарк".
//
// Примечание:
//  В случаях, когда число используемых параметров в строке совпадает с числом переданных для подстановки параметров,
//  рекомендуется использовать функцию платформы СтрШаблон.
Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки,
	Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
	СтрокаПодстановки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПодстановки,
	Параметр1, Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);	
	
	Возврат СтрокаПодстановки;
КонецФункции

Функция ПолучитьНомерБезПрефиксовНулей (Номер, СНТ) Экспорт
	
	Возврат ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Номер, СНТ);
	
КонецФункции

Функция ПолучитьСписокДокументовОснованияДляСНТ(НаправлениеСНТ, ВидОперации) Экспорт
	
	// Получить список документов СНТ по направлению.	
	ДокументыВыбора = Новый СписокЗначений;
	
	Если НаправлениеСНТ = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Исходящий") И НЕ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСНТ.Ввоз")Тогда
		ДокументыВыбора.Добавить("РеализацияТоваровУслуг", "Реализация ТМЗ и услуг");
		ДокументыВыбора.Добавить("ПеремещениеТоваров", "Перемещение ТМЗ");
		ДокументыВыбора.Добавить("ВозвратТоваровОтПокупателя", "Возврат ТМЗ от покупателя");
		ДокументыВыбора.Добавить("ВозвратТоваровПоставщику", "Возврат ТМЗ поставщику");
		ДокументыВыбора.Добавить("ОтчетОРозничныхПродажах", "Отчет о розничных продажах");
		
	ИначеЕсли НаправлениеСНТ = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Исходящий") И ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСНТ.Ввоз") Тогда
		//БК
		ДокументыВыбора.Добавить("ПоступлениеТоваровУслуг", "Поступление ТМЗ и услуг");
		ДокументыВыбора.Добавить("ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов", "Заявление о ввозе товаров и уплате косвенных налогов");
	Иначе
		ДокументыВыбора.Добавить("ПоступлениеТоваровУслуг", "Поступление ТМЗ и услуг");
		ДокументыВыбора.Добавить("ВозвратТоваровПоставщику", "Возврат ТМЗ поставщику");
		ДокументыВыбора.Добавить("ВозвратТоваровОтПокупателя", "Возврат ТМЗ от покупателя");
	КонецЕсли;	
	
	Возврат ДокументыВыбора;
	
КонецФункции

Функция ОпределитьНаименованиеПервичногоДокумента(ПервичныйДокумент) Экспорт
	
	Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ИмяДокумента = "ПоступлениеТоваровУслуг";
	ИначеЕсли ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ИмяДокумента = "ВозвратТоваровОтПокупателя";
	ИначеЕсли ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ИмяДокумента = "ВозвратТоваровПоставщику";
	КонецЕсли;
	
	Возврат ИмяДокумента;
	
КонецФункции

Функция ПолучитьСоответствиеТипДокументаВидДвижения() Экспорт 
	
	СоответствиеТипДокументаВидДвижения = Новый Соответствие;
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ГТДИмпорт") , "Приход"); //БК
	//СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") , "Приход"); //УПК
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг") , "Приход"); //БК
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ПеремещениеТоваров")		, "РасходПриход");
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.РеализацияТоваровУслуг")	, "РасходПриход");
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ВозвратТоваровПоставщику")	, "РасходПриход");
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"), "РасходПриход");
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ЭСФ"), "ЭСФ");
	СоответствиеТипДокументаВидДвижения.Вставить(Тип("ДокументСсылка.ОтчетОРозничныхПродажах") , "РасходПриход");
	
	Возврат СоответствиеТипДокументаВидДвижения;
	
КонецФункции	

Процедура ПолучитьАдресПоставщикаПолучателяВЭСФИзСНТ(ПриемникДокументЭСФ, Организация, Дата) Экспорт
	
	//Для заполнения адреса поставщика и получателя в ЕРП, когда на основании СНТ вводится ЭСФ
	
КонецПроцедуры

Функция ПроверитьТипДокументаДляСозданияСНТ(Форма) Экспорт
	
	Возврат ?(СтрНайти(Форма.ИмяФормы, "ПоступлениеТоваровУслуг") <> 0, Истина, Ложь);
	
КонецФункции

Функция НеВерноУказанНомерАвто(Знач НомерДляПроверки) Экспорт
	
	Для N = 1 по СтрДлина(НомерДляПроверки) Цикл
		ТекКодСимвола = КодСимвола(НомерДляПроверки, N);//48-57>>0-9, 65-90>>A-Z, 97-122>>a-z
		Если (ТекКодСимвола < 48) ИЛИ ((ТекКодСимвола > 57) И (ТекКодСимвола < 65)) 
			ИЛИ ((ТекКодСимвола > 90) И (ТекКодСимвола < 97)) ИЛИ (ТекКодСимвола > 122) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
