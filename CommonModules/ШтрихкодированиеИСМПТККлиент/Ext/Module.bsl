
// Выполняет инициализацию и заполнение параметров сканирования по переданному контексту.
// Параметры сканирования необходимы для анализа и обработки штрихкодов маркируемой продукции.
//
// Параметры:
//  Контекст - Неопределено, ДокументСсылка, ФормаКлиентскогоПриложения - Источник данных для формирования параметров сканирования.
//  ФормаВыбора - Неопределено - Описание
//  ВидПродукции - Неопределено - Описание
// Возвращаемое значение:
// 	Структура - Описание:
// * ИдентификаторФормы - УникальныйИдентификатор - Уникальный идентификатор формы.
// * КонтрольРасхожденийСДокументомОснованием - Булево - Истина, если необходимо выполнять контроль и сообщать
//                                                       об ошибках в случае несоответствия документу-основанию.
// * КэшированныеЗначения - Структура - Содержит поля кэшируемых значений.
// * ТолькоМаркируемаяПродукция - Булево - Истина, если документ поддерживает работу только с маркируемой продукцией.
// * ДопустимыеВидыПродукции - Массив Из ПеречислениеСсылка.ВидыПродукцииИСМПТК - Виды продукции,
//                                                                                                 которые поддерживает контекст.
// * ВозможнаЗагрузкаТСД - Булево - Истина, если контекст поддерживает работу с ТСД.
// * ДокументОснование - Неопределено, ДокументСсылка - Документ основание.
// * СоздаватьШтрихкодУпаковки - Булево - Истина, если необходимо создавать элемент справочника штрихкоды упаковок.
// * АдресСоответствияАкцизныхМарок - Строка - адрес во временном хранилище, где хранятся обработанные данные по штрихкодам.
// * АдресДанныхДокументаОснования - Строка - адрес во временном хранилище, где хранятся данные документа основания.
// * ИспользуетсяСоответствиеШтрихкодовСтрокДерева - Булево - Истина, если реквизит на форме СоответствиеШтрихкодовСтрокДерева.
// * ДанныеВыбораПоМаркируемойПродукции - Структура - последние данные выбора, которые требовалось запомнить для последующего сканирования.
// * ИспользуютсяДанныеВыбораПоМаркируемойПродукции - Булево - Истина, если данные выбора по маркируемой продукции используются.
// * ДополнительныеПараметры - Структура - Параметры необходимые для переопределения обработки прикладных объектов.
// * ОперацияКонтроляАкцизныхМарок - Строка - Доступные типы: "Продажа", "Возврат". "Продажа" - для документов, которые
//                                            отражает расход по складу, "Возврат" - для документов, отражающих приход.
Функция ПараметрыСканирования(Контекст = Неопределено, ФормаВыбора = Неопределено, ВидПродукции = Неопределено) Экспорт
	
	ПараметрыСканирования = ШтрихкодированиеИСМПТККлиентСервер.БазовыеПараметрыСканирования();
	ШтрихкодированиеИСМПТККлиентСервер.ЗаполнитьБазовыеПараметрыСканирования(ПараметрыСканирования, Контекст);
	ШтрихкодированиеИСМПТККлиентСерверПереопределяемый.ПриЗаполненииПараметровСканирования(ПараметрыСканирования, Контекст, ВидПродукции);
	
	Возврат ПараметрыСканирования;
	
КонецФункции

// Показывает форму ввода штрихкода.
// 
// Параметры:
//  ОписаниеОповещения - ОписаниеОповещения - Оповещение, которое будет выполнено по завершению.
Процедура ПоказатьВводШтрихкода(ОписаниеОповещения) Экспорт
	
	Заголовок = НСтр("ru = 'Введите штрихкод';
					|en = 'Введите штрихкод'");
	
	ДополнительныеПараметры = Новый Структура("ОповещениеУспешногоВвода, Количество", ОписаниеОповещения, Неопределено);
		
	Оповещение = Новый ОписаниеОповещения("ПоказатьВводШтрихкодаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВводЗначения(Оповещение, "", Заголовок);
		
КонецПроцедуры

// Инициализирует параметры открытия формы невозможности добавления отсканированного.
//
// Параметры:
// 	ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИСМПТК - Вид маркируемой продукции.
// Возвращаемое значение:
// 	Структура - Описание:
// * АдресДереваУпаковок - Строка - адрес хранилища, где находится дерево упаковок.
// * АлкогольнаяПродукция - СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС - алкогольная продукция.
// * ТипШтрихкода - ПеречислениеСсылка.ТипыШтрихкодов - Тип штрихкода.
// * Организация - ОпределяемыйТип.Организация - Организация.
// * ТекстОшибки - Строка - Описание причины невозможности обработки отсканированного штрихкода.
// * Штрихкод - Строка - Штрихкод строкой.
// * ПредставлениеНоменклатуры - Строка - Представление маркируемой продукции.
// * ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИСМПТК - Вид маркируемой продукции.
Функция ПараметрыОткрытияФормыНевозможностиДобавленияОтсканированного(ВидПродукции = Неопределено) Экспорт
	
	ИнформацияПроблемы = Новый Структура;
	
	ИнформацияПроблемы.Вставить("ВидПродукции", ВидПродукции);
	
	// Информация по маркированному товару.
	ИнформацияПроблемы.Вставить("ПредставлениеНоменклатуры",        Неопределено);
	ИнформацияПроблемы.Вставить("Штрихкод",                         Неопределено);
	ИнформацияПроблемы.Вставить("ТекстОшибки",                      Неопределено);
	ИнформацияПроблемы.Вставить("ПараметрыОшибки",                  Неопределено);
	ИнформацияПроблемы.Вставить("ИмяФормыИсточник",                 Неопределено);
	ИнформацияПроблемы.Вставить("Организация",                      Неопределено);
	ИнформацияПроблемы.Вставить("ТекстОшибкиФорматированнаяСтрока", Неопределено);
	ИнформацияПроблемы.Вставить("ТипШтрихкода",                     Неопределено);
	ИнформацияПроблемы.Вставить("ВидУпаковки",                      Неопределено);
	ИнформацияПроблемы.Вставить("АлкогольнаяПродукция",             Неопределено);
	ИнформацияПроблемы.Вставить("ОбратноеСканирование",             Неопределено);
	
	// Информация по дереву упаковок.
	ИнформацияПроблемы.Вставить("АдресДереваУпаковок", Неопределено);
	
	Возврат ИнформацияПроблемы;
	
КонецФункции

// Выполняет завершение после показа формы ввода штрихкода.
// 
// Параметры:
//  Штрихкод - Строка - штрихкод строкой.
//  ДополнительныеПараметры - Структура - Параметры описания оповещения.
Процедура ПоказатьВводШтрихкодаЗавершение(Штрихкод, ДополнительныеПараметры) Экспорт
	
	ОповещениеУспешногоВвода = ДополнительныеПараметры.ОповещениеУспешногоВвода;
	Количество = ДополнительныеПараметры.Количество;
	
	Если Штрихкод = Неопределено Или ПустаяСтрока(Штрихкод) Тогда
		Возврат;
	КонецЕсли;
	
	Если Количество = Неопределено Тогда
		Количество = 1;
	КонецЕсли;
	
	Если СтрДлина(Штрихкод) > 200 Тогда
		ТекстСообщения = НСтр("ru = 'Длина штрихкода не должна быть больше 200 символов.';
								|en = 'Длина штрихкода не должна быть больше 200 символов.'");
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОповещениеУспешногоВвода, Новый Структура("Штрихкод, Количество", Штрихкод, Количество));
	
КонецПроцедуры

// Возвращает параметры открытия формы уточнения данных у пользователя, таких как "Номенклатура", "Характеристика", "Серия".
// 
// Возвращаемое значение:
//  Структура - Описание:
// * ПараметрыСканирования - (См. ШтрихкодированиеИСКлиент.ПараметрыСканирования).
// * Склад - ОпределяемыйТип.Склад - Склад, используемый для серий.
// * ПараметрыУказанияСерий - Структура - данные для расчета серий.
// * ШтрихкодEAN - Строка - Штрихкода формата EAN.
// * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатура - Элемент Характеристика.
// * Номенклатура - ОпределяемыйТип.Номенклатура - Элемент Номенклатура.
// * ТипШтрихкода - ПеречислениеСсылка.ТипыШтрихкодов - Тип штрихкода кода маркировки.
// * КодМаркировки - Строка - Код маркировки.
Функция ПараметрыОткрытияФормыУточненияДанных() Экспорт
	
	Возврат ШтрихкодированиеИСМПТККлиентСервер.ПараметрыОткрытияФормыУточненияДанных();
	
КонецФункции

#Область ПроверкаВидовПродукции

//БМ_ИСМПТ НА_РАЗВИТИЕ	Товарные группы

// Выполняет проверку в переданном массиве "ВидыПродукции" наличие элемента табачной продукции.
//
// Параметры:
//  ВидыПродукции - Массив из ПеречислениеСсылка.ВидыПродукцииИСМПТК - Вид продукции ИС.
// Возвращаемое значение:
//  Булево - Истина, если в переданном массиве найден элемент перечисления табачная продукция.
Функция ПрисутствуетТабачнаяПродукция(ВидыПродукции) Экспорт
	
	Возврат ВидыПродукции.Найти(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная")) <> Неопределено;
	
КонецФункции

// Выполняет проверку в переданном массиве "ВидыПродукции" наличие элемента обувной продукции.
//
// Параметры:
//  ВидыПродукции - Массив из ПеречислениеСсылка.ВидыПродукцииИСМПТК - Вид продукции ИС.
// Возвращаемое значение:
//  Булево - Истина, если в переданном массиве найден элемент перечисления обувная продукция.
Функция ПрисутствуетОбувнаяПродукция(ВидыПродукции) Экспорт

	Возврат ВидыПродукции.Найти(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная")) <> Неопределено;

КонецФункции

Функция ПрисутствуетМолочнаяПродукция(ВидыПродукции) Экспорт
	
	Возврат ВидыПродукции.Найти(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция")) <> Неопределено;
	
КонецФункции

Функция ПрисутствуетТекстильнаяПродукция(ВидыПродукции) Экспорт
	
	Возврат ВидыПродукции.Найти(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛегкаяПромышленность")) <> Неопределено;
	
КонецФункции

Функция ПрисутствуетЛекарственнаяПродукция(ВидыПродукции) Экспорт
	
	Возврат ВидыПродукции.Найти(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты")) <> Неопределено;
	
КонецФункции

Функция ПрисутствуетВодаИНапитки(ВидыПродукции) Экспорт
	
	Возврат ВидыПродукции.Найти(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.БезалкогольныеНапитки")) <> Неопределено;
	
КонецФункции

#КонецОбласти

#Область РаботаСТСД

// Показывает окно оповещения об окончании обработки данных ТСД.
//
// Параметры:
Процедура ОповеститьОбОкончанииОбработкиДанныхТСД() Экспорт
	
	ПоказатьОповещениеПользователя(
		ЗаголовокОповещенияТСД(),,
		НСтр("ru = 'Закончена обработка полученных из ТСД данных.';
			|en = 'Закончена обработка полученных из ТСД данных.'"),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

// Показывает окно оповещения о начале обработки данных ТСД.
//
// Параметры:
Процедура ОповеститьОНачалеОбработкиДанныхТСД() Экспорт
	
	ПоказатьОповещениеПользователя(
		ЗаголовокОповещенияТСД(),,
		НСтр("ru = 'Начата обработка полученных из ТСД данных.';
			|en = 'Начата обработка полученных из ТСД данных.'"),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

// Преобразует массив штрихкодов в формат Base64.
// 
// Параметры:
//  ШтрихкодыТСД - Массив из Строка - список штрихкодов.
Процедура ПреобразоватьШтрихкодыТСДВBase64(ШтрихкодыТСД) Экспорт
	
	Для Каждого ЭлементМассива Из ШтрихкодыТСД Цикл
		Если ЭлементМассива.Свойство("ШтрихкодыПреобразованы") Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭлементМассива.Штрихкод) Тогда
			ЭлементМассива.Штрихкод = ШтрихкодированиеИСМПТККлиентСервер.ШтрихкодВBase64(ЭлементМассива.Штрихкод);
		КонецЕсли;
		Если ЭлементМассива.Свойство("ШтрихкодУпаковки") И ЗначениеЗаполнено(ЭлементМассива.ШтрихкодУпаковки) Тогда
			ЭлементМассива.ШтрихкодУпаковки = ШтрихкодированиеИСМПТККлиентСервер.ШтрихкодВBase64(ЭлементМассива.ШтрихкодУпаковки);
		КонецЕсли;
		ЭлементМассива.Вставить("ШтрихкодыПреобразованы");
	КонецЦикла;
	
КонецПроцедуры

// Возвращает текст заголовка оповещения для ТСД.
//
// Параметры:
// Возвращаемое значение:
//  Строка - Текст заголовка.
Функция ЗаголовокОповещенияТСД()
	
	Возврат НСтр("ru = 'Загрузка из ТСД';
				|en = 'Загрузка из ТСД'");
	
КонецФункции

#КонецОбласти