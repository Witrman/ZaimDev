
#Область Авторизация

// Возвращает текущий ключ сессии для обмена с ИСМП.
// 
// Параметры:
// 	ПараметрыЗапроса - (См. ИнтерфейсАвторизацииИСМПКлиентСервер.ПараметрыЗапросаКлючаСессии).
// 	СрокДейтвия - Дата, Неопределено - Срок действия ключа сессии.
// Возвращаемое значение:
// 	Строка, Неопределено - Действующий ключ сессии для организации.
Функция ТекущийКлючСессии(ПараметрыЗапроса, Знач СрокДействия = Неопределено) Экспорт
	
	Попытка
		ДанныеКлючаСессии = ПараметрыСеанса[ПараметрыЗапроса.ИмяПараметраСеанса].Получить();
	Исключение
		ДанныеКлючаСессии = Неопределено;
	КонецПопытки;
	
	// Ключ сессии еще не установлен
	Если ДанныеКлючаСессии = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СрокДействия = Неопределено Тогда
		
		Таймаут      = 60;
		СрокДействия = ТекущаяДатаСеанса() + Таймаут;
		
	КонецЕсли;
	
	Если ПараметрыЗапроса.Организация <> Неопределено Тогда
		
		ДанныеКлючаСессииДляОрганизации = ДанныеКлючаСессии.Получить(ПараметрыЗапроса.Организация);
		
		Если ДанныеКлючаСессииДляОрганизации = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		// Ключ сессии устарел
		Если ДанныеКлючаСессииДляОрганизации.ДействуетДо <= СрокДействия Тогда
			Возврат Неопределено;
		КонецЕсли;
		
	Иначе
		
		Для Каждого КлючИЗначение Из ДанныеКлючаСессии Цикл
			
			Если КлючИЗначение.Значение.ДействуетДо > СрокДействия Тогда
				
				ДанныеКлючаСессииДляОрганизации = КлючИЗначение.Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДанныеКлючаСессииДляОрганизации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КлючСессии = ДанныеКлючаСессииДляОрганизации.КлючСессии;
	
	Возврат КлючСессии;
	
КонецФункции

// Запросить из сервиса ИС МП параметры авторизации.
// 
// Параметры:
// 	ПараметрыЗапроса - (См. ПараметрыЗапросаКлючаСессии) - Параметры запроса ключа сессии.
// 
// Возвращаемое значение:
// 	Структура - Описание:
// * ПараметрыАвторизации - (См. ИнтерфейсАвторизацииИСМПСлужебный.ПараметрыАвторизации). - Параметры авторизации
//                        - Неопределено - Если при получении параметров авторизации возникла ошибка.
// * ТекстОшибки          - Строка - Текст сообщения об ошибке.
Функция ЗапроситьПараметрыАвторизации(ПараметрыЗапроса) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПараметрыАвторизации", Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",          "");
	
	РезультатЗапроса = ИнтеграцияИСМПТК.ПолучитьДанныеИзСервиса(
		ПараметрыЗапроса.АдресЗапросаПараметровАвторизации, Неопределено,
		ПараметрыЗапроса);
	
	РезультатОтправкиЗапроса = ИнтерфейсИСМПТК.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса);
	
	Если РезультатОтправкиЗапроса.ОтветПолучен Тогда
		
		Если РезультатОтправкиЗапроса.КодСостояния = 200 Тогда
			
			ДанныеОтвета = ИнтерфейсИСМПТК.ТекстJSONВОбъект(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияJSON);
			
			Если ДанныеОтвета = Неопределено Тогда
				
				ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(
					ПараметрыЗапроса.АдресЗапросаПараметровАвторизации,
					РезультатОтправкиЗапроса);
				
			Иначе
				
				ПараметрыАвторизации = ИнтерфейсАвторизацииИСМПТКСлужебный.ПараметрыАвторизации();
				ПараметрыАвторизации.Идентификатор = ДанныеОтвета.uuid;
				ПараметрыАвторизации.Данные        = ДанныеОтвета.data;
				
				ВозвращаемоеЗначение.ПараметрыАвторизации = ПараметрыАвторизации;
				
			КонецЕсли;
			
		Иначе
			
			ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(
				ПараметрыЗапроса.АдресЗапросаПараметровАвторизации,
				РезультатОтправкиЗапроса);
			
		КонецЕсли;
		
	Иначе
		
		ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(
			ПараметрыЗапроса.АдресЗапросаПараметровАвторизации,
			РезультатОтправкиЗапроса);
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Выполнить запрос ключа сессии в МОТП.
// 
// Параметры:
// 	ПараметрыЗапросаПоОрганизации - Структура - Структура со свойствами:
//	* ПараметрыЗапроса
//	* ПараметрыАвторизации
//	* СвойстваПодписи
//
// Возвращаемое значение:
// 	Структура - Описание:
// * Результат   - (См. ИнтерфейсИСМПТК.ПараметрыКлючаСессии).
//               - Неопределено - При получении параметров ключа сессии произошла ошибка.
// * ТекстОшибки - Строка - Текст ошибки.
Функция ЗапроситьКлючСессии(ПараметрыЗапросаПоОрганизации) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПараметрыКлючаСессии", Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",          "");
	
	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("uuid", ПараметрыЗапросаПоОрганизации.ПараметрыАвторизации.Идентификатор);
	ТелоЗапроса.Вставить("data", ПараметрыЗапросаПоОрганизации.СвойстваПодписи.Подпись);
		
	РезультатЗапроса = ИнтеграцияИСМПТК.ОтправитьДанныеВСервис(
		ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии, ТелоЗапроса, Неопределено, "POST",
		ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса);
	
	РезультатОтправкиЗапроса = ИнтерфейсИСМПТК.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса);
	
	Если РезультатОтправкиЗапроса.ОтветПолучен Тогда
		
		Если РезультатОтправкиЗапроса.КодСостояния = 200 Тогда
			
			ДанныеОтвета = ИнтерфейсИСМПТК.ТекстJSONВОбъект(РезультатОтправкиЗапроса.ТекстВходящегоСообщенияJSON);
			
			Если ДанныеОтвета = Неопределено Тогда
				
				ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(
					ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии,
					РезультатОтправкиЗапроса);
				
			Иначе
				
				ДействуетДо = ТекущаяДатаСеанса() + 900; // 15 минут
				РезультатРазбораТокена = ИнтерфейсИСМПТК.РасшифроватьТокенJWT(ДанныеОтвета.token);
				Если РезультатРазбораТокена <> Неопределено Тогда
					ДействуетДо = ИнтеграцияИСМПТК.ДатаИзСтрокиUNIX(РезультатРазбораТокена.exp, 1);
				КонецЕсли;
				
				ПараметрыКлючаСессии = ИнтерфейсАвторизацииИСМПТКСлужебный.ПараметрыКлючаСессии();
				ПараметрыКлючаСессии.КлючСессии  = ДанныеОтвета.token;
				ПараметрыКлючаСессии.ДействуетДо = ДействуетДо;
				
				ВозвращаемоеЗначение.ПараметрыКлючаСессии = ПараметрыКлючаСессии;
				
			КонецЕсли;
			
		Иначе
			
			ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(
				ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии,
				РезультатОтправкиЗапроса);
			
		КонецЕсли;
		
	Иначе
		
		ВозвращаемоеЗначение.ТекстОшибки = ИнтерфейсИСМПТК.ТекстОшибкиПоРезультатуОтправкиЗапроса(
			ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.АдресЗапросаКлючаСессии,
			РезультатОтправкиЗапроса);
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

// Выполняет запрос ключа сессии для организации с учетом результата подписания.
// 
// Параметры:
// 	ПараметрыЗапросовПоОрганизациям - (См. ИнтерфейсАвторизацииИСМПТКСлужебныйКлиент.РезультатПодписания).
// Возвращаемое значение:
// 	Соответствие - Результат запроса ключей сессий по организациям.
Функция ЗапроситьКлючиСессий(ПараметрыЗапросовПоОрганизациям) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие;
	
	Для Каждого ПараметрыЗапросаПоОрганизации Из ПараметрыЗапросовПоОрганизациям Цикл
		
		РезультатЗапросаКлючаСессии = ЗапроситьКлючСессии(ПараметрыЗапросаПоОрганизации);
		
		Если РезультатЗапросаКлючаСессии.ПараметрыКлючаСессии <> Неопределено Тогда
			
			ИнтерфейсАвторизацииИСМПТКСлужебный.УстановитьКлючСессии(
				ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса,
				РезультатЗапросаКлючаСессии.ПараметрыКлючаСессии);
			
			// Ключ сессии обновлен
			ВозвращаемоеЗначение.Вставить(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.Организация, Истина);
			
		Иначе
			
			// Ключ сессии не обновлен
			ВозвращаемоеЗначение.Вставить(ПараметрыЗапросаПоОрганизации.ПараметрыЗапроса.Организация, РезультатЗапросаКлючаСессии.ТекстОшибки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ПроверитьОбновитьКлючСессии(ПараметрыЗапросаКлючаСессии, СрокДействия = Неопределено, ОбновлятьКлючСессииНаСервере = Ложь) Экспорт
	
	Возврат ИнтерфейсАвторизацииИСМПТКСлужебный.ПроверитьОбновитьКлючСессии(ПараметрыЗапросаКлючаСессии, СрокДействия, ОбновлятьКлючСессииНаСервере);
	
КонецФункции

Функция ЗапроситьУстановитьКлючСессии(ПараметрыЗапросаКлючаСессии, ПараметрыАвторизации, Подпись) Экспорт 
	
	Возврат ИнтерфейсАвторизацииИСМПТКСлужебный.ЗапроситьУстановитьКлючСессии(ПараметрыЗапросаКлючаСессии, ПараметрыАвторизации, Подпись);

КонецФункции