// Возвращает объект "ЗащищенноеСоединениеOpenSSL"
// 
Функция ЗащищенноеСоединение() Экспорт
	
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Новый СертификатыУдостоверяющихЦентровОС());
	
	Возврат ЗащищенноеСоединение;
	
КонецФункции

#Область ДокументыИСМПТ_БМ

Функция ОбработкаОбменИСМПТ() Экспорт
	
	Возврат ИнтеграцияИСМПТКПереопределяемый.ОбработкаОбменИСМПТ();
	
КонецФункции

#Область ВводНаОсновании

Функция ПолучитьПустуюСтруктуруДокументаИСМПТ(ТипДокументаИСМПТ, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК") Тогда
		
		Если ДополнительныеПараметры.ЭтоКорректировкаАПП Тогда
			Возврат ПолучитьПустуюСтруктуруДокументаАПП_Корректировка();
		Иначе
			Возврат ПолучитьПустуюСтруктуруДокументаАПП();
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОбЭкспортеЕАЭСИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаЭкспортЕАЭС();
		
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОРасхожденииИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаУОР();
		
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОВводеВОборотИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаВводВОборот();    
		
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОВыводеИзОборотаИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаВыводИзОборота(ДополнительныеПараметры.ЭтоВводВИОПоАПП);
		
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОПриемкеЕАЭСИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаПриемкаЕАЭС();
	
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК")
		Или ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") Тогда
		
		Если ДополнительныеПараметры.ЭтоВвозИзТретьихСтран Тогда
			Возврат ПолучитьПустуюСтруктуруДокументаВвозТоваровИзТретьихСтран();
		Иначе
			Возврат ПолучитьПустуюСтруктуруДокументаВвозТоваровИзЕАЭС();
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаАПП() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент," 
	+ "ВидОперации,"	
	+ "ТипАкта,"	
	+ "ЭтоКорректировка," 
	+ "СвязанныйАкт,"
	+ "РегистрационныйНомерСвязанногоАкта,"
	+ "УведомлениеОРасхождении,"
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель,"
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "Получатель,"
	+ "Номенклатура,"
	+ "ДокументОснование,"
	+ "ЕдиницаИзмерения,"
	+ "ВидПродукцииИС,"
	+ "КоличествоИсточник";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
			
	Возврат СтруктураДокумента;
	
КонецФункции	

Функция ПолучитьПустуюСтруктуруДокументаЭкспортЕАЭС() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент," 
	+ "ТоварнаяГруппа,"	
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель,"
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "Получатель,"
	+ "Номенклатура,"
	+ "Характеристика,"
	+ "ДокументОснование";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаАПП_Корректировка() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент," 
	+ "ВидОперации,"
	+ "ТипАкта,"	
	+ "ЭтоКорректировка," 
	+ "СвязанныйАкт,"
	+ "РегистрационныйНомерСвязанногоАкта,"
	+ "УведомлениеОРасхождении,"
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель,"
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	+ "ДокументОснованиеИсточник"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"ДокументОснование,"
	+ "КодМаркировки,"
	+ "ВидУпаковки,"
	+ "Количество,"
	+ "GTIN,"
	+ "Номенклатура,"
	+ "КоличествоИсточник,"
	+ "EAN,"
	+ "ВидПродукцииИС,"
	+ "КодИдентификации";
	
	СтруктураДокумента.Вставить("Марки", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции	

Функция ПолучитьПустуюСтруктуруДокументаАПП_ПоУОР() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент," 
	+ "ВидОперации,"
	+ "ТипАкта,"	
	+ "ЭтоКорректировка," 
	+ "СвязанныйАкт,"
	+ "РегистрационныйНомерСвязанногоАкта,"
	+ "УведомлениеОРасхождении,"
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель,"
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	+ "ДокументОснованиеИсточник"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "ДокументОснование,"
	+ "Получатель,"
	+ "GTIN,"
	+ "КодМаркировки,"
	+ "ВидУпаковки,"
	+ "Номенклатура,"
	+ "КоличествоИсточник,"
	+ "EAN,"
	+ "КодИдентификации,"
	+ "ВидПродукцииИС,"
	+ "Количество";
	
	СтруктураДокумента.Вставить("Марки", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции	

Функция ПолучитьПустуюСтруктуруДокументаУОР() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент," 
	+ "ВидОперации,"
	+ "СвязанныйАкт,"
	+ "РегистрационныйНомерСвязанногоАкта,"
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель,"
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Марки
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "ДокументОснование,"
	+ "GTIN,"
	+ "GTINВерхнегоУровня,"
	+ "КодМаркировки,"
	+ "ВидУпаковки,"
	+ "Номенклатура,"
	+ "КоличествоИсточник,"
	+ "EAN,"
	+ "КодИдентификации,"
	+ "СтатусСверкиКода,"
	+ "ВидПродукцииИС,"
	+ "Количество";
	
	СтруктураДокумента.Вставить("Марки", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции	

Функция ПолучитьПустуюСтруктуруДокументаВводВОборот() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "ДокументОснование,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Марки
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "Номенклатура,"
	+ "ДокументОснование,"
	+ "ЕдиницаИзмерения,"
	+ "ВидПродукцииИС,"
	+ "КоличествоИсточник";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции	

Функция ПолучитьПустуюСтруктуруДокументаВыводИзОборота(СозданиеПоАПП = Ложь) Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "ДокументОснование,"
	+ "ПричинаВыводаИзОборота,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Марки
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "Номенклатура,"
	+ "ДокументОснование,"
	+ "ВидПродукцииИС,"
	+ "КоличествоИсточник,";
	
	Если СозданиеПоАПП Тогда
		
		СписокОбязательныхКолонок = 
		СписокОбязательныхКолонок
		+ "КодИдентификации," 
		+ "КодМаркировки,"
		+ "Количество," 
		+ "EAN,"
		+ "GTIN,"
		+ "ВидУпаковки";
		
		ИмяТаблицы = "Марки";
		
	Иначе
		
		СписокОбязательныхКолонок = 
		СписокОбязательныхКолонок
		+ "ЕдиницаИзмерения";
		
		ИмяТаблицы = "Товары";
		
	КонецЕсли;
	
	СтруктураДокумента.Вставить(ИмяТаблицы, ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаВвозТоваровИзЕАЭС() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент,"
	+ "Направление,"
	+ "ВидОперации,"
	+ "ТипУведомления,"
	+ "ЭтоКорректировка,"
	+ "СвязанноеУведомление,"
	+ "РегистрационныйНомерСвязанногоУведомления,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель," 
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	+ "СтранаРегистрации,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Марки
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "Номенклатура,"
	+ "ДокументОснование,"
	+ "ВидПродукцииИС,"
	+ "КоличествоИсточник";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаВвозТоваровИзТретьихСтран() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент,"
	+ "Направление,"
	+ "ВидОперации,"
	+ "ТипУведомления,"
	+ "ЭтоКорректировка,"
	+ "СвязанноеУведомление,"
	+ "РегистрационныйНомерСвязанногоУведомления,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель," 
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы 
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "Номенклатура,"
	+ "КоличествоИсточник,"
	+ "ТНВЭД,"
	+ "СтранаПроизводства,"
	+ "НомерПозицииВДекларацииИлиЗаявлении,"
	+ "ВидПродукцииИС,"
	+ "ДокументОснование";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаСУЗ(ТипДокументаИСМПТ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.ЗаказКодовМаркировкиСУЗИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаЗаказКодов();
		
	ИначеЕсли ТипЗнч(ТипДокументаИСМПТ) = Тип("ДокументСсылка.НанесениеКодовМаркировкиСУЗИСМПТК") Тогда
		
		Возврат ПолучитьПустуюСтруктуруДокументаНанесениеКодов();
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаЗаказКодов() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "ВидПродукции," 
	+ "Ответственный," 
	+ "ДокументОснование," 
	+ "СпособВводаВОборот,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "ДокументОснование," 
	+ "Номенклатура,"
	+ "Характеристика,"
	+ "Упаковка,"
	+ "КоличествоУпаковок,"
	+ "Количество,"
	+ "GTIN,"
	+ "ЕдиницаИзмеренияБазовая";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции	

Функция ПолучитьПустуюСтруктуруДокументаЗаказКодовПриРазбитииНаЧасти() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "ИдентификаторПроизводственногоЗаказа,"
	+ "ИдентификаторПроизводства,"
	+ "СтранаПроизводителя,"
	+ "ИдентификаторПроизводственнойЛинии,"
	+ "ОписаниеПродукта,"
	+ "КодПродукта,"
	+ "СпособВводаВОборот," 
	+ "Комментарий," 
	+ "Ответственный," 
	+ "КонтактноеЛицо," 
	+ "СпособИзготовленияСИ," 
	+ "Статус," 
	+ "ДокументОснование," 
	+ "ВыполненоНанесениеКМ,"
	+ "НомерПакета,"
	+ "Дата,"
	+ "ВидПродукции,"
	+ "ЗаказРодитель,"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "ДокументОснование," 
	+ "Номенклатура,"
	+ "Характеристика,"
	+ "Упаковка,"
	+ "GTIN,"
	+ "Количество,"
	+ "КоличествоУпаковок,"
	+ "Шаблон,"
	+ "СпособФормированияСерийногоНомера,"
	+ "СтатусУказанияСерии,"
	+ "СпособВводаВОборот";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаИСМПТПриРазбитииНаЧасти(ИмяДокумента) Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	Если ИмяДокумента = "АктПриемаПередачиИСМПТК" Тогда 
		#Область СтруктураРеквизитов
		СписокОбязательныхКолонок = "Организация," 
		+ "Контрагент," 
		+ "ВидОперации,"	
		+ "ТипАкта,"	
		+ "ЭтоКорректировка," 
		+ "СвязанныйАкт,"
		+ "РегистрационныйНомерСвязанногоАкта,"
		+ "УведомлениеОРасхождении,"
		+ "Направление,"
		+ "Статус,"
		+ "Состояние,"
		+ "Поставщик," 
		+ "ПоставщикНаименование,"
		+ "ПоставщикИдентификационныйНомер,"
		+ "Получатель,"
		+ "ПолучательНаименование,"
		+ "ПолучательИдентификационныйНомер,"
		+ "РегНомерНаБумажномНосителе,"
		+ "ДатаВыпискиНаБумажномНосителе,"
		+ "Автор,"
		+ "ДокументОснование,"
		+ "Дата,"
		;
		СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		#КонецОбласти
	ИначеЕсли ИмяДокумента = "УведомлениеОВводеВОборотИСМПТК" Тогда 
		#Область СтруктураРеквизитов
		СписокОбязательныхКолонок = "Организация," 
		+ "Направление,"
		+ "Статус,"
		+ "Состояние,"
		+ "Поставщик," 
		+ "ПоставщикНаименование,"
		+ "ПоставщикИдентификационныйНомер,"
		+ "Автор,"
		+ "ПричинаВводаВОборот,"
		+ "ДокументОснование,"
		+ "Дата,"
		;
		СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		#КонецОбласти
	ИначеЕсли ИмяДокумента = "УведомлениеОВыводеИзОборотаИСМПТК" Тогда 
		#Область СтруктураРеквизитов
		СписокОбязательныхКолонок = "Организация," 
		+ "Направление,"
		+ "Статус,"
		+ "Состояние,"
		+ "Поставщик," 
		+ "ПоставщикНаименование,"
		+ "ПоставщикИдентификационныйНомер,"
		+ "Автор,"
		+ "ПричинаВыводаИзОборота,"
		+ "ДокументОснование,"
		+ "Дата,"
		;
		СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		#КонецОбласти
	ИначеЕсли ИмяДокумента = "УведомлениеОВвозеИзЕАЭСИСМПТК" Тогда 
		#Область СтруктураРеквизитов
		СписокОбязательныхКолонок = "Организация," 
		+ "Контрагент," 
		+ "ВидОперации,"	
		+ "ТипУведомления,"	
		+ "ЭтоКорректировка," 
		+ "СвязанноеУведомление,"
		+ "РегистрационныйНомерСвязанногоУведомления,"
		+ "ДатаСвязанногоУведомления,"
		+ "Направление,"
		+ "Статус,"
		+ "Состояние,"
		+ "Поставщик," 
		+ "ПоставщикНаименование,"
		+ "ПоставщикИдентификационныйНомер,"
		+ "Получатель,"
		+ "ПолучательНаименование,"
		+ "ПолучательИдентификационныйНомер,"
		+ "РегНомерНаБумажномНосителе,"
		+ "ДатаВыпискиНаБумажномНосителе,"
		+ "НомерКвитанцииАкциза,"
		+ "СуммаАкциза,"
		+ "ДатаУплатыАкциза,"
		+ "СтранаОтправления,"
		+ "Автор,"
		+ "ДокументОснование,"
		+ "Дата,"
		;
		СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		#КонецОбласти
	ИначеЕсли ИмяДокумента = "УведомлениеОВвозеИзТретьихСтранИСМПТК" Тогда 
		#Область СтруктураРеквизитов
		СписокОбязательныхКолонок = "Организация," 
		+ "Контрагент," 
		+ "ВидОперации,"	
		+ "ТипУведомления,"	
		+ "Направление,"
		+ "Статус,"
		+ "Состояние,"
		+ "СтранаОтправления," 
		+ "Получатель,"
		+ "ПолучательНаименование,"
		+ "ПолучательИдентификационныйНомер,"
		+ "РегНомерНаБумажномНосителе,"
		+ "ДатаВыпискиНаБумажномНосителе,"
		+ "ТипДокументаТаможенногоОформления,"
		+ "НомерДокументаТаможенногоОформления,"
		+ "ДатаДокументаТаможенногоОформления,"
		+ "КодТаможенногоОргана,"
		+ "КодРешенияТаможенногоОргана,"
		+ "ДатаВремяПринятияРешения,"
		+ "Автор,"
		+ "ДокументОснование,"
		+ "Дата,"
		;
		СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		#КонецОбласти
	ИначеЕсли ИмяДокумента = "УведомлениеОбЭкспортеЕАЭСИСМПТК" Тогда 
		#Область СтруктураРеквизитов
		СписокОбязательныхКолонок = "Организация," 
		+ "Контрагент," 
		+ "ТоварнаяГруппа,"	
		+ "Направление,"
		+ "Статус,"
		+ "Состояние,"
		+ "СтранаПолучатель," 
		+ "Получатель,"
		+ "ПолучательНаименование,"
		+ "ПолучательИдентификационныйНомер,"
		+ "Поставщик," 
		+ "ПоставщикНаименование,"
		+ "ПоставщикИдентификационныйНомер,"
		+ "НомерДокументаТрансграна,"
		+ "ДатаДокументаТрансграна,"
		+ "ДатаВремяОтгрузки,"
		+ "Автор,"
		+ "ДокументОснование,"
		+ "Дата,"
		;
		СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		#КонецОбласти
	КонецЕсли;
	
	// Подготовка таблицы Марки
	СписокОбязательныхКолонок = 
	"КодМаркировки,"
	+ "ВидУпаковки,"
	+ "Количество,"
	+ "GTIN,"
	+ "Номенклатура,"
	+ "EAN,"
	+ "КодИдентификации,"
	+ "ВидПродукцииИС,"
	+ "GTINВерхнегоУровня";
	СтруктураДокумента.Вставить("Марки", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	//// Подготовка таблицы Товары
	//СписокОбязательныхКолонок = 
	//"Номенклатура,"
	////+ "GTIN,"
	//+ "КоличествоИсточник,"
	////+ "ЕдиницаИзмерения,"
	////+ "EAN,"
	//+ "ВидПродукцииИС";
	////+ "Характеристика";
	//СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Докум.Соответствия
	Если ИмяДокумента = "УведомлениеОВвозеИзТретьихСтранИСМПТК"
		ИЛИ ИмяДокумента = "УведомлениеОВвозеИзЕАЭСИСМПТК"
		ИЛИ ИмяДокумента = "УведомлениеОбЭкспортеЕАЭСИСМПТК" Тогда 
		СписокОбязательныхКолонок = 
		"ТипДокумента,"
		+ "ДатаДокумента,"
		+ "НомерДокумента";
		СтруктураДокумента.Вставить("ДокументыСоответствия", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	КонецЕсли;
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаНанесениеКодов() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "ВидПродукции," 
	+ "Ответственный," 
	+ "ИдентификаторПроизводственнойЛинии," 
	+ "ДокументОснование," 
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы Товары
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "ДокументОснование," 
	+ "Номенклатура,"
	+ "Характеристика,"
	+ "GTIN,"
	+ "КодМаркировки,"
	+ "КодИдентификации";
	
	СтруктураДокумента.Вставить("Товары", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаПриемкаЕАЭС() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент,"
	+ "Направление,"
	+ "Поставщик," 
	+ "ПоставщикНаименование,"
	+ "ПоставщикИдентификационныйНомер,"
	+ "Получатель," 
	+ "ПолучательНаименование,"
	+ "ПолучательИдентификационныйНомер,"
	+ "ДокументОснование,"
	+ "НомерПервичногоДокумента,"
	+ "ДатаПервичногоДокумента,"
	+ "ДатаОтгрузки,"
	+ "ДатаПриемки,"
	+ "ИдентификаторДокументаОтгрузки,"
	+ "СтранаОтправитель,";
	
	СтруктураДокумента.Вставить("Реквизиты", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	// Подготовка таблицы 
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "ДокументОснование,"
	+ "Получатель,"
	+ "GTINВерхнегоУровня,"
	+ "ВидУпаковки,"
	+ "Номенклатура,"
	+ "EAN,"
	+ "КодИдентификации,"
	+ "ВидПродукцииИС";
		
	СтруктураДокумента.Вставить("Марки", ИнтеграцияИСМПТКВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
		
	Возврат СтруктураДокумента;
	
КонецФункции

#КонецОбласти

#КонецОбласти
