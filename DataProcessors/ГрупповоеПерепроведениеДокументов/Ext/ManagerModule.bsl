#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ПерепроведениеДокументов(СтруктураПараметров, АдресХранилища) Экспорт
	
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ?(СтруктураПараметров.ДатаНачала = Неопределено, '00010101', НачалоДня(СтруктураПараметров.ДатаНачала)));
	Если ЗначениеЗаполнено(СтруктураПараметров.ДатаОкончания) Тогда
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(СтруктураПараметров.ДатаОкончания));
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
		
	СписокОшибок = Новый ТаблицаЗначений;
	СписокОшибок.Колонки.Добавить("Текст");
	СписокОшибок.Колонки.Добавить("Ссылка");
	
	ВозвращаемыеПараметры = Новый Структура("ПроведеноДокументов, НеУдалосьПровести", 0, 0);
		
	Запрос.Текст = ПолучитьТекстЗапросаПоПервичнымДокументам();
	
	// Устанавливаем отбор по организации
	ТекстУсловияПоОрганизации = ?(ЗначениеЗаполнено(СтруктураПараметров.Организация), "И Журнал.организация В (&Организация)", "");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеОрганизации", ТекстУсловияПоОрганизации);
	
	// Устанавливаем отбор по периоду
	Если ЗначениеЗаполнено(СтруктураПараметров.ДатаОкончания) Тогда
		ТекстУсловияПериода = ?(ЗначениеЗаполнено(СтруктураПараметров.ДатаНачала), "И Журнал.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания", " И Журнал.Дата <= &ДатаОкончания");
	ИначеЕсли ЗначениеЗаполнено(СтруктураПараметров.ДатаНачала) Тогда
		ТекстУсловияПериода = " И Журнал.Дата >= &ДатаНачала";
	Иначе
		ТекстУсловияПериода = "";
	КонецЕсли; 
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеПериода", ТекстУсловияПериода);
	Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	Дата, Ссылка";
		
	ВсеДокументы = Запрос.Выполнить().Выгрузить();
			
	ВсегоДокументов = ВсеДокументы.Количество();
	
	Для Индекс = 0 ПО ВсегоДокументов - 1 Цикл
		
		СтрокаДокумента = ВсеДокументы[Индекс]; 				
		
		Если СтрокаДокумента.РучнаяКорректировка Тогда
			
			ТекстСообщения = НСтр(
			"ru = 'Не удалось провести документ ""%1"",
			|так как движения данного документа скорректированы вручную.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаДокумента.Ссылка);
			ДобавитьСообщениеобОшибке(СписокОшибок, ТекстСообщения, СтрокаДокумента.Ссылка);
			ВозвращаемыеПараметры.НеУдалосьПровести = ВозвращаемыеПараметры.НеУдалосьПровести + 1;
			
		Иначе
		
			ДокументОбъект = СтрокаДокумента.Ссылка.ПолучитьОбъект();
			
			ТекстСообщения = "";
			
			Попытка
				
				Если ДокументОбъект.ПроверитьЗаполнение() Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
					ВозвращаемыеПараметры.ПроведеноДокументов = ВозвращаемыеПараметры.ПроведеноДокументов + 1;
				Иначе
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Документ %1 не проведен!'"), Строка(ДокументОбъект));
					
					СообщенияПользователю = ПолучитьСообщенияПользователю(Истина);
					
					ЕстьПричина = Ложь;
					Для ИндексСообщения = 0 По СообщенияПользователю.ВГраница() Цикл
						Если СообщенияПользователю[ИндексСообщения].КлючДанных = ДокументОбъект.Ссылка Тогда
							Если НЕ ЕстьПричина Тогда
								ТекстСообщения = ТекстСообщения + НСтр("ru = ' По причине: '");
								ЕстьПричина = Истина;
							КонецЕсли;
							ТекстСообщения = ТекстСообщения + Символы.ПС + СообщенияПользователю[ИндексСообщения].Текст;
						Иначе
							СообщенияПользователю[ИндексСообщения].Сообщить();
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
			Исключение
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Документ %1 не проведен! По причине: %2 %3'"),
					Строка(ДокументОбъект), Символы.ПС, ОписаниеОшибки());
					
			КонецПопытки;
			
			Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
				
				ДобавитьСообщениеобОшибке(СписокОшибок, ТекстСообщения, ДокументОбъект);
				ВозвращаемыеПараметры.НеУдалосьПровести = ВозвращаемыеПараметры.НеУдалосьПровести + 1;
				Если СтруктураПараметров.ОстанавливатьсяПоОшибке Тогда
					Прервать;
				КонецЕсли;
				
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если СписокОшибок.Количество() > 0 Тогда
		ПоказатьОшибки(СписокОшибок);
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("Обработка ""групповое перепроведение документов""", ВремяНачала);
	
	ПоместитьВоВременноеХранилище(ВозвращаемыеПараметры, АдресХранилища);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ДобавитьСообщениеобОшибке(СписокОшибок, ТекстСообщения, ОбъектОшибки)

	СтрокаОшибки = СписокОшибок.Добавить();
	СтрокаОшибки.Текст  = ТекстСообщения;
	СтрокаОшибки.Ссылка = ОбъектОшибки;

КонецПроцедуры

Процедура ПоказатьОшибки(СписокОшибок)

	Для Каждого СтрокаОшибки Из СписокОшибок Цикл	
		ОбщегоНазначения.СообщитьПользователю(СтрокаОшибки.Текст, СтрокаОшибки.Ссылка, "Дата", "Объект");
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьТекстЗапросаПоПервичнымДокументам()

	ТекстЗапроса = "";
		
	Для Каждого МетаданныеДокумента Из Метаданные.Документы Цикл
		
		// У некоторых ролей нет прав на отдельные документы
		Если НЕ РольДоступна("ПолныеПрава") Тогда
			Если НЕ ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
				
		// Отсечь документы с префиксом Удалить
		Если Найти(МетаданныеДокумента.Имя, "Удалить") = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Если МетаданныеДокумента = Метаданные.Документы.РегламентированныйОтчет Тогда
			Продолжить;
		КонецЕсли;
				
		Если МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			
			ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ") + " 
				|	Дата КАК Дата,
				|	""" + МетаданныеДокумента.Имя + """ КАК ИмяДокумента, 
				|	""" + МетаданныеДокумента.Синоним + """ КАК СинонимДокумента, 
				|	Журнал.Ссылка КАК Ссылка, 
				|	" + ?(МетаданныеДокумента.Реквизиты.Найти("ВидОперации") <> Неопределено, "Журнал.ВидОперации", "Неопределено") + " КАК ВидОперации,
				|	" + ?(МетаданныеДокумента.Реквизиты.Найти("РучнаяКорректировка") <> Неопределено, "РучнаяКорректировка", "ЛОЖЬ") + " КАК РучнаяКорректировка,
				|	ЛОЖЬ КАК РеглДокументНДС,
				|	ЛОЖЬ КАК Выполнена,
				|	Журнал.Представление КАК Представление,
				|	ЛОЖЬ КАК БылаОшибка
				|ИЗ Документ." + МетаданныеДокумента.Имя + " КАК Журнал
				|ГДЕ Проведен 
				|	И &УсловиеПериода
				|	" + ?(МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено, "И &УсловиеОрганизации", "");
						
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецЕсли