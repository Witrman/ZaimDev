&НаКлиенте
Перем ВыполняетсяЗакрытие;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Параметры.ОбъектОтбораКатегорий) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр(
		"ru = 'Данная обработка является служебной.
		|Открытие формы данной обработки возможно только из форм других объектов.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Объект.ОбъектОтбораКатегорий = Параметры.ОбъектОтбораКатегорий;
	Объект.НазначениеКатегорий = ОбщегоНазначенияБК.ПолучитьСписокНазначенийСвойствКатегорийОбъектовПоСсылке(Объект.ОбъектОтбораКатегорий);
	
	ПеречитатьНаСервере();

	ТекстЗаголовка = НСтр("ru = 'Категории: %1'");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Объект.ОбъектОтбораКатегорий);
	ЭтаФорма.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ОбработкаЗаписиНовогоНаСервере(НовыйОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаЗаписиНовогоНаСервере(НовыйОбъект)
	
	Если ТипЗнч(НовыйОбъект) = Тип("СправочникСсылка.УдалитьКатегорииОбъектов") Тогда
		
		ОбъектОбработка = РеквизитФормыВЗначение("Объект");	
		ОбъектОбработка.ПроверитьДобавитьНовуюКатегорию(НовыйОбъект);
		ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ВыполняетсяЗакрытие Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		
		ТекстВопроса = НСтр("ru = 'Измененные категории объекта не были записаны. Сохранить изменения?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьНаСервере();
		
		Если НЕ Модифицированность Тогда
			ВыполняетсяЗакрытие = Истина;
			Закрыть();
		КонецЕсли;
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		ВыполняетсяЗакрытие = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ КатегорииОбъекта

&НаКлиенте
Процедура КатегорииОбъектаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	Если ТипЗнч(Объект.НазначениеКатегорий) = Тип("СписокЗначений") Тогда
		Если Объект.НазначениеКатегорий.Количество() <> 0 Тогда
			ЗначенияЗаполнения.Вставить("НазначениеКатегории", Объект.НазначениеКатегорий[0].Значение);	
		КонецЕсли;
	Иначе
		ЗначенияЗаполнения.Вставить("НазначениеКатегории", Объект.НазначениеКатегорий);	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.УдалитьКатегорииОбъектов.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорииОбъектаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.КатегорииОбъекта.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		
		ПометкаУдаления = ИнвертироватьПометкуУдаленияКатегории(ТекущиеДанные.Категория);
		
		Если ПометкаУдаления Тогда
			ТекущиеДанные.ИндексКартинки = 4;	
		Иначе
			ТекущиеДанные.ИндексКартинки = 3;	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сохранить(Команда)
	
	ЗаписатьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Перечитать(Команда)
	
	Если Модифицированность Тогда
		ТекстВопроса = НСтр("ru = 'Измененные категории объекта не были записаны. Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПеречитатьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОкОтмена);
	Иначе
		ПеречитатьНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ПеречитатьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаписатьНаСервере();
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаписатьНаСервере()
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");	
	
	Если ОбъектОбработка.ЗаписатьКатегорииОбъекта() Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");

КонецПроцедуры

&НаСервере
Процедура ПеречитатьНаСервере()
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");	
	ОбъектОбработка.ПрочитатьЗаполнитьКатегорииОбъекта();
	ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИнвертироватьПометкуУдаленияКатегории(Категория)
	
	ОбъектКатегория = Категория.ПолучитьОбъект();
	
	Попытка
		ОбъектКатегория.УстановитьПометкуУдаления(НЕ ОбъектКатегория.ПометкаУдаления, Истина);
	Исключение
		ВызватьИсключение "Не удалось изменить пометку удаления категории:" + Символы.ПС + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат ОбъектКатегория.ПометкаУдаления;
	
КонецФункции

ВыполняетсяЗакрытие = Ложь;