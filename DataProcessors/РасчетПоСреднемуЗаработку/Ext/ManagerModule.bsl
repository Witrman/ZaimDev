#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция РассчитатьЧислоДней(ДатаНач, ДатаКон, КалендарныеИлиРабочие) Экспорт

	ЧислоДней = 0;

	Если НЕ ЗначениеЗаполнено(ДатаНач) ИЛИ НЕ ЗначениеЗаполнено(ДатаКон) Тогда
		Возврат ЧислоДней;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", 	ДатаНач);
	Запрос.УстановитьПараметр("ДатаОкончания", 	ДатаКон);
	Запрос.УстановитьПараметр("Праздник", 		Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь", КалендарныеГрафики.ПроизводственныйКалендарьРеспубликиКазахстан());
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СУММА(" + ?(КалендарныеИлиРабочие = "Календарные", "ВЫБОР КОГДА Календарь.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ", 
														   "ВЫБОР КОГДА Календарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ") + ") КАК ЧислоДней
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК Календарь
	|ГДЕ
	|	Календарь.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Календарь.ПроизводственныйКалендарь = &ПроизводственныйКалендарь
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЧислоДней = Выборка.ЧислоДней;
	Иначе
		ТекстИсключения = НСтр("ru = 'Не заполнен производственный календарь за %1'");
		ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстИсключения, Формат(НачалоМесяца(ДатаНач), "ДФ='ММММ гггг'"));
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;

	Возврат ЧислоДней;

КонецФункции

Функция ОпределитьИспользованиеСреднеЧасовогоЗаработка(Организация, Сотрудник, ДатаНачала) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Организация));
	Запрос.УстановитьПараметр("ДатаНачалаСобытия", ДатаНачала);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			&ДатаНачалаСобытия,
	|			Сотрудник = &Сотрудник
	|			И Организация = &ГоловнаяОрганизация
	|			И ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)) КАК ПлановыеНачисления
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОсновнойВидРасчетаПоЧасам = Ложь;	
	
	Если Выборка.Следующий() Тогда
		Если Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеОтОбратногоПоЧасам
		 ИЛИ Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам
		 ИЛИ Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоЧасам
		 ИЛИ Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоЧасам
		 ИЛИ Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке Тогда
			ОсновнойВидРасчетаПоЧасам = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОсновнойВидРасчетаПоЧасам;

КонецФункции

// Функция возвращает дату, отстоящую от заданной на указанное число календарных дней
// Параметры:
//	ДатаНач - дата, от которой отсчитывать
//	ДнейПериода - число календарных дней период, дату окончания которого вернуть
//
// Возвращаемое значение:
//	Дата - дата окончания периода
//
Функция ПолучитьДатуОкончанияПоЧислуДнейПериода(ДатаНач, ДнейПериода) Экспорт

	ДатаКон = '00010101';
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНач);
	Запрос.УстановитьПараметр("ДнейПериода", ДнейПериода);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	СледДаты.Дата КАК ДатаКалендаря,
	               |	СУММА(ВЫБОР 
	               |			КОГДА ДниПериода.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		 КОНЕЦ) КАК КалендарныеДни
	               |ИЗ
	               |	РегистрСведений.ДанныеПроизводственногоКалендаря КАК СледДаты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДниПериода
	               |		ПО (ДниПериода.Дата МЕЖДУ &ДатаНачала И СледДаты.Дата)
	               |ГДЕ
	               |	// считаем, что в пределах тройного периода обязательно будет нужная дата
	               |	СледДаты.Дата МЕЖДУ &ДатаНачала И ДОБАВИТЬКДАТЕ(&ДатаНачала, ДЕНЬ, 3 * &ДнейПериода)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СледДаты.Дата
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ВЫБОР 
	               |			КОГДА ДниПериода.ВидДня <> ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		 КОНЕЦ) = &ДнейПериода
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаКалендаря";

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДатаКон = Выборка.ДатаКалендаря;
	КонецЕсли;

	Возврат ДатаКон;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ Параметры = Неопределено И Параметры.Свойство("Режим") = Ложь Тогда
		ВызватьИсключение НСтр("ru = 'Обработка предназначена для служебного использования'");		
	КонецЕсли;
	
	Если Параметры.Режим = "РасчетОтпуска" ИЛИ Параметры.Режим = "РасчетКомпенсации" Тогда
		ВыбраннаяФорма = "ФормаРасчетОтпуска";
	Иначе
		ВыбраннаяФорма = "ФормаРасчетБольничного";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СреднийЗаработок";
	КомандаПечати.Представление = НСтр("ru = 'Печать'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.НеВыполнятьЗаписьВФорме = Истина;
	КомандаПечати.Порядок = 50;
	КомандаПечати.Обработчик = "Форма.ПечатьСреднегоЗаработка";
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать Опись ОС при вводе остатков
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СреднийЗаработок");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СреднийЗаработок",
			НСтр("ru = 'Печать'"),
			ПечатьСреднегоЗаработка(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,
			"Обработка.РасчетПоСреднемуЗаработку.ПФ_MXL_Макет");
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьСреднегоЗаработка(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеОбъекта = ПараметрыПечати.ДанныеОбработки;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.РасчетПоСреднемуЗаработку.ПФ_MXL_Макет");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработка";
	
	Если ДанныеОбъекта.ИспользоватьСреднеЧасовойЗаработок Тогда
		ВидВремени = "часов";
		ВидЗаработка = "Среднечасовой";
	Иначе
		ВидВремени = "дней";
		ВидЗаработка = "Среднедневной";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(ДанныеОбъекта.Организация));
	Запрос.УстановитьПараметр("ДатаНачалаСобытия", 	 ДанныеОбъекта.ДатаНачала);
	Запрос.УстановитьПараметр("Сотрудник", 			 ДанныеОбъекта.Сотрудник);	
	Запрос.УстановитьПараметр("ФизЛицо", 			 ДанныеОбъекта.Сотрудник.ФизЛицо);	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, ФизическиеЛица.Наименование) КАК ФИОРаботника,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|		&ДатаНачалаСобытия,
	|		Сотрудник = &Сотрудник
	|		И Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацииСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|	ПО (ИСТИНА)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|			ПО ФизическиеЛица.Ссылка = &ФизЛицо";

	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры,Выборка);
	КонецЕсли;
	
	СекцияШапка.Параметры.Представление = ДанныеОбъекта.Ссылка.Метаданные().Синоним + " № " + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеОбъекта.Ссылка.Номер, ДанныеОбъекта.Ссылка)
							  				+ " от " + Формат(ДанныеОбъекта.Ссылка.Дата, "ДФ='дд ММММ гггг'");
	СекцияШапка.Параметры.НаименованиеОрганизации = ?(НЕ ПустаяСтрока(ДанныеОбъекта.Организация.НаименованиеПолное), ДанныеОбъекта.Организация.НаименованиеПолное, ДанныеОбъекта.Организация.Наименование);
	Если НЕ ДанныеОбъекта.КомпенсацияОтпуска Тогда
		СекцияШапка.Параметры.ОписаниеОплачиваемогоПериода = "с " + Формат(ДанныеОбъекта.ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(ДанныеОбъекта.ДатаОкончания, "ДФ=dd.MM.yyyy");
	Иначе
		СекцияШапка.Параметры.ОписаниеОплачиваемогоПериода = Формат(ДанныеОбъекта.ДатаНачала, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	ДатыРасчетногоПериода           = Обработки.РасчетПоСреднемуЗаработку.ПолучитьДатыРасчетногоПериода(ДанныеОбъекта.Организация, ДанныеОбъекта.Сотрудник, ДанныеОбъекта.ДатаНачала, ДанныеОбъекта.КомпенсацияОтпуска);
	ДатаНачалаРасчетногоПериода 	= ДатыРасчетногоПериода.ДатаНачалаРасчетногоПериода;
	ДатаОкончанияРасчетногоПериода 	= ДатыРасчетногоПериода.ДатаОкончанияРасчетногоПериода;

	СекцияШапка.Параметры.ДатаНачалаРасчетногоПериода = Формат(ДатаНачалаРасчетногоПериода, "ДФ=dd.MM.yyyy");
	СекцияШапка.Параметры.ДатаОкончанияРасчетногоПериода = Формат(ДатаОкончанияРасчетногоПериода, "ДФ=dd.MM.yyyy");
	СекцияШапка.Параметры.СпособРасчета = Строка(ДанныеОбъекта.СпособРасчета);
	
	ТабДокумент.Вывести(СекцияШапка);
	
	СекцияЗаголовокНачисленийОбщий = Макет.ПолучитьОбласть("ЗаголовокНачислений");
	СекцияМесячныйЗаработокОбщий = Макет.ПолучитьОбласть("МесячныйЗаработок");
	СекцияСерединаОтчетаОбщий = Макет.ПолучитьОбласть("СерединаОтчета");
	СекцияЗаголовокПремий = Макет.ПолучитьОбласть("ЗаголовокПремий");
	СекцияПремии = Макет.ПолучитьОбласть("Премии");
	СекцияИтогПремий = Макет.ПолучитьОбласть("ИтогПремий");
	
	СекцияРасчетСреднегоЗаработка = Макет.ПолучитьОбласть("РасчетСреднегоЗаработка");
	СекцияРасчетСреднегоЗаработка.Параметры.ВидВремени = ВидВремени;
	СекцияРасчетСреднегоЗаработка.Параметры.ВидЗаработка = ВидЗаработка;
	
	СекцияЗаголовокНачисленоОбщий = Макет.ПолучитьОбласть("ЗаголовокНачислено|РасчетОбщий");
	СекцияНачисленоОбщий = Макет.ПолучитьОбласть("Начислено|РасчетОбщий");
	СекцияПодвалОбщий = Макет.ПолучитьОбласть("Подвал|РасчетОбщий");

	СекцияЗаголовокНачисленоДни = Макет.ПолучитьОбласть("ЗаголовокНачислено|НачисленоДни");
	СекцияНачисленоДни = Макет.ПолучитьОбласть("Начислено|НачисленоДни");
	СекцияПодвалНачисленоДни = Макет.ПолучитьОбласть("Подвал|НачисленоДни");

	СекцияЗаголовокНачисленоЧасы = Макет.ПолучитьОбласть("ЗаголовокНачислено|НачисленоЧасы");
	СекцияНачисленоЧасы = Макет.ПолучитьОбласть("Начислено|НачисленоЧасы");
	СекцияПодвалНачисленоЧасы = Макет.ПолучитьОбласть("Подвал|НачисленоЧасы");

	СекцияЗаголовокНачисленоКалендарныеДни = Макет.ПолучитьОбласть("ЗаголовокНачислено|НачисленоКалендарныеДни");
	СекцияНачисленоКалендарныеДни = Макет.ПолучитьОбласть("Начислено|НачисленоКалендарныеДни");
	СекцияПодвалКалендарныеДни = Макет.ПолучитьОбласть("Подвал|НачисленоКалендарныеДни");

	СекцияЗаголовокНачисленоОплата = Макет.ПолучитьОбласть("ЗаголовокНачислено|Оплата");
	СекцияНачисленоОплата = Макет.ПолучитьОбласть("Начислено|Оплата");
	СекцияПодвалОплата = Макет.ПолучитьОбласть("Подвал|Оплата");
	
	НомерСекции = 1;
	СекцияЗаголовокНачисленийОбщий.Параметры.НомерСекции 	= НомерСекции;
	СекцияЗаголовокНачисленийОбщий.Параметры.ВидВремени 	= ВРег(Лев(ВидВремени, 1)) + Сред(ВидВремени, 2);
	ТабДокумент.Вывести(СекцияЗаголовокНачисленийОбщий);
	
	// начисления за расчетный период
	ВыводитьПремии = Ложь;
	ВсегоЗаработка = 0;
	ВсегоДнейЧасовРасчетногоПериода = 0;
	
	СреднийЗаработок = ПолучитьИзВременногоХранилища(ДанныеОбъекта.АдресСреднийЗаработок);

	СреднийЗаработок.Сортировать("БазовыйПериодНачало, ВидСтроки, ЧислоМесяцев, ДатаНачалаПериодаПремии");
	
	Для Каждого Выборка Из СреднийЗаработок Цикл
		// премии пойдут отдельной секцией
		Если Найти(Выборка.ВидСтроки, "Премия") <> 0 Тогда
			Если Выборка.Размер <> 0 Тогда
				ВыводитьПремии = Истина;
			КонецЕсли;
			Продолжить;
		КонецЕсли;	
		
		// если сумма неиндексируемого заработка = 0, то не выводим
		Если Выборка.ВидСтроки <> "Заработок" И Выборка.Результат = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		СекцияМесячныйЗаработокОбщий.Параметры.РасчетныйПериод 					= ОписаниеПериода(Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец);
		СекцияМесячныйЗаработокОбщий.Параметры.Результат						= Выборка.Размер;
		СекцияМесячныйЗаработокОбщий.Параметры.КоэффициентИндексации			= ?(Найти(Выборка.ВидСтроки, "без индексации")<> 0, "без индексации", Выборка.КоэффициентИндексации);
		СекцияМесячныйЗаработокОбщий.Параметры.ВсегоЗаработка					= Выборка.Результат;
		Если ДанныеОбъекта.ИспользоватьСреднеЧасовойЗаработок Тогда
			СекцияМесячныйЗаработокОбщий.Параметры.ВсегоДнейЧасовРасчетногоПериода	= Выборка.Часы;
			ВсегоДнейЧасовРасчетногоПериода = ВсегоДнейЧасовРасчетногоПериода + Выборка.Часы;
		Иначе
			СекцияМесячныйЗаработокОбщий.Параметры.ВсегоДнейЧасовРасчетногоПериода	= Выборка.Дни;
			ВсегоДнейЧасовРасчетногоПериода = ВсегоДнейЧасовРасчетногоПериода + Выборка.Дни;
		КонецЕсли;
		
		ТабДокумент.Вывести(СекцияМесячныйЗаработокОбщий);
		
		// копим итоги
		ВсегоЗаработка = ВсегоЗаработка + Выборка.Результат;	    
	КонецЦикла;
	
	// итого по заработку
	СекцияСерединаОтчетаОбщий.Параметры.ВсегоЗаработка = ВсегоЗаработка;
	СекцияСерединаОтчетаОбщий.Параметры.ВсегоДнейЧасовРасчетногоПериода = ВсегоДнейЧасовРасчетногоПериода;
	ТабДокумент.Вывести(СекцияСерединаОтчетаОбщий);
	
	// премии за расчетный период
	Если ВыводитьПремии Тогда
		
		НомерСекции = НомерСекции + 1;
		СекцияЗаголовокПремий.Параметры.НомерСекции = НомерСекции;
		ТабДокумент.Вывести(СекцияЗаголовокПремий);
		
		ВсегоУчтеноПремий = 0;
		
		ТекущееЧислоМесяцев = Неопределено;
		ТекущийБазовыйПериодНачало = Неопределено;
		ТекущийВидСтроки = Неопределено;
		
		Для Каждого Выборка Из СреднийЗаработок Цикл
			// основной заработок уже вывели
			Если Найти(Выборка.ВидСтроки, "Премия") = 0 ИЛИ Выборка.Результат = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТекущийБазовыйПериодНачало <> Выборка.БазовыйПериодНачало
					Или ТекущееЧислоМесяцев <> Выборка.ЧислоМесяцев
					Или ТекущийВидСтроки <> Выборка.ВидСтроки Тогда
				
				ТекущийБазовыйПериодНачало = Выборка.БазовыйПериодНачало;
				ТекущееЧислоМесяцев = Выборка.ЧислоМесяцев;
				ТекущийВидСтроки = Выборка.ВидСтроки;
				
				Если Выборка.ЧислоМесяцев > 1 Тогда
					// длительные премии разбиваем по каждому месяцу
					Для Н = 0 По СекцияПремии.Параметры.Количество() - 1 Цикл
						СекцияПремии.Параметры.Установить(Н, "");
					КонецЦикла;
					
					// определим общие для премии цифры
					ИтогоДатаНачалаПериодаПремии = '29991231';
					ИтогоДатаОкончанияПериодаПремии = '00010101';
					ИтогоУчтеноПремий = 0;
					Для Индекс = 0 По СреднийЗаработок.Количество() - 1 Цикл
					
						Если СреднийЗаработок[Индекс].ВидСтроки = ТекущийВидСтроки
								И СреднийЗаработок[Индекс].БазовыйПериодНачало = ТекущийБазовыйПериодНачало
								И СреднийЗаработок[Индекс].ЧислоМесяцев = ТекущееЧислоМесяцев Тогда
						
							ИтогоДатаНачалаПериодаПремии = Мин(ИтогоДатаНачалаПериодаПремии, СреднийЗаработок[Индекс].ДатаНачалаПериодаПремии);
							ИтогоДатаОкончанияПериодаПремии = Макс(ИтогоДатаОкончанияПериодаПремии, СреднийЗаработок[Индекс].ДатаОкончанияПериодаПремии);
							ИтогоУчтеноПремий = ИтогоУчтеноПремий + СреднийЗаработок[Индекс].Результат;
							
						КонецЕсли;	
						
					КонецЦикла;
					
					СекцияПремии.Параметры.ТекстПремии = ОписаниеПериода(Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец) + 
															" за " + ОписаниеПериода(ИтогоДатаНачалаПериодаПремии, ИтогоДатаОкончанияПериодаПремии) + 
															" (" + Выборка.ЧислоМесяцев + " мес), в т.ч. за";
					СекцияПремии.Параметры.Результат = Выборка.Размер;
					СекцияПремии.Параметры.ВсегоУчтеноПремий = ИтогоУчтеноПремий;
					ТабДокумент.Вывести(СекцияПремии);
				КонецЕсли;
					
			КонецЕсли;
			
			Если Выборка.ЧислоМесяцев > 1 Тогда
				СекцияПремии.Параметры.ТекстПремии = "    " + ОписаниеПериода(Выборка.ДатаНачалаПериодаПремии, Выборка.ДатаОкончанияПериодаПремии);
			Иначе
				// премия за 1 месяц 
				СекцияПремии.Параметры.ТекстПремии = ОписаниеПериода(Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец) + 
														" за " + ОписаниеПериода(Выборка.ДатаНачалаПериодаПремии, Выборка.ДатаОкончанияПериодаПремии) + 
														" (" + Выборка.ЧислоМесяцев + " мес)";
			КонецЕсли;
			
			СекцияПремии.Параметры.Результат				= Окр(Выборка.Результат / ?(Выборка.КоэффициентИндексации=0, 1, Выборка.КоэффициентИндексации), 2);
			СекцияПремии.Параметры.КоэффициентИндексации	= ?(Найти(Выборка.ВидСтроки, "без индексации") <> 0, "без индексации", Выборка.КоэффициентИндексации);
			СекцияПремии.Параметры.ВсегоПремий				= Выборка.Результат;
			СекцияПремии.Параметры.ВсегоУчтеноПремий		= Выборка.Результат;
			
			ТабДокумент.Вывести(СекцияПремии);
			
			// копим итоги
			ВсегоУчтеноПремий = ВсегоУчтеноПремий + Выборка.Результат;			
		КонецЦикла;
	
		// итого премий
		СекцияИтогПремий.Параметры.ВсегоУчтеноПремий = ВсегоУчтеноПремий;
		ТабДокумент.Вывести(СекцияИтогПремий);
		
	КонецЕсли;
	
	// среднедневной заработок
	
	ВсегоНачислено = СреднийЗаработок.Итог("Результат");
	Если ДанныеОбъекта.ИспользоватьСреднеЧасовойЗаработок Тогда
		ВсегоВремя = СреднийЗаработок.Итог("Часы");
	Иначе
		ВсегоВремя = СреднийЗаработок.Итог("Дни");
	КонецЕсли;
	
	Если ВсегоВремя <> 0 Тогда
		Заработок = Окр(ВсегоНачислено / ВсегоВремя, 2);
	Иначе
		Заработок = 0;
	КонецЕсли;
	
	НомерСекции = НомерСекции + 1;
	СекцияРасчетСреднегоЗаработка.Параметры.НомерСекции = НомерСекции;
	СекцияРасчетСреднегоЗаработка.Параметры.ВсегоДнейЧасовРасчетногоПериода = ВсегоВремя;
	СекцияРасчетСреднегоЗаработка.Параметры.ОбщийЗаработок = ВсегоНачислено;
	СекцияРасчетСреднегоЗаработка.Параметры.Средний = Заработок;
	
	ТабДокумент.Вывести(СекцияРасчетСреднегоЗаработка);
	
	// Начисленные суммы
	ВсегоРабочихДнейОплачиваемогоПериода = 0;
	ВсегоРабочихЧасовОплачиваемогоПериода = 0;
	ВсегоКалендарныхДнейОплачиваемогоПериода = 0;
	ВсегоНачислено = 0;
	
	// Определим какие графы выводим в итоговый документ	
	ВыводитьЧасы 			= Ложь;
	ВыводитьДни 			= Ложь;
	ВыводитьКалендарныеДни 	= Ложь;
	
	Если ДанныеОбъекта.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска Тогда
		ВыводитьКалендарныеДни = Истина;
		Если ДанныеОбъекта.ДатаНачала >= ПроведениеРасчетовСервер.ПолучитьДатуНачалаРасчетаСреднегоЗаработкаТолькоПоРабочимДням() Тогда
			ВыводитьДни = Истина;
			Если ДанныеОбъекта.ИспользоватьСреднеЧасовойЗаработок Тогда
				ВыводитьЧасы = Истина;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ВыводитьДни = Истина;
		Если ДанныеОбъекта.ИспользоватьСреднеЧасовойЗаработок Тогда
			ВыводитьЧасы = Истина;
		КонецЕсли;
	КонецЕсли;
	
	НомерСекции = НомерСекции + 1;
	СекцияЗаголовокНачисленоОбщий.Параметры.НомерСекции = НомерСекции;
	ТабДокумент.Вывести(СекцияЗаголовокНачисленоОбщий);
	Если ВыводитьДни Тогда
		ТабДокумент.Присоединить(СекцияЗаголовокНачисленоДни);
	КонецЕсли;
	Если ВыводитьЧасы Тогда
		ТабДокумент.Присоединить(СекцияЗаголовокНачисленоЧасы);
	КонецЕсли;
	Если ВыводитьКалендарныеДни Тогда
		ТабДокумент.Присоединить(СекцияЗаголовокНачисленоКалендарныеДни);
	КонецЕсли;
	ТабДокумент.Присоединить(СекцияЗаголовокНачисленоОплата);
	
	Начисления = ПолучитьИзВременногоХранилища(ДанныеОбъекта.АдресНачисления);
	
	// строки начислений
	Для Каждого Выборка Из Начисления Цикл
		
		СекцияНачисленоОбщий.Параметры.РасчетныйПериод 					= ОписаниеПериода(Выборка.ДатаНачала, Выборка.ДатаОкончания);
		СекцияНачисленоОбщий.Параметры.ВидРасчетаНаименование 			= Выборка.ВидРасчета.Наименование;
		СекцияНачисленоОбщий.Параметры.КоэффициентИндексации 			= Выборка.КоэффициентИндексации;
		ТабДокумент.Вывести(СекцияНачисленоОбщий);
		
		Если ВыводитьДни Тогда
			СекцияНачисленоДни.Параметры.ВсегоРабочихДнейОплачиваемогоПериода					= Выборка.РабочиеДни;
			ТабДокумент.Присоединить(СекцияНачисленоДни);
		КонецЕсли;
		Если ВыводитьЧасы Тогда
			СекцияНачисленоЧасы.Параметры.ВсегоРабочихЧасовОплачиваемогоПериода					= Выборка.РабочиеЧасы;
			ТабДокумент.Присоединить(СекцияНачисленоЧасы);
		КонецЕсли;
		Если ВыводитьКалендарныеДни Тогда
			СекцияНачисленоКалендарныеДни.Параметры.ВсегоКалендарныхДнейОплачиваемогоПериода	= Выборка.КалендарныеДни;
			ТабДокумент.Присоединить(СекцияНачисленоКалендарныеДни);
		КонецЕсли;
		
		СекцияНачисленоОплата.Параметры.ВсегоНачислено					= Выборка.Результат;
		ТабДокумент.Присоединить(СекцияНачисленоОплата);
		
		// копим итоги
		ВсегоРабочихДнейОплачиваемогоПериода = ВсегоРабочихДнейОплачиваемогоПериода + Выборка.РабочиеДни;
		ВсегоРабочихЧасовОплачиваемогоПериода = ВсегоРабочихЧасовОплачиваемогоПериода + Выборка.РабочиеЧасы;
		ВсегоКалендарныхДнейОплачиваемогоПериода = ВсегоКалендарныхДнейОплачиваемогоПериода + Выборка.КалендарныеДни;
		ВсегоНачислено = ВсегоНачислено + Выборка.Результат;
	
	КонецЦикла;
	
	// подвал начислений
	ТабДокумент.Вывести(СекцияПодвалОбщий);
	
	Если ВыводитьДни Тогда
		СекцияПодвалНачисленоДни.Параметры.ВсегоРабочихДнейОплачиваемогоПериода = ВсегоРабочихДнейОплачиваемогоПериода;
		ТабДокумент.Присоединить(СекцияПодвалНачисленоДни);
	КонецЕсли;
	Если ВыводитьЧасы Тогда
		СекцияПодвалНачисленоЧасы.Параметры.ВсегоРабочихЧасовОплачиваемогоПериода = ВсегоРабочихЧасовОплачиваемогоПериода;
		ТабДокумент.Присоединить(СекцияПодвалНачисленоЧасы);
	КонецЕсли;
	Если ВыводитьКалендарныеДни Тогда
		СекцияПодвалКалендарныеДни.Параметры.ВсегоКалендарныхДнейОплачиваемогоПериода = ВсегоКалендарныхДнейОплачиваемогоПериода;
		ТабДокумент.Присоединить(СекцияПодвалКалендарныеДни);
	КонецЕсли;
	
	СекцияПодвалОплата.Параметры.ВсегоНачислено = ВсегоНачислено;
	ТабДокумент.Присоединить(СекцияПодвалОплата);
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция формирует представление периода по дате начала и дате окончания.
//
// Параметры
//  ДатаНачала	   – Дата – дата начала периода.
//  ДатаОкончания  – Дата – дата окончания периода.
//  ДатаНачала	   – Булево – признак того, что описание периода будет сформирован 
//					 без указания чисел месяца.
//
// Возвращаемое значение:
//   Строка   – строковое представление периода.
//
Функция ОписаниеПериода(ДатаНачала, ДатаОкончания, СДатами = Истина) Экспорт
	
	ЧислоНачала		= День(ДатаНачала);
	ЧислоОкончания	= День(ДатаОкончания);
	ОписаниеМесяцаГода = Лев(Формат(ДатаНачала,   "ДФ = 'MMMM'"),3)+" "+ Формат(ДатаНачала,    "ДФ = 'гг'");
	ОписаниеМесяца2    = Лев(Формат(ДатаОкончания,"ДФ = 'MMMM'"),3)+" "+ Формат(ДатаОкончания, "ДФ = 'гг'");
	
	Если НачалоМесяца(ДатаНачала) <> НачалоМесяца(ДатаОкончания) Тогда  
		
		Если (НачалоДня(ДатаНачала) = НачалоМесяца(ДатаНачала)) Тогда
			Перваяполовинадат = "" + ОписаниеМесяцаГода;
		Иначе
			Перваяполовинадат = ?(СДатами, "" + ЧислоНачала, "") + " " + ОписаниеМесяцаГода; 
		КонецЕсли;
		
		Если (КонецДня(ДатаОкончания) = КонецМесяца(ДатаОкончания)) Тогда
			ВтораяПоловинаДат = ОписаниеМесяца2 ;
		Иначе
			ВтораяПоловинаДат = ?(СДатами, "" + ЧислоОкончания, "") + " " + ОписаниеМесяца2;
		КонецЕсли;
		
		Возврат Перваяполовинадат + "-" + ВтораяПоловинаДат;
		
	Иначе
		
		Если (НачалоДня(ДатаНачала) = НачалоМесяца(ДатаНачала)) И (КонецДня(ДатаОкончания) = КонецМесяца(ДатаОкончания)) Тогда
			Возврат ОписаниеМесяцаГода;
		ИначеЕсли ЧислоНачала = ЧислоОкончания Тогда
			Возврат ?(СДатами, "" + ЧислоНачала, "") + " " + ОписаниеМесяцаГода;
		Иначе
			Возврат ?(СДатами ,"" + ЧислоНачала + "-" + ЧислоОкончания, "") + " " + ОписаниеМесяцаГода;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции	// ОписаниеПериода 

// функция возвращает дату начала расчетного периода с учетом даты последнего приема работника
//
Функция ПолучитьДатыРасчетногоПериода(Организация, Сотрудник, ДатаНачала, КомпенсацияОтпуска = ложь) Экспорт

	ДатаНачалаРасчетногоПериода = ДобавитьМесяц(НачалоМесяца(ДатаНачала), -12);
	ДатаОкончанияРасчетногоПериода = НачалоМесяца(ДатаНачала) - 1;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаНачалаСобытия", ДатаНачала);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Организация));
	Запрос.УстановитьПараметр("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Период
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаНачалаСобытия,
	|			Сотрудник = &Сотрудник
	|			И Организация = &ГоловнаяОрганизация
	|			И ПричинаИзмененияСостояния = &Прием) КАК Работники
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если НачалоМесяца(Выборка.Период) > ДатаНачалаРасчетногоПериода Тогда
			ДатаПриема = Выборка.Период;
			ДатаНачалаРасчетногоПериода = Макс(НачалоМесяца(ДатаПриема), ДатаПриема);
		КонецЕсли;
	Иначе

		ДатаПриема = Неопределено;
		// странная ситуация - нет приема для работника на дату начала события
		ТекстСообщения = НСтр("ru = 'На %1 %2 не принят в организацию'");  
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Формат(ДатаНачала, "ДФ=дд.ММ.гггг"), Сотрудник.Наименование);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);

	КонецЕсли;
	
	// Корректируем период расчета.
	Если НЕ ДатаПриема = Неопределено Тогда
		
		КоличествоМесяцевПериодаРасчетаСреднего = (Год(ДатаНачала) - Год(ДатаПриема)) * 12 + Месяц(ДатаНачала) - Месяц(ДатаПриема);
	
		// период фактически отработанного времени, если работник проработал у работодателя менее двенадцати календарных месяцев
		Если КоличествоМесяцевПериодаРасчетаСреднего < 12 Тогда
			Если КомпенсацияОтпуска Тогда
				ДатаОкончанияРасчетногоПериода = ДатаНачала
			Иначе
				ДатаОкончанияРасчетногоПериода = ДатаНачала - 1;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

	ДатыРасчетногоПериода = Новый Структура("ДатаНачалаРасчетногоПериода, ДатаОкончанияРасчетногоПериода", ДатаНачалаРасчетногоПериода, ДатаОкончанияРасчетногоПериода);

	Возврат ДатыРасчетногоПериода;

КонецФункции

#КонецЕсли

