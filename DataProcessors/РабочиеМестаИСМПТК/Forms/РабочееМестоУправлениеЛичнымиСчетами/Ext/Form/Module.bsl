
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		//БМ_ИСМПТ ТРЕБУЕТСЯ_РАССМОТРЕНИЕ	Доработать обновление при открытии без вызова окна авторизации
		
		//ТокенАвторизации = ИнтеграцияИСМПТККлиент.ПолучитьТокенАвторизации(Организация);
		//
		//Если ТокенАвторизации <> Неопределено Тогда
		//	
		//	ОбновитьДанныеПоСчетам(ТокенАвторизации);
		//	
		//КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	
	Счета.Очистить();
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для получения лицевых счетов необходимо указать организацию'");
		ТекстСообщения = ИнтеграцияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения,
		Организация);
		
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
	Иначе
		
		ТокенАвторизации = ИнтеграцияИСМПТККлиент.ПолучитьТокенАвторизации(Организация);
		
		Если ТокенАвторизации = Неопределено Тогда
			
			ТекстСообщенияТокенНеПолучен = НСтр("ru='Операция прервана: не получены данные ЭЦП.'");
			ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщенияТокенНеПолучен);
			Возврат;
			
		КонецЕсли;
		ОбновитьДанныеПоСчетам(ТокенАвторизации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПолучениеСчета(Команда)
	
	Если Элементы.Счета.ТекущиеДанные = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Для оформления необходимо выбрать счет'");
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, );
		
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация",   ?(Организация=Неопределено,Неопределено, Организация));
		ПараметрыФормы.Вставить("НомерЛицевогоСчета", Элементы.Счета.ТекущиеДанные.НомерСчета);
		
		ОткрытьФорму("Обработка.ОбменИСМПТК.Форма.ПолучениеСчета", ПараметрыФормы, ЭтотОбъект, , , ,);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеПоСчетам(ТокенАвторизации)
	
	ОбработкаОбменИСМПТ = ИнтеграцияИСМПТКПовтИсп.ОбработкаОбменИСМПТ();
	РезультатЗапроса = ОбработкаОбменИСМПТ.ПолучитьСостояниеСчетовПоВсемГруппам(ТокенАвторизации);
	Если Не ЗначениеЗаполнено(РезультатЗапроса.ТекстОшибки) Тогда
		Счета.Очистить();
		Для каждого ИнформацияПоСчету Из РезультатЗапроса.ДанныеОСчетах Цикл
			Если ИнформацияПоСчету.Свойство("contractId") И ИнформацияПоСчету.Свойство("balance") Тогда
				НоваяСтрока = Счета.Добавить();
				НоваяСтрока.НомерСчета = Формат(ИнформацияПоСчету.contractId, "ЧГ=0");
				НоваяСтрока.Баланс = ИнформацияПоСчету.balance;
				НоваяСтрока.ТоварнаяГруппа = ПолучитьТоварнуюГруппу(ИнформацияПоСчету.productGroupId);
				НоваяСтрока.КодТоварнойГруппы = ПолучитьКодИконкиТоварнойГруппы(ИнформацияПоСчету.productGroupId);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(РезультатЗапроса.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТоварнуюГруппу(КодТоварнойГруппы)
	
	Результат = "";
	Если КодТоварнойГруппы = 2 Тогда
		Результат = "Обувные товары";
	ИначеЕсли КодТоварнойГруппы = 3 Тогда
		Результат = "Табачные изделия";
	ИначеЕсли КодТоварнойГруппы = 7 Тогда
		Результат = "Лекарственные препараты";
	ИначеЕсли КодТоварнойГруппы = 8 Тогда
		Результат = "Молочная продукция";
	ИначеЕсли КодТоварнойГруппы = 11 Тогда
		Результат = "Алкоголь";
	//ИначеЕсли КодТоварнойГруппы = 15 Тогда
	//	Результат = 13; Одежда (Легкая промышленность)
	//ИначеЕсли КодТоварнойГруппы = 15 Тогда
	//	Результат = 15; Упакованная вода
	Иначе
		Результат = нСтр("ru='Неопределенная товарная группа'", "ru") 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьКодИконкиТоварнойГруппы(КодТоварнойГруппы)
	
	Результат = 0;
	Если КодТоварнойГруппы = 2 Тогда
		Результат = 7;
	ИначеЕсли КодТоварнойГруппы = 3 Тогда
		Результат = 1;
	ИначеЕсли КодТоварнойГруппы = 7 Тогда
		Результат = 17;
	ИначеЕсли КодТоварнойГруппы = 8 Тогда
		Результат = 9;
	ИначеЕсли КодТоварнойГруппы = 11 Тогда
		Результат = 11;
	//ИначеЕсли КодТоварнойГруппы = 15 Тогда
	//	Результат = 13; Одежда (Легкая промышленность)
	//ИначеЕсли КодТоварнойГруппы = 15 Тогда
	//	Результат = 15; Упакованная вода
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
