
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОрганизацияОтбор = Параметры.Отбор.Организация;
	КонецЕсли;
	
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПечатьЭтикетокШтрихкода", "Доступность", ПравоДоступа("Просмотр", Метаданные.Обработки.ПечатьКодовМаркировкиИСМПТК));
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	
	УстановитьБыстрыйОтбор("Организация", ОрганизацияОтбор);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ВидЭлемента, ЗначениеЭлемента)
	
	ИнтеграцияИСМПТККлиентСерверПереопределяемый.ИзменитьЭлементОтбораСписка(Список, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьSSCC

&НаКлиенте
Процедура ПечатьЭтикетокШтрихкода(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Штрихкод = ТекущиеДанные.Штрихкод;
	Если Не ЗначениеЗаполнено(Штрихкод) Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеВопросПечати = Новый ОписаниеОповещения("ОбработкаОтветаПользователяПриПечати", ЭтотОбъект);
	
	ПоказатьВопрос(ОповещениеВопросПечати, 
		НСтр("ru = 'Распечатать штрихкод?'"),
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаПользователяПриПечати(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПечати = ПодготовитьДанныеДляПечати();
	
	Если ДанныеПечати.ОбъектыПечати.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Нет данных для печати';
								|en = 'Нет данных для печати'");
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПечатьКодовМаркировкиИСМПТККлиент.НапечататьSSCC(ДанныеПечати, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте 
Функция ПодготовитьДанныеДляПечати()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ОбъектыПечати = Новый Массив;
	
	ПараметрыШтрихкода = ПечатьКодовМаркировкиИСМПТККлиентСервер.СтруктураПечатиЭтикеткиSSCC();
	
	ПараметрыШтрихкода.Организация        = ТекущиеДанные.Организация;
	ПараметрыШтрихкода.ЦифраРасширения    = ТекущиеДанные.ЦифраРасширения;
	ПараметрыШтрихкода.ПрефиксКомпанииGS1 = ТекущиеДанные.ПрефиксКомпанииGS1;
	ПараметрыШтрихкода.СерийныйНомерSSCC  = ТекущиеДанные.СерийныйНомерSSCC;
	ПараметрыШтрихкода.Штрихкод     	  = ТекущиеДанные.Штрихкод;
	ПараметрыШтрихкода.ТипШтрихкода       = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодовИСМПТК.SSCC");
	ПараметрыШтрихкода.ШаблонЭтикетки 	  = ПечатьКодовМаркировкиИСМПТККлиентСервер.ПолучитьШаблонЭтикеткиSSCC();
	ПараметрыШтрихкода.Количество         = 1;
	
	ОбъектыПечати.Добавить(ПараметрыШтрихкода);
	
	ИтоговаяСтруктура = Новый Структура;
	ИтоговаяСтруктура.Вставить("ОбъектыПечати",              ОбъектыПечати);
	ИтоговаяСтруктура.Вставить("КаждаяЭтикеткаНаНовомЛисте", Истина);
	ИтоговаяСтруктура.Вставить("ЕстьПечатьЭтикетокИЦенников", ПроверитьНаличиеМенеджераПечати());
	
	Возврат ИтоговаяСтруктура;
	
КонецФункции

&НаСервере
Функция ПроверитьНаличиеМенеджераПечати()
	
	Возврат ?(Метаданные.НайтиПоПолномуИмени("Обработка.ПечатьКодовМаркировкиИСМПТК") <> Неопределено, Истина, Ложь);
	
КонецФункции

#КонецОбласти