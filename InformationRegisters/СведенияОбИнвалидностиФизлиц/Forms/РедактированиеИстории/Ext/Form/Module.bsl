
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("ВедущийОбъект", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если ТолькоПросмотр Тогда
		Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаКомандаОК",
			"Доступность",
			Ложь);
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ГруппаИнформационная.Видимость = Ложь;
		Параметры.Свойство("ДатаЗапретаИзмененияДанных", ДатаЗапрета);
	КонецЕсли;

	Для Каждого ЗаписьНабора Из Параметры.МассивЗаписей Цикл
		НоваяСтрока = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗаписьНабора);
		НоваяСтрока.ПериодЗакрыт = (НоваяСтрока.Период <= ДатаЗапрета);
	КонецЦикла;
	
	НаборЗаписей.Сортировать("Период");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ НаборЗаписей

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Элемент.ТекущиеДанные.ФизЛицо = ОбъектВладелец;
			Элемент.ТекущиеДанные.ОтношениеКИнвалидности = ПредопределенноеЗначение("Перечисление.ОтношениеКИнвалидности.Инвалид");
			Элемент.ТекущиеДанные.ГруппаИнвалидности = "III";
			Если НаборЗаписей.Количество() > 1 Тогда
				НовыйПериод = Макс(ДобавитьМесяц(НаборЗаписей.Получить(НаборЗаписей.Количество() - 2).Период, 1), КонецМесяца(ДатаЗапрета) + 1, НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()));
			Иначе
				НовыйПериод = Макс(КонецМесяца(ДатаЗапрета) + 1, Дата(1900, 1, 1));
			КонецЕсли; 
			Элемент.ТекущиеДанные.Период = НовыйПериод;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.Период <= ДатаЗапрета Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				СообщениеОбОшибке = НСтр("ru = 'Необходимо указать месяц, с которого будет действовать запись сведений'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
			ИначеЕсли Элемент.ТекущиеДанные.Период <= ДатаЗапрета Тогда
				СообщениеОбОшибке = НСтр("ru = 'Период закрыт для редактирования, укажите период позже даты '") + Формат(ДатаЗапрета, "ДФ='дд ММММ гггг'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
			Иначе
				НайденныеСтроки = НаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
						СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанным месяцем сведений'");
						ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
						Прервать;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли;
	Иначе
		Если НЕ НоваяСтрока И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Необходимо указать месяц, с которого будет действовать запись сведений'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"НаборЗаписей.Период", , Отказ);
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда 
		Элемент.ТекущиеДанные.Период = НачалоМесяца(Элемент.ТекущиеДанные.Период);
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиент.УпорядочитьНаборЗаписейВФорме(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)

	РедактированиеПериодическихСведенийКлиент.ОповеститьОЗавершении(ЭтаФорма, "СведенияОбИнвалидностиФизлиц", ОбъектВладелец);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейГруппаИнвалидностиПриИзменении(Элемент)

	ОбработатьПризнакИсчислятьОПВ(Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейСрокДействияСправкиПриИзменении(Элемент)

	ОбработатьПризнакИсчислятьОПВ(Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейОтношениеКИнвалидностиПриИзменении(Элемент)

	ОбработатьПризнакИсчислятьОПВ(Элементы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбработатьПризнакИсчислятьОПВ(Элементы)

	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		
		Если ТекущиеДанные.ИсчислятьОПВ Тогда
			
			Если НЕ (ТекущиеДанные.ОтношениеКИнвалидности = ПредопределенноеЗначение("Перечисление.ОтношениеКИнвалидности.Инвалид")
					И (ТекущиеДанные.ГруппаИнвалидности = "I"
					ИЛИ ТекущиеДанные.ГруппаИнвалидности = "II")
					 И НЕ ЗначениеЗаполнено(ТекущиеДанные.СрокДействияСправки)) Тогда
					 
				ТекущиеДанные.ИсчислятьОПВ = Ложь;
				
			КонецЕсли;	 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

