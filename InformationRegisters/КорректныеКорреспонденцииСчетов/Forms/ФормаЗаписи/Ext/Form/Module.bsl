////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ДобавлениеОднойЗаписи;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Запись.Комментарий");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ИМЯ ТАБЛИЦЫ ФОРМЫ>

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПоискПодчиненныхСчетовНаСервере();
	
	Если ТаблицаКорреспонденций.Количество() > 0 Тогда
		//клиент
		ПоказатьВопросОДобавленииКорреспонденции();
		
	Иначе	
		//стандартные проц.
		Записать();
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьОбъект(Команда)
	
	ПоискПодчиненныхСчетовНаСервере();
	
	Если ТаблицаКорреспонденций.Количество() > 0 Тогда
		//клиент
		ПоказатьВопросОДобавленииКорреспонденции();
	Иначе	
		//стандартные проц.
		Записать();
	КонецЕсли;	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПоказатьВопросОДобавленииКорреспонденции()
	
	ДобавлениеОднойЗаписи = Истина;
		
	ТекстВопроса = НСтр("ru = 'В указаной корреспонденции обнаружены счета, имеющие 
					|подчиненные счета (субсчета).
					|
					|Добавить вместо нее набор корреспонденций со счетами, 
					|не имеющими подчиненных?'");

	Режим 	    		 = РежимДиалогаВопрос.ДаНетОтмена;
	ПараметрыОповещения  = Новый Структура();
	Оповещение  		 = Новый ОписаниеОповещения("ОткрытьФормуСпискаКорреспонденций", ЭтотОбъект, ПараметрыОповещения);
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	
КонецПроцедуры

&НаСервере
Процедура ПоискПодчиненныхСчетовНаСервере() 

	Запрос = Новый Запрос();

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Типовой.Родитель КАК Родитель
	               |ПОМЕСТИТЬ ГруппыСчетов
	               |ИЗ
	               |	ПланСчетов.Типовой КАК Типовой
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаДт.Ссылка КАК СчетДт,
	               |	СчетаДт.Код КАК КодДт,
	               |	СчетаКт.Ссылка КАК СчетКт,
	               |	СчетаКт.Код КАК КодКт,
	               |	СчетаДт.Порядок КАК ПорядокДт,
	               |	СчетаКт.Порядок КАК ПорядокКт,
	               |	"""" КАК Комментарий
	               |ИЗ
	               |	ПланСчетов.Типовой КАК СчетаДт,
	               |	ПланСчетов.Типовой КАК СчетаКт
	               |ГДЕ
	               |	СчетаДт.Ссылка В ИЕРАРХИИ(&СчетДт)
	               |	И СчетаКт.Ссылка В ИЕРАРХИИ(&СчетКт)
	               |	И НЕ(СчетаДт.Ссылка = &СчетДт
	               |				И СчетаКт.Ссылка = &СчетКт)
	               |	И &СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	               |	И &СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	               |	И НЕ СчетаДт.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ГруппыСчетов.Родитель
	               |				ИЗ
	               |					ГруппыСчетов)
	               |	И НЕ СчетаКт.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ГруппыСчетов.Родитель
	               |				ИЗ
	               |					ГруппыСчетов)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СчетаДт.Ссылка,
	               |	СчетаДт.Код,
	               |	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка),
	               |	"""",
	               |	СчетаДт.Порядок,
	               |	NULL,
	               |	""""
	               |ИЗ
	               |	ПланСчетов.Типовой КАК СчетаДт
	               |ГДЕ
	               |	СчетаДт.Ссылка В ИЕРАРХИИ(&СчетДт)
	               |	И СчетаДт.Ссылка <> &СчетДт
	               |	И &СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	               |	И &СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	               |	И НЕ СчетаДт.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ГруппыСчетов.Родитель
	               |				ИЗ
	               |					ГруппыСчетов)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка),
	               |	"""",
	               |	СчетаКт.Ссылка,
	               |	СчетаКт.Код,
	               |	NULL,
	               |	СчетаКт.Порядок,
	               |	""""
	               |ИЗ
	               |	ПланСчетов.Типовой КАК СчетаКт
	               |ГДЕ
	               |	СчетаКт.Ссылка В ИЕРАРХИИ(&СчетКт)
	               |	И СчетаКт.Ссылка <> &СчетКт
	               |	И &СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	               |	И &СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	               |	И НЕ СчетаКт.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ГруппыСчетов.Родитель
	               |				ИЗ
	               |					ГруппыСчетов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПорядокДт,
	               |	ПорядокКт";

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СчетДт"		, Запись.СчетДт); 
	Запрос.УстановитьПараметр("СчетКт"		, Запись.СчетКт);
	
	ТаблицаСчетов = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(ТаблицаСчетов, "ТаблицаКорреспонденций");
	
КонецПроцедуры
 
&НаКлиенте
Процедура ОткрытьФормуСпискаКорреспонденций(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ДобавлениеОднойЗаписи = Ложь;

		Для Каждого ЭлементКоллекции Из ТаблицаКорреспонденций Цикл
			ЭлементКоллекции.Комментарий = Запись.Комментарий;
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура("ТаблицаКорреспонденций", ТаблицаКорреспонденций);
		ОткрытьФорму("РегистрСведений.КорректныеКорреспонденцииСчетов.Форма.ФормаСпискаКорреспонденций", ПараметрыФормы, ЭтаФорма);
		
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Записать();
		Закрыть();
		
	КонецЕсли; 

КонецПроцедуры	
