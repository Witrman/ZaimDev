
////////////////////////////////////////////////////////////////////////////////
// Форма предназначена для редактирования контактной информации выбранного объекта
//
// Параметры фомры:
//  ОбъектКИ - СправочникСсылка.ПодразделенияОрганизаций, 
//             СправочникСсылка.Контрагенты, 
//             СправочникСсылка.КонтактныеЛица, 
//             СправочникСсылка.ФизическиеЛица, 
//             СправочникСсылка.Организации, 
//             СправочникСсылка.Пользователи - ссылка на объект контактной информации
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектКИ = Параметры.ОбъектКИ;
	Если НЕ ЗначениеЗаполнено(ОбъектКИ) Тогда
		ВызватьИсключение НСтр("ru = 'Форма является служебной и не предназначена для непосредственного открытия'");
	КонецЕсли;
	
	ШаблонЗаголовока = НСтр("ru = 'Контактная информация: %1'");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовока, ОбъектКИ);
	
	НаборЗаписейКонтактнаяИнформация.Отбор.Объект.Значение      = ОбъектКИ;
	НаборЗаписейКонтактнаяИнформация.Отбор.Объект.Использование = Истина;
	
	ВидОбъектаКИ = КонтактнаяИнформацияКлиентСерверПовтИсп.ВидОбъектаКИ(ОбъектКИ);
	
	КонтактнаяИнформация.ПрочитатьКонтактнуюИнформацию(НаборЗаписейКонтактнаяИнформация, ОбъектКИ);
	
	ЗаполнитьДобавленныеКолонкиТаблиц(НаборЗаписейКонтактнаяИнформация);
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.КонтактнаяИнформация) Тогда
		ЭтотОбъект.ТолькоПросмотр = Истина;
		Элементы.ФормаРедактироватьКИВДиалоге.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ФормаРедактироватьКИВДиалоге.Пометка = РедактироватьКИВДиалоге;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьНаКлиенте", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ НаборЗаписейКонтактнаяИнформация

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.ЗначениеПоУмолчанию Тогда
			Элементы.ФормаУстановитьОсновной.Пометка     = Истина;
			Элементы.ФормаУстановитьОсновной.Доступность = Истина;
		ИначеЕсли НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Представление) Тогда
			Элементы.ФормаУстановитьОсновной.Пометка     = Ложь;
			Элементы.ФормаУстановитьОсновной.Доступность = Ложь;
		Иначе
			Элементы.ФормаУстановитьОсновной.Пометка     = Ложь;
			Элементы.ФормаУстановитьОсновной.Доступность = Истина;
		КонецЕсли; 
	Иначе
		Элементы.ФормаУстановитьОсновной.Пометка     = Ложь;
		Элементы.ФормаУстановитьОсновной.Доступность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Если РедактироватьКИВДиалоге Тогда
			Отказ = Истина;
			КонтактнаяИнформацияКлиент.ОткрытьФормуРедактированияЗаписиРегистра(НаборЗаписейКонтактнаяИнформация, Ложь, ЭтотОбъект);
		Иначе
			Элементы.НаборЗаписейКонтактнаяИнформацияПредставление.РедактированиеТекста = Истина;
		КонецЕсли;
	Иначе
		Если РедактироватьКИВДиалоге Тогда
			Отказ = Истина;
			КонтактнаяИнформацияКлиент.ОткрытьФормуРедактированияЗаписиРегистра(НаборЗаписейКонтактнаяИнформация, Ложь, ЭтотОбъект, КонтактнаяИнформацияКлиентСервер.ПолучитьСтруктуруЗаписиРегистра(Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные));
		Иначе
			УстановитьВозможностьРедактированияТекстаКИ();
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПередНачаломИзменения(Элемент, Отказ)
	
	Если РедактироватьКИВДиалоге Тогда
		Отказ = Истина;
		КонтактнаяИнформацияКлиент.ОткрытьФормуРедактированияЗаписиРегистра(Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные, Ложь, ЭтотОбъект);
	Иначе
		УстановитьВозможностьРедактированияТекстаКИ();
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Тип) Тогда
			Элемент.ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес");
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Вид) Тогда
			Элемент.ТекущиеДанные.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
		КонецЕсли;
		ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные, "ИндексКартинки");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено 
		И (ЗначениеЗаполнено(ТекущиеДанные.Представление) 
		ИЛИ ТипЗнч(ТекущиеДанные.Вид) = Тип("Строка")) Тогда
		
		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("НаборЗаписейКонтактнаяИнформацияПередУдалениемЗавершение", ЭтотОбъект, Новый Структура("Элемент", Элемент));
		ПоказатьВопрос(ОписаниеОповещенияОЗакрытии, НСтр("ru = 'Удалить запись?'"), РежимДиалогаВопрос.ДаНет); 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПередУдалениемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;
    
    Элемент = ДополнительныеПараметры.Элемент;
    
    Если ТипЗнч(Элемент.ТекущиеДанные.Вид) = Тип("Строка") Тогда
        НаборЗаписейКонтактнаяИнформация.Удалить(Элемент.ТекущаяСтрока);
    Иначе
        Элемент.ТекущиеДанные.Представление       = "";
        Элемент.ТекущиеДанные.ЗначениеПоУмолчанию = Ложь;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияТипПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные;
	Если (ТекущиеДанные <> Неопределено)
	   И ((ЗначениеЗаполнено(ТекущиеДанные.Вид)
	   И ТипЗнч(ТекущиеДанные.Вид) = Тип("СправочникСсылка.ВидыКонтактнойИнформации")
	   И ТекущиеДанные.Вид.Тип <> Элемент.Значение) ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Вид)) Тогда
	
		ТекущиеДанные.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
		
	КонецЕсли; 

	ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные, "ИндексКартинки");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияТипОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияВидПриИзменении(Элемент)
	
	ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные, "ПроизвольныйВидКИ");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПредставлениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные;
	Если ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
		
		СтруктураПолей = КонтактнаяИнформацияКлиентСервер.РазложитьТелефонПоПолям(ТекущиеДанные.Представление);
		ТекущиеДанные.Поле3 = СтруктураПолей.СамТелефон;
		ТекущиеДанные.Поле1 = СтруктураПолей.КодСтраны;
		ТекущиеДанные.Поле2 = СтруктураПолей.КодГорода;
		
		КонтактнаяИнформацияКлиентСервер.СформироватьПредставлениеТелефона(ТекущиеДанные);
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейКонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные.Объект = ОбъектКИ;
	КонтактнаяИнформацияКлиент.ОткрытьФормуРедактированияЗаписиРегистра(Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные, Ложь, ЭтотОбъект);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Отказ = Ложь;
	ЗаписатьКонтактнуюИнформациюНаСервере(Отказ);
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		Оповестить("Запись_КонтактнаяИнформация", Новый Структура("ОбъектКИ", ОбъектКИ), ЭтотОбъект);
	КонецЕсли;
	
	ЗаполнитьДобавленныеКолонкиТаблиц(НаборЗаписейКонтактнаяИнформация);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновной(Команда)
	
	ТекущиеДанные = Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
	   И ЗначениеЗаполнено(ТекущиеДанные.Представление) Тогда
	
		Если ТекущиеДанные.ЗначениеПоУмолчанию Тогда
		
			ТекущиеДанные.ЗначениеПоУмолчанию = Ложь;
			Элементы.ФормаУстановитьОсновной.Пометка = Ложь;
			
		Иначе
			
			Для каждого ЗаписьНабора Из НаборЗаписейКонтактнаяИнформация Цикл
				Если ЗаписьНабора.Тип = ТекущиеДанные.Тип Тогда
					ЗаписьНабора.ЗначениеПоУмолчанию = Ложь;
				КонецЕсли; 
			КонецЦикла;
			
			ТекущиеДанные.ЗначениеПоУмолчанию = Истина;
			Элементы.ФормаУстановитьОсновной.Пометка = Истина;
		
		КонецЕсли; 
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКИВДиалоге(Команда)
	
	РедактироватьКИВДиалоге = НЕ Элементы.ФормаРедактироватьКИВДиалоге.Пометка;
	Элементы.ФормаРедактироватьКИВДиалоге.Пометка = РедактироватьКИВДиалоге;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		ЗаписатьКонтактнуюИнформациюНаСервере(Отказ);
		Модифицированность = Ложь;
		
		Если НЕ Отказ Тогда 
			Оповестить("Запись_КонтактнаяИнформация", Новый Структура("ОбъектКИ", ОбъектКИ), ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКонтактнуюИнформациюНаСервере(Отказ = Ложь)
	
	КонтактнаяИнформация.ЗаписатьКонтактнуюИнформацию(НаборЗаписейКонтактнаяИнформация, ОбъектКИ, Отказ);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиТаблиц(НаборЗаписейКонтактнаяИнформация, СписокКолонок = "ИндексКартинки, ПроизвольныйВидКИ")
	
	МассивКолонок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СписокКолонок);
	
	ЗаполнятьИндексКартинки    = МассивКолонок.Найти("ИндексКартинки") <> Неопределено;
	ЗаполнятьПроизвольныйВидКИ = МассивКолонок.Найти("ПроизвольныйВидКИ") <> Неопределено;
	
	Для Каждого СтрокаНабораЗаписей Из НаборЗаписейКонтактнаяИнформация Цикл
		
		Если ЗаполнятьИндексКартинки Тогда 
			Если СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Другое") Тогда
				СтрокаНабораЗаписей.ИндексКартинки = 0;
			ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
				СтрокаНабораЗаписей.ИндексКартинки = 8;
			ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") Тогда
				СтрокаНабораЗаписей.ИндексКартинки = 4;
			ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница") Тогда
				СтрокаНабораЗаписей.ИндексКартинки = 5;
			ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
				СтрокаНабораЗаписей.ИндексКартинки = 3;
			КонецЕсли; 
		КонецЕсли;
		
		Если ЗаполнятьПроизвольныйВидКИ Тогда
			СтрокаНабораЗаписей.ПроизвольныйВидКИ = ЗначениеЗаполнено(СтрокаНабораЗаписей.Представление) 
				И ТипЗнч(СтрокаНабораЗаписей.Вид) = Тип("Строка");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаНабораЗаписей, СписокКолонок = "ИндексКартинки, ПроизвольныйВидКИ")
	
	МассивКолонок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СписокКолонок);
	
	ЗаполнятьИндексКартинки    = МассивКолонок.Найти("ИндексКартинки") <> Неопределено;
	ЗаполнятьПроизвольныйВидКИ = МассивКолонок.Найти("ПроизвольныйВидКИ") <> Неопределено;
	
	Если ЗаполнятьИндексКартинки Тогда 
		Если СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Другое") Тогда
			СтрокаНабораЗаписей.ИндексКартинки = 0;
		ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
			СтрокаНабораЗаписей.ИндексКартинки = 8;
		ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") Тогда
			СтрокаНабораЗаписей.ИндексКартинки = 4;
		ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.ВебСтраница") Тогда
			СтрокаНабораЗаписей.ИндексКартинки = 5;
		ИначеЕсли СтрокаНабораЗаписей.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
			СтрокаНабораЗаписей.ИндексКартинки = 3;
		КонецЕсли; 
	КонецЕсли;
	
	Если ЗаполнятьПроизвольныйВидКИ Тогда
		СтрокаНабораЗаписей.ПроизвольныйВидКИ = ЗначениеЗаполнено(СтрокаНабораЗаписей.Представление) 
		И ТипЗнч(СтрокаНабораЗаписей.Вид) = Тип("Строка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВозможностьРедактированияТекстаКИ()

	ТекущиеДанные = Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные;
	Если ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес")
	   И ЗначениеЗаполнено(ТекущиеДанные.Представление)
	   И (КонтактнаяИнформацияКлиентСервер.ПолучитьПредставлениеАдреса(ТекущиеДанные) = ТекущиеДанные.Представление) Тогда
		Элементы.НаборЗаписейКонтактнаяИнформацияПредставление.РедактированиеТекста = Ложь;
	Иначе
		Элементы.НаборЗаписейКонтактнаяИнформацияПредставление.РедактированиеТекста = Истина;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыРедактированияЗаписиКИ(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ДобавленаНоваяКИ Тогда
		НоваяЗапись = НаборЗаписейКонтактнаяИнформация.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Результат);
	Иначе 
		ТекущиеДанные = Элементы.НаборЗаписейКонтактнаяИнформация.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Результат);
	КонецЕсли;
	
	ЗаполнитьДобавленныеКолонкиТаблиц(НаборЗаписейКонтактнаяИнформация);

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// Вставить содержимое обработчика.
КонецПроцедуры
