#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти  

Процедура ПроверкаЗаполненностиДатыРождения(Проверка, ПараметрыПроверки) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// ЗУПК
	Результат = РезультатПроверкиДостаточностиВводаПервичнойИнформации(ПараметрыПроверки.ДатаНачалаПроверки);
	// ЗУПК
	
	Если Не Результат.Пустой() Тогда
		
		МодульКонтрольВеденияУчета = ОбщегоНазначения.ОбщийМодуль("КонтрольВеденияУчета");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			УточнениеПроблемы = "";
			Если Не ЗначениеЗаполнено(Выборка.ДатаРождения) Тогда
				УточнениеПроблемы = НСтр("ru='Не задана дата рождения'");  	
			ИначеЕсли Выборка.ДатаРождения < '18991231000000'
				Или Выборка.ДатаРождения > ДобавитьМесяц(ТекущаяДатаСеанса(), - 120) Тогда
				
				УточнениеПроблемы = СтрШаблон(НСтр("ru='Подозрительная дата рождения - %1.'"), Формат(Выборка.ДатаРождения, "ДЛФ=DD"));
				
			КонецЕсли;
			
			Если Не ПустаяСтрока(УточнениеПроблемы) Тогда
				
				Проблема = МодульКонтрольВеденияУчета.ОписаниеПроблемы(Выборка.Сотрудник, ПараметрыПроверки);
				Проблема.УточнениеПроблемы = УточнениеПроблемы;
				МодульКонтрольВеденияУчета.ЗаписатьПроблему(Проблема, ПараметрыПроверки);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция РезультатПроверкиДостаточностиВводаПервичнойИнформации(ДатаНачала = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// ЗУПК
	Если ЗначениеЗаполнено(ДатаНачала) Тогда
		СоздатьВТРаботающиеСотрудникиФизическихЛиц(Запрос.МенеджерВременныхТаблиц, ДатаНачала);
	Иначе
		СоздатьВТРаботающиеСотрудникиФизическихЛиц(Запрос.МенеджерВременныхТаблиц, НачалоМесяца(НачалоМесяца(ТекущаяДатаСеанса()) - 1));
	КонецЕсли;
	// ЗУПК
		
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботающиеСотрудникиФизическихЛиц.Сотрудник КАК Сотрудник,
		|	РаботающиеСотрудникиФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	ФизическиеЛица.ИдентификационныйКодЛичности КАК ИНН
		|ИЗ
		|	ВТРаботающиеСотрудникиФизическихЛиц КАК РаботающиеСотрудникиФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО РаботающиеСотрудникиФизическихЛиц.ФизическоеЛицо = ФизическиеЛица.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Процедура СоздатьВТРаботающиеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, ДатаНачала = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;	
			
	Запрос.Текст = "ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(РегистрСведений.Период, ДЕНЬ) КАК Период,
	               |	РегистрСведений.Период КАК ПериодЗаписи,
	               |	РегистрСведений.Период >= &ФильтрДатаНачала_ВТРаботающиеСотрудникиФизическихЛиц
	               |		И РегистрСведений.Период <= &ФильтрДатаОкончанияПриведенная_ВТРаботающиеСотрудникиФизическихЛиц КАК ЗаписьПериода,
	               |	РегистрСведений.Сотрудник КАК Сотрудник,
	               |	РегистрСведений.Сотрудник.Физлицо КАК ФизическоеЛицо,
	               |	РегистрСведений.Организация КАК Организация,
	               |	РегистрСведений.ПодразделениеОрганизации КАК Подразделение,
	               |	РегистрСведений.Должность КАК Должность,
	               |	РегистрСведений.ПричинаИзмененияСостояния КАК ВидСобытия,
	               |	РегистрСведений.ЗанимаемыхСтавок КАК КоличествоСтавок,
	               |	РегистрСведений.Активность КАК Активность,
	               |	РегистрСведений.НомерСтроки КАК НомерСтроки,
	               |	РегистрСведений.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТРаботающиеСотрудникиФизическихЛиц
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизаций КАК РегистрСведений
	               |ГДЕ
	               |	РегистрСведений.Период >= &ФильтрДатаНачала_ВТРаботающиеСотрудникиФизическихЛиц
	               |	И РегистрСведений.Период <= &ФильтрДатаОкончанияПриведенная_ВТРаботающиеСотрудникиФизическихЛиц"; 	
	
	Запрос.УстановитьПараметр("ФильтрДатаНачала_ВТРаботающиеСотрудникиФизическихЛиц", ДатаНачала);
	Запрос.УстановитьПараметр("ФильтрДатаОкончанияПриведенная_ВТРаботающиеСотрудникиФизическихЛиц", Дата(3999, 12, 31, 23, 59, 59));  
		
	Запрос.Выполнить(); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
