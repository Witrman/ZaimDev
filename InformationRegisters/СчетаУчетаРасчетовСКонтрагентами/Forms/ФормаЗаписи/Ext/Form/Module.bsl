
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда 
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.Организация) И ЗначениеЗаполнено(ТекущаяОрганизация) 
		И ТекущаяОрганизация <> Запись.Организация Тогда 
		Запись.Договор = Неопределено;
	ИначеЕсли ЗначениеЗаполнено(Запись.Организация) И НЕ ЗначениеЗаполнено(ТекущаяОрганизация)
		И ЗначениеЗаполнено(Запись.Договор) Тогда
		Если Запись.Организация <> ОрганизацияДоговора(Запись.Договор) Тогда 
			Запись.Договор = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьПараметрыВыбораДоговора(ЭтаФорма);
	
	ТекущаяОрганизация = Запись.Организация;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ЗаполнитьПараметрыВыбораДоговора(ЭтаФорма);
	ЗаполнитьПараметрыВыбораСчетовРасчетов();
	
	ТекущаяОрганизация = Запись.Организация;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыВыбораСчетовРасчетов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Типовой.Ссылка КАК Ссылка,
	|	Типовой.Вид
	|ИЗ
	|	ПланСчетов.Типовой КАК Типовой
	|ГДЕ
	|	Типовой.ВидыСубконто.ВидСубконто = &ВидСубконтоКонтрагенты
	|	И Типовой.ВидыСубконто.ВидСубконто = &ВидСубконтоДоговоры
	|   И НЕ Типовой.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Типовой.Ссылка,
	|	Типовой.Вид
	|ИЗ
	|	ПланСчетов.Типовой КАК Типовой
	|ГДЕ
	|	Типовой.Ссылка В ИЕРАРХИИ(&СчетаПоВозвратамПоставщикам)
	|	И Типовой.ВидыСубконто.ВидСубконто = &ВидСубконтоКонтрагенты
	|	И Типовой.ВидыСубконто.ВидСубконто = &ВидСубконтоДоговоры
	|	И (Типовой.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ИЛИ Типовой.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Типовой.Ссылка,
	|	Типовой.Вид
	|ИЗ
	|	ПланСчетов.Типовой КАК Типовой
	|ГДЕ
	|	Типовой.Ссылка В ИЕРАРХИИ(&СчетаПоВозвратамОтПокупателей)
	|	И Типовой.ВидыСубконто.ВидСубконто = &ВидСубконтоКонтрагенты
	|	И Типовой.ВидыСубконто.ВидСубконто = &ВидСубконтоДоговоры
	|	И (Типовой.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ИЛИ Типовой.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))";
	
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	Запрос.УстановитьПараметр("ВидСубконтоДоговоры",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	
	СчетаПоВозвратамПоставщикам = Новый Массив;
	СчетаПоВозвратамПоставщикам.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоВозвратамТМЗПоставщикам);
	СчетаПоВозвратамПоставщикам.Добавить(ПланыСчетов.Типовой.ДолгосрочнаяЗадолженностьПоВозвратамТМЗПоставщикам);
	
	СчетаПоВозвратамОтПокупателей = Новый СписокЗначений;
	СчетаПоВозвратамОтПокупателей.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоВозвратамРеализованныхГотовойПродукцииТоваровРаботУслуг);
	СчетаПоВозвратамОтПокупателей.Добавить(ПланыСчетов.Типовой.ДолгосрочнаяЗадолженностьПоВозвратамРеализованныхГотовойПродукцииТоваровРаботУслуг);
	
	Запрос.УстановитьПараметр("СчетаПоВозвратамПоставщикам", СчетаПоВозвратамПоставщикам);
	Запрос.УстановитьПараметр("СчетаПоВозвратамОтПокупателей", СчетаПоВозвратамОтПокупателей);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	МассивАктивныеСчета = Новый Массив;
	МассивАктивныеСчета.Добавить(ВидСчета.АктивноПассивный);
	МассивАктивныеСчета.Добавить(ВидСчета.Активный);
	
	МассивПассивныеСчета = Новый Массив;
	МассивПассивныеСчета.Добавить(ВидСчета.АктивноПассивный);
	МассивПассивныеСчета.Добавить(ВидСчета.Пассивный);
	
	СписокВсехСчетов = МассивРезультатов[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	// Параметры выбора счета расчетов с поставщиком, в том числе и по авансам
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", СписокВсехСчетов));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Вид",    МассивПассивныеСчета));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
	
	Элементы.СчетУчетаРасчетовСПоставщиком.ПараметрыВыбора             = Новый ФиксированныйМассив(МассивПараметровВыбора);
	Элементы.СчетУчетаАвансовПолученных.ПараметрыВыбора                = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	// Параметры выбора счета расчетов с покупателем
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", СписокВсехСчетов));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Вид",    МассивАктивныеСчета));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
	
	Элементы.СчетУчетаРасчетовСПокупателем.ПараметрыВыбора             = Новый ФиксированныйМассив(МассивПараметровВыбора);
	Элементы.СчетУчетаАвансовВыданных.ПараметрыВыбора                  = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	// Параметры выбора счета расчетов с поставщиком по возвратам
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", МассивРезультатов[1].Выгрузить().ВыгрузитьКолонку("Ссылка")));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Вид",    МассивАктивныеСчета));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
	
	Элементы.СчетУчетаРасчетовСПоставщикомПоВозвратам.ПараметрыВыбора  = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	// Параметры выбора счета расчетов с покупателем по возвратам
	МассивПараметровВыбора = Новый Массив;
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", МассивРезультатов[2].Выгрузить().ВыгрузитьКолонку("Ссылка")));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Вид",    МассивПассивныеСчета));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
	
	Элементы.СчетРасчетовСПокупателемПоВозвратам.ПараметрыВыбора       = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПараметрыВыбораДоговора(Форма)
	
	Элементы = Форма.Элементы;
	Запись   = Форма.Запись;
	
	МассивПараметровВыбора  = Новый Массив;
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Организация", Запись.Организация));
	КонецЕсли;
	
	Элементы.Договор.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОрганизацияДоговора(Договор)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "Организация");
КонецФункции