#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//ИнтеграцияИСМПТК

// Получает данные по штрихкодам.
//
// Параметры:
//  Штрихкоды - ТаблицаЗначений - таблица штрихкодов.
//
// Возвращаемое значение:
//  ТаблицаЗначений - данные по штрихкодам.
//
Процедура ПолучитьДанныеПоШтрихкодам(КэшированныеЗначения, Штрихкоды) Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Штрихкоды.Штрихкод КАК Штрихкод,
	                      |	Штрихкоды.Номенклатура КАК Номенклатура,
	                      |	"""" КАК Характеристика,
	                      |	Штрихкоды.Номенклатура.ОсобенностьУчета КАК ОсобенностьУчета
	                      |ИЗ
	                      |	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	                      |ГДЕ
	                      |	Штрихкоды.Штрихкод В(&МассивШтрихкодов)");

	МассивШтрихкодов = Новый Массив;

	Для Каждого ТекШтрихкод Из Штрихкоды Цикл
		Штрихкод = ВРег(СокрЛП(ТекШтрихкод));
		МассивШтрихкодов.Добавить(Штрихкод);
		
		ИнформацияПоШтрихкодам = СтруктураКешируемойИнформацииПоШтрихкоду();
		ИнформацияПоШтрихкодам.Штрихкод = Штрихкод;
		КэшированныеЗначения.Штрихкоды.Вставить(Штрихкод, ИнформацияПоШтрихкодам);
	КонецЦикла;

	Запрос.УстановитьПараметр("МассивШтрихкодов", МассивШтрихкодов);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекДанные = КэшированныеЗначения.Штрихкоды[ВРег(СокрЛП(Выборка.Штрихкод))];
		ТекДанные.Номенклатура   = Выборка.Номенклатура;
		ТекДанные.Характеристика = Выборка.Характеристика;
		
		Если Выборка.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция 
			ИЛИ Выборка.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция 
			ИЛИ Выборка.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукция
			ИЛИ Выборка.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция
			ИЛИ Выборка.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность Тогда
			МаркируемаяПродукция = Истина;
		Иначе
			МаркируемаяПродукция = Ложь;
		КонецЕсли;
		ТекДанные.МаркируемаяПродукция = МаркируемаяПродукция;
	КонецЦикла;

КонецПроцедуры

// Возвращает структуру, содержащую поля кэшируемой информации, получаемой по штрихкоду товара.
//
// Возвращаемое значение:
//	Структура - структура кэшируемых данных товара, получаемая по штрихкоду товара, со следующими полями:
Функция СтруктураКешируемойИнформацииПоШтрихкоду() Экспорт
	
	ИнформацияПоШтрихкоду = Новый Структура;
	
	ИнформацияПоШтрихкоду.Вставить("Номенклатура");
	ИнформацияПоШтрихкоду.Вставить("Характеристика");
	ИнформацияПоШтрихкоду.Вставить("МаркируемаяПродукция", Ложь);
	ИнформацияПоШтрихкоду.Вставить("Штрихкод", "");
	
	Возврат ИнформацияПоШтрихкоду;
	
КонецФункции

//Конец ИнтеграцияИСМПТК

// Функция вычисляет контрольный символ кода EAN
//
// Параметры:
//  Штрихкод     - штрихкод (без контрольной цифры)
//  Тип          - тип штрихкода: 13 - EAN13, 8 - EAN8
//
// Возвращаемое значение:
//  Контрольный символ штрихкода
//
Функция КонтрольныйСимволEAN(ШтрихКод, Тип) Экспорт

	Четн   = 0;
	Нечетн = 0;

	КоличествоИтераций = ?(Тип = 13, 6, 4);

	Для Индекс = 1 По КоличествоИтераций Цикл
		Если (Тип = 8) и (Индекс = КоличествоИтераций) Тогда
		Иначе
			Четн   = Четн   + Сред(ШтрихКод, 2 * Индекс, 1);
		КонецЕсли;
		Нечетн = Нечетн + Сред(ШтрихКод, 2 * Индекс - 1, 1);
	КонецЦикла;

	Если Тип = 13 Тогда
		Четн = Четн * 3;
	Иначе
		Нечетн = Нечетн * 3;
	КонецЕсли;

	КонтЦифра = 10 - (Четн + Нечетн) % 10;

	Возврат ?(КонтЦифра = 10, "0", Строка(КонтЦифра));

КонецФункции

Функция НоменклатураПоШтрихкоду(Штрихкод) Экспорт
	ТаблицаНоменклатурыПоШтрихкоду  = НовыйТаблицаНоменклатурыПоШтрихкоду();
	
	Если ПустаяСтрока(Штрихкод) Тогда
		Возврат ТаблицаНоменклатурыПоШтрихкоду;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Штрихкод,
	|	Штрихкоды.Номенклатура.Наименование КАК ПредставлениеНоменклатура
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Штрихкод ПОДОБНО &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", СокрЛП(Штрихкод) + "%");
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	ШрифтВыделения = Новый Шрифт(,,Истина);
	ЦветВыделения  = ЦветаСтиля.РезультатУспехЦвет;
	ФорматВыделяемаяСтрока = Новый ФорматированнаяСтрока(Штрихкод, ШрифтВыделения, ЦветВыделения);
	
	Пока РезультатЗапроса.Следующий() Цикл
		СтрокаНоменклатураПоШтрихкоду = ТаблицаНоменклатурыПоШтрихкоду.Добавить();
	
		ПредставлениеСтроки = Новый Массив;
		ПредставлениеСтроки.Добавить(ФорматВыделяемаяСтрока);
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(Прав(РезультатЗапроса.Штрихкод, СтрДлина(РезультатЗапроса.Штрихкод) - СтрДлина(Штрихкод))));
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(" (%1)", РезультатЗапроса.ПредставлениеНоменклатура)));
		
		СтрокаНоменклатураПоШтрихкоду.Штрихкод      = РезультатЗапроса.Штрихкод;
		СтрокаНоменклатураПоШтрихкоду.Номенклатура  = РезультатЗапроса.Номенклатура;
		СтрокаНоменклатураПоШтрихкоду.Представление = Новый ФорматированнаяСтрока(ПредставлениеСтроки);
	КонецЦикла;
	
	Возврат ТаблицаНоменклатурыПоШтрихкоду;
КонецФункции

// Возвращает таблицу сведений о номенклатуре по переданным штрихкодам
// 
// Параметры:
//   СписокШтрихкодов - Массив - список штрикходов для которых надо найти номенклатуру
//   ТочноеСоответствие - Булево - ИСТИНА если нужно искать по точному соотвествию
// Возвращаемое значение:
// - ТаблицаЗначений
//   * Номенклатура         - СправочникСсылка.Номенклатура
//   * Штрихкод             - Строка - Штрихкод номенклатуры
//   * Представление        - Представление номенклатуры
Функция НоменклатураПоШтрихкодам(СписокШтрихкодов, ТочноеСоответствие) Экспорт
	
	ТаблицаИсточник = Новый ТаблицаЗначений;
	ТаблицаИсточник.Колонки.Добавить("Штрихкод", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(ТаблицаИсточник, СписокШтрихкодов, "Штрихкод");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатура.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&ТаблицаНоменклатура КАК ТаблицаНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.Штрихкод КАК ИсходныйКод,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	СправочникНоменклатура.Наименование КАК ПредставлениеНоменклатуры,
	|	1 КАК Количество
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО (&Шаблон)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (ШтрихкодыНоменклатуры.Номенклатура = СправочникНоменклатура.Ссылка)
	|ГДЕ
	|	НЕ СправочникНоменклатура.Ссылка ЕСТЬ NULL";
	
	Если ТочноеСоответствие Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Шаблон", "ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО ВТ_Номенклатура.Штрихкод");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Шаблон", "ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО ВТ_Номенклатура.Штрихкод + ""%""");
	КонецЕсли; 
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаНоменклатура", ТаблицаИсточник);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	ШрифтВыделения = Новый Шрифт(,,Истина);
	ЦветВыделения  = ЦветаСтиля.РезультатУспехЦвет;
	
	ТаблицаНоменклатурыПоШтрихкоду = НовыйТаблицаНоменклатурыПоШтрихкоду();
	Пока РезультатЗапроса.Следующий() Цикл
		ФорматВыделяемаяСтрока = Новый ФорматированнаяСтрока(РезультатЗапроса.ИсходныйКод, ШрифтВыделения, ЦветВыделения);
		
		ПредставлениеСтроки = Новый Массив;
		ПредставлениеСтроки.Добавить(ФорматВыделяемаяСтрока);
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(Прав(РезультатЗапроса.Штрихкод, СтрДлина(РезультатЗапроса.Штрихкод) - СтрДлина(РезультатЗапроса.ИсходныйКод))));
		ПредставлениеСтроки.Добавить(Новый ФорматированнаяСтрока(СтрШаблон(" (%1)", РезультатЗапроса.ПредставлениеНоменклатуры)));
		
		СтрокаНоменклатураПоШтрихкоду = ТаблицаНоменклатурыПоШтрихкоду.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаНоменклатураПоШтрихкоду, РезультатЗапроса);
		
		СтрокаНоменклатураПоШтрихкоду.Представление = Новый ФорматированнаяСтрока(ПредставлениеСтроки);
	КонецЦикла;
	
	Возврат ТаблицаНоменклатурыПоШтрихкоду;
КонецФункции

// Функция осуществляет формирование штрихкода EAN13 для
// штучного товара
//
// Возвращаемое значение:
//  Строка
//
Функция СформироватьШтрихкодEAN13(Номенклатура) Экспорт

	ПрефиксШтучногоТовара = "0";
	ПрефиксВнутреннегоШтрихкода = "01";
	
	Код = Мин(ПоследнийКодШтучногоТовара(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, 13) + 1,
		МаксимальныйКодШтучногоТовара(13));

	НовыйШтрихкод = ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, 13);
	
	ЗаписьРегистра = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Штрихкод = НовыйШтрихкод;
	ЗаписьРегистра.Номенклатура = Номенклатура;
	ЗаписьРегистра.Записать(Истина);
	
	Возврат НовыйШтрихкод;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйТаблицаНоменклатурыПоШтрихкоду()
	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура", Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры.Ресурсы.Номенклатура.Тип);
	ТаблицаНоменклатуры.Колонки.Добавить("Штрихкод", Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры.Измерения.Штрихкод.Тип);
	ТаблицаНоменклатуры.Колонки.Добавить("Представление", Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("ФорматированнаяСтрока"))));
	
	Возврат ТаблицаНоменклатуры;
КонецФункции

Функция ПоследнийКодШтучногоТовара(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, EAN) Экспорт
	
	Запрос = Новый Запрос;
	
	Если EAN = 8 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 2, 6)) КАК Код
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ШаблонШтрихкод";
		ШаблонШтрихкод = "2_______";
	ИначеЕсли EAN = 13 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(ПОДСТРОКА(ШтрихкодыНоменклатуры.Штрихкод, 5, 8)) КАК Код
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Штрихкод ПОДОБНО &ШаблонШтрихкод";
		ШаблонШтрихкод = СтрШаблон("2%1%2_________", ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода);
	Иначе
		ВызватьИсключение НСтр("ru = 'Недопустимая длина EAN. Ожидается 8 или 13.'");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ШаблонШтрихкод", ШаблонШтрихкод);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	Результат = ОписаниеТипаЧисла.ПривестиЗначение(Выборка.Код);
	
	Возврат Результат;
	
КонецФункции 

Функция ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, EAN) Экспорт
	
	Если EAN = 8 Тогда
		Штрихкод = СтрШаблон("2%1", Формат(Код, "ЧЦ=6; ЧВН=; ЧГ="));
	ИначеЕсли EAN = 13 Тогда
		Штрихкод = СтрШаблон("2%1%2%3", ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода, Формат(Код, "ЧЦ=8; ЧВН=; ЧГ="));
	Иначе
		ВызватьИсключение НСтр("ru = 'Недопустимая длина EAN. Ожидается 8 или 13.'")
	КонецЕсли;
	Результат = СтрШаблон("%1%2", Штрихкод, КонтрольныйСимволEAN(ШтрихКод, EAN));
	
	Возврат Результат;

КонецФункции

Функция МаксимальныйКодШтучногоТовара(EAN) Экспорт
	
	Если EAN = 13 Тогда
		Возврат 99999999;
	КонецЕсли;
	
	Если EAN = 8 Тогда
		Возврат 999999;
	КонецЕсли;
	
	ВызватьИсключение НСтр("ru = 'Недопустимая длина EAN. Ожидается 8 или 13.'");
	
КонецФункции


#КонецОбласти

#КонецЕсли