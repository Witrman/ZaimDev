
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПодготовитьФормуНаСервере();		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_СпособыОтраженияКурсовойРазницы", ПараметрыЗаписи, Запись); 
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СчетДоходовБУПриИзменении(Элемент)
	
	Запись.СчетДоходовНУ = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Запись.СчетДоходовБУ));
	
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоДоходовНУ1", "СубконтоДоходовНУ2", "СубконтоДоходовНУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоДоходовНУ1", "ЗаголовокСубконтоДоходовНУ2", "ЗаголовокСубконтоДоходовНУ3"); 
	
	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриИзмененииСчета(Запись.СчетДоходовНУ, Запись, ПоляФормы);
	
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоДоходовБУ1", "СубконтоДоходовБУ2", "СубконтоДоходовБУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоДоходовБУ1", "ЗаголовокСубконтоДоходовБУ2", "ЗаголовокСубконтоДоходовБУ3"); 
	
	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриИзмененииСчета(Запись.СчетДоходовБУ, Запись, ПоляФормы);
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетДоходовБУ, ПоляФормы, ЗаголовкиПолей, Запись.СчетДоходовНУ); 
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовБУ", "СчетДоходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовНУ", "СчетДоходовНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовБУ1ПриИзменении(Элемент)
	
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Запись, Запись.СчетДоходовБУ, Запись.СчетДоходовНУ, 1, Запись.СубконтоДоходовБУ1, "СубконтоДоходовНУ");
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовБУ", "СчетДоходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовНУ", "СчетДоходовНУ", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовБУ2ПриИзменении(Элемент)
	
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Запись, Запись.СчетДоходовБУ, Запись.СчетДоходовНУ, 2, Запись.СубконтоДоходовБУ2, "СубконтоДоходовНУ");
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовБУ", "СчетДоходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовНУ", "СчетДоходовНУ", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовБУ3ПриИзменении(Элемент)
	
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Запись, Запись.СчетДоходовБУ, Запись.СчетДоходовНУ, 3, Запись.СубконтоДоходовБУ3, "СубконтоДоходовНУ");
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовБУ", "СчетДоходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовНУ", "СчетДоходовНУ", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовБУ1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоДоходовБУ", 1, "СчетДоходовБУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовБУ2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоДоходовБУ", 2, "СчетДоходовБУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовБУ3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоДоходовБУ", 3, "СчетДоходовБУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СчетДоходовНУПриИзменении(Элемент)
	
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоДоходовНУ1", "СубконтоДоходовНУ2", "СубконтоДоходовНУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоДоходовНУ1", "ЗаголовокСубконтоДоходовНУ2", "ЗаголовокСубконтоДоходовНУ3");  
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетДоходовНУ, ПоляФормы, ЗаголовкиПолей);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовНУ", "СчетДоходовНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовНУПриИзменении(Элемент)
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "ДоходовНУ", "СчетДоходовНУ");
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовНУ1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоДоходовНУ", 1, "СчетДоходовНУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовНУ2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоДоходовНУ", 2, "СчетДоходовНУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоДоходовНУ3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоДоходовНУ", 3, "СчетДоходовНУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СчетРасходовБУПриИзменении(Элемент)
	
	Запись.СчетРасходовНУ = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Запись.СчетРасходовБУ));
	
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоРасходовНУ1", "СубконтоРасходовНУ2", "СубконтоРасходовНУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоРасходовНУ1", "ЗаголовокСубконтоРасходовНУ2", "ЗаголовокСубконтоРасходовНУ3"); 
	
	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриИзмененииСчета(Запись.СчетРасходовНУ, Запись, ПоляФормы);
	
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоРасходовБУ1", "СубконтоРасходовБУ2", "СубконтоРасходовБУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоРасходовБУ1", "ЗаголовокСубконтоРасходовБУ2", "ЗаголовокСубконтоРасходовБУ3"); 
	
	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриИзмененииСчета(Запись.СчетРасходовБУ, Запись, ПоляФормы);
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетРасходовБУ, ПоляФормы, ЗаголовкиПолей, Запись.СчетРасходовНУ); 
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовБУ", "СчетРасходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовНУ", "СчетРасходовНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовБУ1ПриИзменении(Элемент)
	
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Запись, Запись.СчетРасходовБУ, Запись.СчетРасходовНУ, 1, Запись.СубконтоРасходовБУ1, "СубконтоРасходовНУ");
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовБУ", "СчетРасходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовНУ", "СчетРасходовНУ", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовБУ2ПриИзменении(Элемент)
	
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Запись, Запись.СчетРасходовБУ, Запись.СчетРасходовНУ, 2, Запись.СубконтоРасходовБУ2, "СубконтоРасходовНУ");
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовБУ", "СчетРасходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовНУ", "СчетРасходовНУ", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовБУ3ПриИзменении(Элемент)
	
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Запись, Запись.СчетРасходовБУ, Запись.СчетРасходовНУ, 3, Запись.СубконтоРасходовБУ3, "СубконтоРасходовНУ");
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовБУ", "СчетРасходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовНУ", "СчетРасходовНУ", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовБУ1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоРасходовБУ", 1, "СчетРасходовБУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовБУ2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоРасходовБУ", 2, "СчетРасходовБУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовБУ3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоРасходовБУ", 3, "СчетРасходовБУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СчетРасходовНУПриИзменении(Элемент)
	
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоРасходовНУ1", "СубконтоРасходовНУ2", "СубконтоРасходовНУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоРасходовНУ1", "ЗаголовокСубконтоРасходовНУ2", "ЗаголовокСубконтоРасходовНУ3");  
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетРасходовНУ, ПоляФормы, ЗаголовкиПолей);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовНУ", "СчетРасходовНУ");
	
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовНУПриИзменении(Элемент)
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "РасходовНУ", "СчетРасходовНУ");
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовНУ1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоРасходовНУ", 1, "СчетРасходовНУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовНУ2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоРасходовНУ", 2, "СчетРасходовНУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СубконтоРасходовНУ3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СубконтоНачалоВыбора(Элемент, "СубконтоРасходовНУ", 3, "СчетРасходовНУ", Запись, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ИзменитьПараметрыВыбораПолейСубконтоНаФорме(ЭтаФорма);	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Запись.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли; 
	
	ИзменитьПараметрыВыбораПолейСубконтоНаФорме(ЭтаФорма);
	
	// доходы
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоДоходовБУ1", "СубконтоДоходовБУ2", "СубконтоДоходовБУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоДоходовБУ1", "ЗаголовокСубконтоДоходовБУ2", "ЗаголовокСубконтоДоходовБУ3"); 
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетДоходовБУ, ПоляФормы, ЗаголовкиПолей, Запись.СчетДоходовНУ); 
	
	// расходы
	ПоляФормы      = Новый Структура("Субконто1, Субконто2, Субконто3",
		"СубконтоРасходовБУ1", "СубконтоРасходовБУ2", "СубконтоРасходовБУ3");
	
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконтоРасходовБУ1", "ЗаголовокСубконтоРасходовБУ2", "ЗаголовокСубконтоРасходовБУ3"); 
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Запись.СчетРасходовБУ, ПоляФормы, ЗаголовкиПолей, Запись.СчетРасходовНУ);
	            		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, СчетУчета, ПоляФормы, ЗаголовкиПолей, СчетУчетаНУ = Неопределено, ЭтоТаблица = Ложь)

	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриВыбореСчета(СчетУчета, ЭтаФорма, ПоляФормы, ЗаголовкиПолей);
	
	Если НЕ СчетУчетаНУ = Неопределено Тогда
		
		Для Каждого ПолеФормы Из ПоляФормы Цикл
			ПоляФормы.Вставить(ПолеФормы.Ключ, СтрЗаменить(ПолеФормы.Значение, "БУ", "НУ"));			
		КонецЦикла;
		
		Для Каждого ЗаголовоеПоля Из ЗаголовкиПолей Цикл
			ЗаголовкиПолей.Вставить(ЗаголовоеПоля.Ключ, СтрЗаменить(ЗаголовоеПоля.Значение, "БУ", "НУ"));
		КонецЦикла;
		
		ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриВыбореСчета(СчетУчетаНУ, ЭтаФорма, ПоляФормы, ЗаголовкиПолей);
		
	КонецЕсли;

КонецПроцедуры

 &НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, Суффикс, ИмяСчета, ЗаменаСубконтоНУ = Ложь)
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма.Запись, Форма.Запись, "Субконто" + Суффикс + "%Индекс%", ИмяСчета);
	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(Форма, Форма.Запись, "Субконто" + Суффикс + "%Индекс%", "Субконто" + Суффикс + "%Индекс%", ПараметрыДокумента, ЗаменаСубконтоНУ);	
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(ДанныеОбъекта, ПараметрыОбъекта, ШаблонИмяПоляОбъекта, ИмяСчета)
	
	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	
	СписокПараметров.Вставить("СчетУчета",   ПараметрыОбъекта[ИмяСчета]);	
	СписокПараметров.Вставить("Организация", ДанныеОбъекта.Организация);
	СписокПараметров.Вставить("ВыбиратьПодразделенияОрганизации", Ложь);

	Возврат СписокПараметров; 

КонецФункции

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ИмяЭлементаСубконто, ИндексСубконто, ИмяЭлементаСчета, СтрокаТаблицы, СтандартнаяОбработка)	
	
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Запись, СтрокаТаблицы, ИмяЭлементаСубконто + "%Индекс%", ИмяЭлементаСчета);
	ПроцедурыБухгалтерскогоУчетаКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, ИндексСубконто, СтандартнаяОбработка, ПараметрыДокумента);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконтоНаФорме(Форма)
	
	// доходы
	ИзменитьПараметрыВыбораПолейСубконто(Форма, "ДоходовБУ", "СчетДоходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(Форма, "ДоходовНУ", "СчетДоходовНУ");
		
	// расходы
	ИзменитьПараметрыВыбораПолейСубконто(Форма, "РасходовБУ", "СчетРасходовБУ");	
	ИзменитьПараметрыВыбораПолейСубконто(Форма, "РасходовНУ", "СчетРасходовНУ");
	
КонецПроцедуры


