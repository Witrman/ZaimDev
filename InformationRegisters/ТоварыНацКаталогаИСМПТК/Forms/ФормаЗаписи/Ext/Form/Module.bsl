
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	//Временная заглушка
	ТекстИсключения = НСтр("ru='Форма объекта не предназначена для непосредственного открытия.'");
	ВызватьИсключение ТекстИсключения;
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		Запись.ИИН = ПолучитьИИНОрганизации(ИнтеграцияИСМПТКПереопределяемый.ПолучитьРеквизитИИНОрганизации());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		Запись.ВидПродукции = ПолучитьВидПродукцииПоНоменклатуре();
	КонецЕсли;

	ЗаполнитьСведенияПоХарактеристикамИУпаковкам();
	УправлениеФормой();
		
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыВыбора = Новый Структура("РежимВыбора", Истина); 
	
	ОсобенностьУчетаСписок = ИнтеграцияИСМПТККлиент.ПолучитьСписокДляОтбораМаркируемойПродукции();
	Отбор = Новый Структура;
	Отбор.Вставить("ОсобенностьУчета", ОсобенностьУчетаСписок);
	
	ПараметрыФормыВыбора.Вставить("Отбор", Отбор);
	ПараметрыФормыВыбора.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
		
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормыВыбора, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗарегистрироватьНовыйGTIN(Команда)
	
	ТекстВопроса   = ""; //Присвоить штрихкод
	ТекстСообщения = ""; //Штрихкод занят
	ВыполнитьПроверкиПоНоменклатуре(ТекстВопроса, ТекстСообщения);
	
	Если ЗначениеЗаполнено(ТекстВопроса) Тогда
		
		Дополнительныепараметры = Новый Структура();
		
		ДополнительныеПараметры.Вставить("Номенклатура",     Запись.Номенклатура);
		ДополнительныеПараметры.Вставить("Характеристика", 	 Запись.Характеристика);
		ДополнительныеПараметры.Вставить("EAN", 		     Запись.EAN);
		ДополнительныеПараметры.Вставить("GTIN", 		     Запись.GTIN);
		ДополнительныеПараметры.Вставить("ЕдиницаИзмерения", Запись.ЕдиницаИзмерения);
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение   = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаписатьШтрихкодНоменклатуры", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьНоменклатуру(Команда)
	
	ДанныеДляПоиска = Новый Массив();
	ДанныеДляПоиска.Добавить(Запись.EAN);
	СведенияНоменклатуры = ИнтеграцияИСМПТКПереопределяемый.ПодобратьДанныеПоGTINДляЗаказа(ДанныеДляПоиска);
	
	Если СведенияНоменклатуры.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='Штрихкод %1 не зарегистрирован в регистре штрихкодов номенклатуры!'");
		ТекстСообщения = ИнтеграцияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Запись.EAN);
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
	Иначе
		Запись.Номенклатура   	= СведенияНоменклатуры[0].Номенклатура;
		Запись.Характеристика 	= СведенияНоменклатуры[0].Характеристика;
		Запись.ЕдиницаИзмерения = СведенияНоменклатуры[0].Упаковка;
		Запись.ВидПродукции 	= ПолучитьВидПродукцииПоНоменклатуре();
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	//Сведения карточки
	Если Запись.СтатусКарточки = ПредопределенноеЗначение("Перечисление.СтатусыКарточекНацКаталогаИСМПТК.Опубликована") Тогда
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаПубликации", "Видимость", Истина);
	Иначе	
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаПубликации", "Видимость", Ложь);
	КонецЕсли;
	
	Элементы.СтатусКарточки.ЦветТекста = ИнтеграцияИСМПТККлиентСервер.ЦветСтатусаКарточкиНацКаталога(Запись.СтатусКарточки);
	
	//Команда регистрации штрихкода
	ТекстВопроса   = ""; //Присвоить штрихкод
	ТекстСообщения = ""; //Штрихкод занят
	ВыполнитьПроверкиПоНоменклатуре(ТекстВопроса, ТекстСообщения);
	Если ЗначениеЗаполнено(Запись.Номенклатура) И Не ЗначениеЗаполнено(ТекстСообщения) Тогда
		УстановитьВидимостьКомандыРегистрацииШтрихкода(Истина);
	Иначе
		УстановитьВидимостьКомандыРегистрацииШтрихкода(Ложь);
	КонецЕсли;
	//////////
	
	//Группа Товар
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПодобратьНоменклатуру", "Видимость", Не ЗначениеЗаполнено(Запись.Номенклатура));
	//////////
	
	Если Запись.СтатусКарточки = ПредопределенноеЗначение("Перечисление.СтатусыКарточекНацКаталогаИСМПТК.ОжидаетПодписания") Тогда 
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаРегистрСведенийТоварыНацКаталогаИСМПТКОпубликовать", "Видимость", Истина);
	Иначе
		ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаРегистрСведенийТоварыНацКаталогаИСМПТКОпубликовать", "Видимость", Ложь);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаписатьШтрихкодНоменклатуры(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
		
	Попытка
		
		Номенклатура = Параметры.Номенклатура;
		EAN 		 = Параметры.EAN;
		GTIN         = Параметры.GTIN;
		ЕдиницаИзмерения = Параметры.ЕдиницаИзмерения;
		Характеристика 	 = Параметры.Характеристика;
		
		ИнтеграцияИСМПТКПереопределяемый.ЗаписатьШтрихкодНоменклатуры(Номенклатура, EAN, ЕдиницаИзмерения, Характеристика);
		ТекстСообщения = НСтр("ru='Штрихкод добавлен в регистр!'");
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		УстановитьВидимостьКомандыРегистрацииШтрихкода(Ложь);
		
	Исключение
		
		Информация = ИнформацияОбОшибке();
		ТекстСообщения = НСтр("ru='Не удалось записать штрихкод номенклатуры по причине: %1'");
		ТекстСообщения = ИнтеграцияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, КраткоеПредставлениеОшибки(Информация));
		ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеШтрихкода(Номенклатура, EAN)
	
	Возврат ИнтеграцияИСМПТКПереопределяемый.ПроверитьНаличиеШтрихкодаУноменклатуры(Номенклатура, EAN);
	
КонецФункции

&НаСервере
Функция ПолучитьИИНОрганизации(ПараметрИИН)
	
	Возврат Запись.Организация[ПараметрИИН];
КонецФункции

&НаСервере
Процедура ВыполнитьПроверкиПоНоменклатуре(ТекстВопроса, ТекстСообщения) Экспорт
	
	РезультатПроверки =  ПроверитьНаличиеШтрихкода(Запись.Номенклатура, Запись.EAN);
	НоменклатураСоШтрихкодом = ?(РезультатПроверки.Количество() = 0, Неопределено, РезультатПроверки.Номенклатура);
	
	Если ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		
		Если НоменклатураСоШтрихкодом = Неопределено 
			И ((ХарактеристикиИспользуются И ЗначениеЗаполнено(Запись.Характеристика))
			ИЛИ Не ХарактеристикиИспользуются) Тогда
			
			ТекстВопроса = НСтр("ru = 'Добавить выбранной номенклатуре новый штрихкод на основании данных карточки товара?'");
			
		ИначеЕсли НоменклатураСоШтрихкодом <> Запись.Номенклатура Тогда 
			
			ТекстСообщения = НСтр("ru='Внимание: штрихкод %1 связан с номенклатурой %2'");
			ТекстСообщения = ИнтеграцияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Запись.EAN, НоменклатураСоШтрихкодом);
			ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		Иначе
			
			ТекстСообщения = НСтр("ru='Номенклатура совпадает'");
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Запись.Характеристика) И ХарактеристикиИспользуются Тогда 
			ТекстСообщения = НСтр("ru='Внимание: необходимо заполнить характеристику!'");
			ИнтеграцияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКомандыРегистрацииШтрихкода(ЗначениеСвойства)
	
	ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаЗарегистрироватьНовыйGTIN", "Видимость", ЗначениеСвойства);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВидПродукцииПоНоменклатуре()
	
	Возврат ИнтеграцияИСМПТКПереопределяемый.ПолучитьВидПродукцииПоНоменклатуре(Запись.Номенклатура);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСведенияПоХарактеристикамИУпаковкам()
	
	ДанныеШК = Новый Массив();
	ДанныеШК.Добавить(Запись.EAN);
	ДанныеНоменклатуры = ИнтеграцияИСМПТКПереопределяемый.ПодобратьДанныеПоGTINДляЗаказа(ДанныеШК);
	Если Не ДанныеНоменклатуры.Количество() = 0 Тогда
		ХарактеристикаНоменклатуры = ДанныеНоменклатуры[0].Характеристика;
		УпаковкаНоменклатуры	   = ДанныеНоменклатуры[0].Упаковка;
	Иначе
		ХарактеристикаНоменклатуры = Неопределено;
		УпаковкаНоменклатуры	   = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.Номенклатура) Тогда
		//Характеристики
		Если ИнтеграцияИСМПТКПереопределяемый.ПроверитьИспользованиеХарактеристик() Тогда
			ХарактеристикиИспользуются = ИнтеграцияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоХарактеристикамУНоменклатуры(Запись.Номенклатура);
			ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Характеристика", "Видимость", ХарактеристикиИспользуются);	
			Если ХарактеристикиИспользуются Тогда
				Запись.Характеристика = ХарактеристикаНоменклатуры;
			Иначе
				Запись.Характеристика = Неопределено;
			КонецЕсли;				
		Иначе
			ХарактеристикиИспользуются = Ложь;
			ИнтерфейсИСМПТККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Характеристика", "Видимость", Ложь);	
		КонецЕсли;
		
		//Упаковки
		Если Не ЗначениеЗаполнено(Запись.ЕдиницаИзмерения) Тогда
			Если ИнтеграцияИСМПТКПереопределяемый.ПроверитьИспользованиеУпаковок() Тогда
				//Упаковки используются
				Если Не ИнтеграцияИСМПТКПереопределяемый.ПроверитьВедениеУчетаПоУпаковкамУНоменклатуры(Запись.Номенклатура) Тогда
					//но не у этой позиции
					Запись.ЕдиницаИзмерения = ИнтеграцияИСМПТКПереопределяемый.ПолучитьСведенияОНоменклатуре(Запись.Номенклатура).ЕдиницаИзмерения;
				Иначе
					Запись.ЕдиницаИзмерения = УпаковкаНоменклатуры; 
				КонецЕсли;
			Иначе
				//Упаковки не используются
				Запись.ЕдиницаИзмерения = ИнтеграцияИСМПТКПереопределяемый.ПолучитьСведенияОНоменклатуре(Запись.Номенклатура).ЕдиницаИзмерения;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти