////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СформироватьСтруктуруРеквизитовФормы();
	
	мВыбраннаяФорма = "Форма4002016Кв3";
	КодФормы 		= "Форма400"; 		
	
	мФорматНомераСтроки = "ЧЦ=8; ЧВН=; ЧГ=";
	РегламентированнаяОтчетность.ЗаполнитьСтруктуруФормРегОтчета(ЭтотОбъект);	
	
	СтруктураРеквизитовФормы.мПоддержкаРаботыСоСтруктурнымиПодразделениями = РегламентированнаяОтчетностьПереопределяемый.ПоддержкаРаботыСоСтруктурнымиПодразделениями();	
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов   = Новый СписокЗначений;	
	СтруктураРеквизитовФормы.мПечатныеформы 		  = Новый СписокЗначений;	
	СтруктураРеквизитовФормы.мВыбраннаяФорма          = Параметры.мВыбраннаяФорма;
	
	ЗаполнитьПараметрыФормы(ЭтотОбъект, Параметры);
	
	СтруктураРеквизитовФормы.ЕдиницаИзмерения         = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
			
	ЗаполнитьСведенияОбОтчетномПериоде();
		
	ДатаПодписи	= ТекущаяДатаСеанса();
	
	Инициализация(Параметры.БезОткрытияФормы);
	
	мВыбраннаяФорма = "Форма4002016Кв3"; // могла восстановиться из данных сохраненной ранее формы

	Для Каждого ТекФорма из мСписокФормБезИерархии.ПолучитьЭлементы() Цикл
		Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
			ЗаполнитьПараметры(ТекФорма.КодФормы);
		КонецЕсли;
		РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтотОбъект, ТекФорма.КодФормы);
	КонецЦикла	
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если КодФормы = "Форма400_01" ИЛИ КодФормы = "Форма400_02" 
		ИЛИ КодФормы = "Форма400_03" ИЛИ КодФормы = "Форма400_06" Тогда
		ФормаОбработкаВыбораМногострочныхФорм(ВыбранноеЗначение, ИсточникВыбора);
	ИначеЕсли КодФормы = "Форма400_05" Тогда 
		ФормаОбработкаВыбораОбычнойФормы(ВыбранноеЗначение, ИсточникВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;	
	КонецЕсли;
	
	Если Модифицированность Тогда 
		Оповещение = Новый ОписаниеОповещения("ПриЗакрытииЗавершение", ЭтотОбъект, Новый Структура);				
		Оповещение.ДополнительныеПараметры.Вставить("КодФормы", КодФормы);	
		ТекстВопроса = НСТР("ru = 'Сохранить данные отчета?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да);	
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РазделыОтчетаПриАктивизацииСтроки(Элемент)	
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаОчиститьФормуИПриложения.Доступность = (Элемент.ТекущиеДанные.КодФормы = "Форма400");
		
	Если ЭтаФорма.КодФормы = Элемент.ТекущиеДанные.КодФормы Тогда
		ЗаполнитьПанель(Элемент.ТекущиеДанные.ПризнакОсновной, Элемент.ТекущиеДанные.Многострочность);
		Возврат;
	КонецЕсли;	
	
	РазделыОтчетаПриАктивизацииСтрокиНаСервере(Элемент.ТекущиеДанные.КодФормы, Элемент.ТекущиеДанные.Многострочность);	
		
	СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	Для Каждого СтраницаФорм из Элементы.ГруппаСтраницыОтчета.ПодчиненныеЭлементы Цикл
		Элементы[СтраницаФорм.Имя].Видимость = СтраницаФорм.Имя = ЭтаФорма.КодФормы;	
	КонецЦикла;
	
	ЗаполнитьПанель(Элемент.ТекущиеДанные.ПризнакОсновной, Элемент.ТекущиеДанные.Многострочность);		

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400ПолеТабличногоДокументаСтраница1

&НаКлиенте
Процедура Форма400ПолеТабличногоДокументаСтраница1Выбор(Элемент, Область, СтандартнаяОбработка)
	
	Ячейка = Область.Имя;
	
	ИмяОбласти = Область.Имя;	
	
	Если Область.СодержитЗначение Тогда
		Значение = Область.Значение;
	Иначе
		Значение = "";		
	КонецЕсли;

	Форма400ПолеТабличногоДокументаСтраница1ВыборНаСервере(Ячейка, Значение);	
	
КонецПроцедуры

&НаКлиенте
Процедура Форма400ПолеТабличногоДокументаСтраница1ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Ячейка = Область.Имя;
	
	ИмяОбласти = Область.Имя;
	
	Если ИмяОбласти = "НомерУведомления" ИЛИ ИмяОбласти = "ДатаУведомления" Тогда
		Форма400РасчетНаСервере(Ячейка, Область.Значение, КодФормы);
		Возврат;
	КонецЕсли; 
	
	Если Найти(ИмяОбласти,"s_400_00_0") = 0 Тогда
		Возврат;
	КонецЕсли;

	Если Область.СодержитЗначение Тогда
		Значение = Область.Значение;
	Иначе
		Возврат;		
	КонецЕсли;
	
	Если НЕ Найти(Область.Имя, "s_400_00_0") = 0 Тогда			
		Форма400РасчетНаСервере(Ячейка, Значение, КодФормы);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400ПолеТабличногоДокументаСтраница2

&НаКлиенте
Процедура Форма400ПолеТабличногоДокументаСтраница2ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	Ячейка = Область.Имя;
	
	ИмяОбласти = Область.Имя;	
	
	Если ИмяОбласти = "КодНалоговогоОргана" Тогда
		Форма400РасчетНаСервере(Ячейка, Область.Значение, КодФормы);
		Модифицированность = Истина;
		Возврат;
	КонецЕсли; 

	Если Найти(ИмяОбласти,"s_400_00_0") = 0 Тогда
		Возврат;
	КонецЕсли;

	Если Область.СодержитЗначение Тогда
		Значение = Область.Значение;
	Иначе
		Возврат;		
	КонецЕсли;

	Если НЕ Найти(Область.Имя, "s_400_00_0") = 0 Тогда	
		Форма400РасчетНаСервере(Ячейка, Значение, КодФормы);
		Модифицированность = Истина;
	Конецесли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_01ПолеТабличногоДокументаЛистА

&НаКлиенте
Процедура Форма400_01ПолеТабличногоДокументаЛистAВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ПараметрыСтраницы = Новый Структура();
	ПараметрыСтраницы.Вставить("ИмяСтраницы", "ЛистA");
	ПараметрыСтраницы.Вставить("Область", Область);		
	ПараметрыСтраницы.Вставить("Расчет", Ложь);		

	Ячейка = Область.Имя;			 
	Если (Найти(Ячейка, "Ф400_01_") > 0) Тогда
		НачЗначение = Область.Значение;
		Расчет = Ложь;
		ЗначениеРасшифровки = Область.Расшифровка;    		
		
		Если (Найти(Ячейка, "Ф400_01_001_A__")> 0) Тогда		
						
			ОповещениеВыбораИзСписка = Новый ОписаниеОповещения("ПослеВыбораИзСписка", ЭтаФорма, ПараметрыСтраницы);
			СписокВыбора = Новый СписокЗначений;
			СписокВыбора.Добавить("Спирт");
			СписокВыбора.Добавить("Виноматериал");
			ПоказатьВыборИзСписка(ОповещениеВыбораИзСписка, СписокВыбора);
			
		ИначеЕсли (Найти(Ячейка, "Ф400_01_001_B__")> 0) Тогда		
						
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
			ПараметрыФормы.Вставить("ИмяМакета"			  , "КодыБюджетнойКлассификации");
			ПараметрыФормы.Вставить("ИмяСекции"			  ,	"Классификатор");
			ПараметрыФормы.Вставить("ПолучатьПолныеДанные", Истина);			
			ПараметрыФормы.Вставить("ТекущийКодСтроки"	  , ?(НЕ ЗначениеЗаполнено(НачЗначение), Неопределено, СокрЛП(НачЗначение)));			
			ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзКлассификатора", ПараметрыФормы, ЭтаФорма, Истина);
						
		ИначеЕсли (Найти(Ячейка, "_A") > 0) Тогда   			
			
			ПараметрыСтраницы.Вставить("Расчет", Истина);		
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений, НачЗначение, НСтр("ru='Введите налоговую базу'"), 12, 0) ;			
				
		ИначеЕсли (Найти(Ячейка, "_B") > 0) Тогда  			
			
			ПараметрыСтраницы.Вставить("Расчет", Истина);		
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений, НачЗначение, НСтр("ru='Введите ставку акциза'"), 6, 2) ;
						
		ИначеЕсли (Найти(Ячейка, "_C") > 0) Тогда	
			
			Если Найти(Ячейка, "Ф400_01_014_C") > 0 Тогда
				ПараметрыСтраницы.Вставить("Расчет", Истина);	
			КонецЕсли;
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений, НачЗначение, НСтр("ru='Введите сумму акциза'"), 12, 0) ;
									
		КонецЕсли;  		
		
	Иначе
		Возврат;		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_02ПолеТабличногоДокументаЛистА

&НаКлиенте
Процедура Форма400_02ПолеТабличногоДокументаЛистAВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ПараметрыСтраницы = Новый Структура();
	ПараметрыСтраницы.Вставить("ИмяСтраницы", "ЛистA");
	ПараметрыСтраницы.Вставить("Область", Область);		
	ПараметрыСтраницы.Вставить("Расчет", Ложь);		

	Ячейка = Область.Имя;			 
	Если (Найти(Ячейка, "Ф400_02_") > 0) Тогда
		НачЗначение = Область.Значение;		
		ЗначениеРасшифровки = Область.Расшифровка;    		
		
		Если (Найти(Ячейка, "Ф400_02_001_A__")> 0) Тогда		
			
			ОповещениеВыбораИзСписка = Новый ОписаниеОповещения("ПослеВыбораИзСписка", ЭтаФорма, ПараметрыСтраницы);
			СписокВыбора = Новый СписокЗначений;
			СписокВыбора.Добавить("Алкогольная продукция");
			ПоказатьВыборИзСписка(ОповещениеВыбораИзСписка, СписокВыбора);
			
		ИначеЕсли (Найти(Ячейка, "Ф400_02_001_B__")> 0) Тогда		
						
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
			ПараметрыФормы.Вставить("ИмяМакета"			  , "КодыБюджетнойКлассификации");
			ПараметрыФормы.Вставить("ИмяСекции"			  ,	"Классификатор");
			ПараметрыФормы.Вставить("ПолучатьПолныеДанные", Истина);			
			ПараметрыФормы.Вставить("ТекущийКодСтроки"	  , ?(НЕ ЗначениеЗаполнено(НачЗначение), Неопределено, СокрЛП(НачЗначение)));			
			ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзКлассификатора", ПараметрыФормы, ЭтаФорма, Истина);
			
		ИначеЕсли (Найти(Ячейка, "Ф400_02_002__") > 0) ИЛИ (Найти(Ячейка, "Ф400_02_003__") > 0) 
			ИЛИ (Найти(Ячейка, "Ф400_02_004__") > 0) ИЛИ (Найти(Ячейка, "Ф400_02_005__") > 0)
			ИЛИ (Найти(Ячейка, "Ф400_02_006__") > 0) ИЛИ (Найти(Ячейка, "Ф400_02_007__") > 0)
			ИЛИ (Найти(Ячейка, "Ф400_02_008__") > 0) ИЛИ (Найти(Ячейка, "Ф400_02_009__") > 0) Тогда
			
			ПараметрыСтраницы.Вставить("Расчет", Истина);		
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите налоговую базу'"), 14, 2) ;	
									
		ИначеЕсли (Найти(Ячейка, "Ф400_02_010_A") > 0) Тогда  			
			ПараметрыСтраницы.Вставить("Расчет", Истина);
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите количество марок'"), 9, 0) ;
			
		ИначеЕсли (Найти(Ячейка, "Ф400_02_010_B") > 0) Тогда
			ПараметрыСтраницы.Вставить("Расчет", Истина);
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите емкость потребительской тары'"), 6, 3) ;					
			
		ИначеЕсли (Найти(Ячейка, "Ф400_02_012__") > 0) Тогда
			
			ПараметрыСтраницы.Вставить("Расчет", Истина);
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите ставку акциза'"), 6, 2) ;				
									
		КонецЕсли;  	
		
	Иначе
		Возврат;		
	КонецЕсли;   	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_03ПолеТабличногоДокументаЛистА

&НаКлиенте
Процедура Форма400_03ПолеТабличногоДокументаЛистAВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ПараметрыСтраницы = Новый Структура();
	ПараметрыСтраницы.Вставить("ИмяСтраницы", "ЛистA");
	ПараметрыСтраницы.Вставить("Область", Область);		
	ПараметрыСтраницы.Вставить("Расчет", Ложь);		

	Ячейка = Область.Имя;			 
	Если (Найти(Ячейка, "Ф400_03_") > 0) Тогда
		НачЗначение = Область.Значение;		
		ЗначениеРасшифровки = Область.Расшифровка;    		
		
		Если (Найти(Ячейка, "Ф400_03_001_A__") > 0) Тогда					
			
			ОповещениеВыбораИзСписка = Новый ОписаниеОповещения("ПослеВыбораИзСписка", ЭтаФорма, ПараметрыСтраницы);
			СписокВыбора = Новый СписокЗначений;
			СписокВыбора.Добавить("Сигареты с фильтром");
			СписокВыбора.Добавить("Сигареты без фильтра");
			СписокВыбора.Добавить("Табак");
			СписокВыбора.Добавить("Сигары");
			СписокВыбора.Добавить("Сигариллы");
			ПоказатьВыборИзСписка(ОповещениеВыбораИзСписка, СписокВыбора);
			
		ИначеЕсли (Найти(Ячейка, "Ф400_03_001_B__") > 0) Тогда		
						
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
			ПараметрыФормы.Вставить("ИмяМакета"			  , "КодыБюджетнойКлассификации");
			ПараметрыФормы.Вставить("ИмяСекции"			  ,	"Классификатор");
			ПараметрыФормы.Вставить("ПолучатьПолныеДанные", Истина);			
			ПараметрыФормы.Вставить("ТекущийКодСтроки"	  , ?(НЕ ЗначениеЗаполнено(НачЗначение), Неопределено, СокрЛП(НачЗначение)));			
			ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзКлассификатора", ПараметрыФормы, ЭтаФорма, Истина);
		ИначеЕсли (Найти(Ячейка, "Ф400_03_001__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_002__") > 0) 
			ИЛИ (Найти(Ячейка, "Ф400_03_003__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_004__") > 0)
			ИЛИ (Найти(Ячейка, "Ф400_03_005__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_006__") > 0)
			ИЛИ (Найти(Ячейка, "Ф400_03_007__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_008__") > 0) 
			ИЛИ (Найти(Ячейка, "Ф400_03_008_A__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_008_B__") > 0)
			ИЛИ (Найти(Ячейка, "Ф400_03_009__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_010__") > 0) ИЛИ (Найти(Ячейка, "Ф400_03_011__") > 0) Тогда
			ПараметрыСтраницы.Вставить("Расчет", Истина);		
			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите налоговую базу'"), 12, 0) ;
			
		ИначеЕсли Найти(Ячейка, "Ф400_03_011_A__") > 0 Тогда	
			ПараметрыСтраницы.Вставить("Расчет", Истина);		

			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Количество марок'"), 9, 0) ;
						
		ИначеЕсли Найти(Ячейка, "Ф400_03_011_B__") > 0 Тогда
			
			ПараметрыСтраницы.Вставить("Расчет", Истина);		

			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Количество штук, кг в пачке'"), 6, 3) ;

		ИначеЕсли (Найти(Ячейка, "Ф400_03_013__") > 0) Тогда
			
			ПараметрыСтраницы.Вставить("Расчет", Истина);		

			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите ставку акциза'"), 8, 3) ;			
		КонецЕсли;   		
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_04ПолеТабличногоДокументаСтраница1

&НаКлиенте
Процедура Форма400_04ПолеТабличногоДокументаСтраница1ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяОбласти = Область.Имя;	
	
	Если Найти(ИмяОбласти,"s_400_04_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;		
		Форма400_04ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбластиНаСервере(ИмяОбласти,ЗначениеЯчейки);          		
	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Процедура Форма400_04ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбластиНаСервере(ИмяЯчейки, ЗначениеЯчейки)
		
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, КодФормы, ИмяЯчейки ,ЗначениеЯчейки);
	
	Если ИмяЯчейки = "s_400_04_013" Тогда			
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, КодФормы);
	Иначе
		Форма400_04РасчетНаСервере(Истина,,КодФормы);
	КонецЕсли;          		
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_05ПолеТабличногоДокументаСтраница1

&НаКлиенте
Процедура Форма400_05ПолеТабличногоДокументаСтраница1ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяОбласти = Область.Имя;	
	Если Найти(ИмяОбласти,"s_400_05_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;		
		Форма400_05ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбластиНаСервере(ИмяОбласти, ЗначениеЯчейки);		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_05ПолеТабличногоДокументаСтраница3

&НаКлиенте
Процедура Форма400_05ПолеТабличногоДокументаСтраница2ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяОбласти = Область.Имя;	
	Если Найти(ИмяОбласти,"s_400_05_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;		
		Форма400_05ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбластиНаСервере(ИмяОбласти, ЗначениеЯчейки);		
	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_05ПолеТабличногоДокументаСтраница3

&НаКлиенте
Процедура Форма400_05ПолеТабличногоДокументаСтраница3ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяОбласти = Область.Имя;	
	Если Найти(ИмяОбласти,"s_400_05_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;		
		Форма400_05ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбластиНаСервере(ИмяОбласти, ЗначениеЯчейки);		
	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура Форма400_05ПолеТабличногоДокументаСтраница3Выбор(Элемент, Область, СтандартнаяОбработка)

	Ячейка = Область.Имя;	
	
	ЯчейкаКБК = Ложь;
	Для Индекс = 1 По 12 Цикл
		Если (Найти(Ячейка, "s_400_05_007_" + Индекс + "_a") > 0) Тогда
			ЯчейкаКБК = Истина;
			Прервать;
		КонецЕсли; 		
	КонецЦикла; 
	
	Если Не ЯчейкаКБК Тогда
		Возврат
	КонецЕсли; 
		
	НачЗначение = Область.Значение;
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
	ПараметрыФормы.Вставить("ИмяМакета"			  , "КодыБюджетнойКлассификации");
	ПараметрыФормы.Вставить("ИмяСекции"			  ,	"Классификатор");
	ПараметрыФормы.Вставить("ПолучатьПолныеДанные", Истина);			
	ПараметрыФормы.Вставить("ТекущийКодСтроки"	  , ?(НЕ ЗначениеЗаполнено(НачЗначение), Неопределено, СокрЛП(НачЗначение)));			
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзКлассификатора", ПараметрыФормы, ЭтаФорма, Истина);		
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_06ПолеТабличногоДокументаЛистА

&НаКлиенте
Процедура Форма400_06ПолеТабличногоДокументаЛистAВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ПараметрыСтраницы = Новый Структура;
	ПараметрыСтраницы.Вставить("ИмяСтраницы", "ЛистA");
	ПараметрыСтраницы.Вставить("Область", Область);		
	ПараметрыСтраницы.Вставить("Расчет", Ложь);		
	
	Ячейка = Область.Имя;			 
	Если (Найти(Ячейка, "Ф400_06_") > 0) Тогда
		НачЗначение = Область.Значение;		
		ЗначениеРасшифровки = Область.Расшифровка;    		
		
		Если (Найти(Ячейка, "Ф400_06_B__")> 0) Тогда		
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
			ПараметрыФормы.Вставить("ИмяМакета"			  , "КодыБюджетнойКлассификации");
			ПараметрыФормы.Вставить("ИмяСекции"			  ,	"Классификатор");
			ПараметрыФормы.Вставить("ПолучатьПолныеДанные", Истина);				
			
			
			ПараметрыФормы.Вставить("ТекущийКодСтроки"	  , ?(НЕ ЗначениеЗаполнено(НачЗначение), Неопределено, СокрЛП(НачЗначение)));			
			ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзКлассификатора", ПараметрыФормы, ЭтаФорма, Истина);
			
		ИначеЕсли (Найти(Ячейка, "Ф400_06_C__") > 0) Тогда
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите объем использованного сырья'"), 12, 0) ;
		ИначеЕсли (Найти(Ячейка, "Ф400_06_D__") > 0) Тогда
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите ставку акциза'"), 6, 2) ;			
		ИначеЕсли (Найти(Ячейка, "Ф400_06_E__") > 0) Тогда
			ПараметрыСтраницы.Вставить("ПередаватьИтоги", Истина);			
			ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаЗначения", ЭтаФорма, ПараметрыСтраницы); 		 
			ПоказатьВводЧисла(ОповещениеВводаЗначений,НачЗначение, НСтр("ru='Введите сумму вычета'"), 12, 0) ;			
		КонецЕсли;  
				
	Иначе
		Возврат;
	КонецЕсли;
			     
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_07ПолеТабличногоДокументаСтраница1

&НаКлиенте
Процедура Форма400_07ПолеТабличногоДокументаСтраница1ПриИзмененииСодержимогоОбласти(Элемент, Область)
	ИмяОбласти = Область.Имя;	
	
	Если Найти(ИмяОбласти,"s_400_07_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;
		Форма400_07ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбласти(ИмяОбласти, ЗначениеЯчейки)
	КонецЕсли;
			
	Модифицированность = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_07ПолеТабличногоДокументаСтраница2

&НаКлиенте
Процедура Форма400_07ПолеТабличногоДокументаСтраница2ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяОбласти = Область.Имя;	
	
	Если Найти(ИмяОбласти,"s_400_07_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;
		Форма400_07ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбласти(ИмяОбласти, ЗначениеЯчейки);
	КонецЕсли;
			
	Модифицированность = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ   Форма400_08ПолеТабличногоДокументаСтраница1

&НаКлиенте
Процедура Форма400_08ПолеТабличногоДокументаСтраница1ПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяОбласти = Область.Имя;	
	
	Если Найти(ИмяОбласти,"s_400_08_0") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.СодержитЗначение Тогда
		ЗначениеЯчейки = Область.Значение;
		Форма400_08ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбласти(ИмяОбласти, ЗначениеЯчейки);
	КонецЕсли;
			
	Модифицированность = Истина;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьСразу(Команда)
	
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	
	ДобавитьСтрокуНаСервере();

КонецПроцедуры      

&НаКлиенте
Процедура ПредыдущаяСтр(Команда)
	ПредыдущаяСтрНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура СледующаяСтр(Команда)
	СледующаяСтрНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)	
	УдалитьСтрокуНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)	
	СохранитьДанные();	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Перезаполнить = Истина; // Для выполнения запроса на пересчет данных к пользователю
	
	СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы", КодФормы));
	
	Если СтрокаФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Перезаполнить Тогда
		ПризнакАвтоЗаполнения =  РегламентированнаяОтчетностьКлиент.ОпределитьПризнакАвтоЗаполненияФормы(СтрокаФормы);
		Если Не ПризнакАвтоЗаполнения Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если Перезаполнить Тогда		
		Если СтрокаФормы.ПолучитьЭлементы().Количество() > 0 Тогда
			ТекстВопроса = "Перезаполнить данные формы и ее дополнительных форм?";
		Иначе
			ТекстВопроса = "Перезаполнить данные формы?";
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьАвтоЗавершение", ЭтотОбъект, Новый Структура);				
		Оповещение.ДополнительныеПараметры.Вставить("КодФормы", КодФормы);
		Оповещение.ДополнительныеПараметры.Вставить("Перезаполнить", Перезаполнить);
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, ,КодВозвратаДиалога.Да);		

	КонецЕсли;		
	    
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВXML(Команда)
	
	ГодФормирования = Год(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	
	Если 2016 < ГодФормирования Тогда 
		ТекстСообщения = НСтр("ru = 'Отчет не предназначен для выгрузки в XML в период формирования " + Формат(ГодФормирования,"ЧГ=0") + " г." + Символы.ПС + 
						"Пожалуйста, обновите комплект отчетов.'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект);	
	
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);

КонецПроцедуры  

&НаКлиенте
Процедура ВыгрузитьПослеПодключенияРасширенияРаботыСФайлами(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Подключено Тогда
		ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогСохраненияФайла.ПолноеИмяФайла = КодФормы + " " + СтруктураРеквизитовФормы.мГод + "г" + ".xml";
		ДиалогСохраненияФайла.Фильтр = РегламентированнаяОтчетностьКлиентСервер.ФильтрДиалоговВыбораИСохраненияРегламентированногоОтчета();	
		ДиалогСохраненияФайла.МножественныйВыбор = Ложь;
		ДиалогСохраненияФайла.Заголовок = НСтр("ru = 'Укажите файл'");		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);
		ДиалогСохраненияФайла.Показать(ОписаниеОповещения);
	Иначе   
		НачатьПолучениеФайлаССервера(ВыгрузитьВXMLНаСервере(), КодФормы + ".xml"); 
	КонецЕсли;
	   
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	АдресВременногоХранилища = ВыгрузитьВXMLНаСервере();
		
	ПолноеИмяФайла = Результат[0];
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, АдресВременногоХранилища));
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяФайла",ПолноеИмяФайла); 
	Обработчик = Новый ОписаниеОповещения("ВыгрузитьФайлНаКлиентеЗавершение", ЭтотОбъект,ДополнительныеПараметры);
	ПараметрыСохранения = ФайловаяСистемаКлиент.ПараметрыСохраненияФайлов();
	ПараметрыСохранения.Интерактивно = Ложь;
	ФайловаяСистемаКлиент.СохранитьФайлы(Обработчик, ПолучаемыеФайлы, ПараметрыСохранения); 
	
	        
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайлНаКлиентеЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	ТекстЗаголовка = НСтр("ru = 'Данные успешно выгружены в файл'");
	
	СтруктураФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(ДополнительныеПараметры.ИмяФайла);
	
	РабочийКаталог = СтруктураФайла.Путь;

	#Если НЕ ВебКлиент Тогда
		ПоказатьОповещениеПользователя(
		ТекстЗаголовка, "file:///" + СтрЗаменить(СокрЛП(РабочийКаталог), "\", "/"),
		РабочийКаталог);
	#Иначе
		Если НЕ ЗначениеЗаполнено(ПолученныеФайлы) Тогда
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
		ТекстЗаголовка,,
		РабочийКаталог);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСтраницу(Команда)
	
	ВыбСтраница = 1;
	
	ОповещениеВводаЗначений = Новый ОписаниеОповещения("ПослеВводаСтраницы", ЭтаФорма); 
	ПоказатьВводЧисла(ОповещениеВводаЗначений,ВыбСтраница, "Введите номер страницы",5,0);
	
КонецПроцедуры

&НаКлиенте
Процедура Настройка(Команда)
	ОткрытьФормуНастройкиСтраниц()	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФорму(Команда)
	
	РегламентированнаяОтчетностьКлиент.ОчиститьРеглОтчет(ЭтотОбъект, "ОчиститьФорму");
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФормуИПриложения(Команда)
	
	РегламентированнаяОтчетностьКлиент.ОчиститьРеглОтчет(ЭтотОбъект, "ОчиститьФормуИПриложения");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////
// СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУНКЦЦИИ

&НаКлиенте
Процедура ПослеВводаСтраницы(Значение, Параметры) Экспорт
	
	Если НЕ Значение = Неопределено Тогда  
		
		ТекФорма = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы", КодФормы));
		Если ТекФорма = Неопределено Тогда
			ВсегоСтраниц = 1;
		Иначе
			ВсегоСтраниц = ТекФорма.ВсегоСтраниц;
		КонецЕсли;		
			
		Если Значение = 0 Тогда
			ТекущаяСтраница = 1;
		ИначеЕсли Значение > ВсегоСтраниц Тогда
			ТекущаяСтраница = ВсегоСтраниц;
		Иначе
			ТекущаяСтраница = Значение;				
		КонецЕсли;
		
		ПослеВводаСтраницыНаСервере();
		  
	КонецЕсли;
	           	
КонецПроцедуры

&НаСервере
Процедура ПослеВводаСтраницыНаСервере()
	РегламентированнаяОтчетность.ВывестиСтраницуМногострочнойФормы(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПредыдущаяСтрНаСервере()
	ТекущаяСтраница = ТекущаяСтраница - 1;
	РегламентированнаяОтчетность.ВывестиСтраницуМногострочнойФормы(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СледующаяСтрНаСервере()
	ТекущаяСтраница = ТекущаяСтраница + 1;
	РегламентированнаяОтчетность.ВывестиСтраницуМногострочнойФормы(ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокуНаСервере()
	РегламентированнаяОтчетность.УдалитьСтрокуМногострочнойФормы(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуНаСервере()
	
	РегламентированнаяОтчетность.ДобавитьСтрокуМногострочнойФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("СписокСтруктурныхЕдиниц");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");			
	СтруктураРеквизитовФормы.Вставить("НалоговыйКомитет");				
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");		
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мПечатаемыеРазделы");
	СтруктураРеквизитовФормы.Вставить("мПечатныеФормы");		
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСоставПоказателей");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");	
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("НаимОрг");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);	
	СтруктураРеквизитовФормы.Вставить("мПолноеИмяФайлаВнешнейОбработки");	
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("НомерТекущейСтраницы");		
	СтруктураРеквизитовФормы.Вставить("НужноРассчитатьОтчетНаСервере", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуЗаполнить", Истина);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуРасшифровать", Ложь);
	СтруктураРеквизитовФормы.Вставить("АдресВременногоХранилищаРасшифровки");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");	
	СтруктураРеквизитовФормы.Вставить("ТекстДляЗаголовочнойЧасти");
	СтруктураРеквизитовФормы.Вставить("СформироватьФормуОтчетаАвтоматически");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы", Параметры.БезОткрытияФормы);	
	СтруктураРеквизитовФормы.Вставить("мПериодичность", Параметры.мПериодичность);		
	СтруктураРеквизитовФормы.Вставить("мГод");	
	СтруктураРеквизитовФормы.Вставить("мКвартал");	
	СтруктураРеквизитовФормы.Вставить("мМесяц");		

	// индивидуальные параметры формы
	СтруктураРеквизитовФормы.Вставить("мПоддержкаРаботыСоСтруктурнымиПодразделениями");		
	
КонецПроцедуры

// Восстанавливает сохраненные данные отчета.
//
&НаСервере
Процедура ВосстановитьСохраненныеДанные()	
	
	РегламентированнаяОтчетность.ВосстановитьСохраненныйОтчет(ЭтотОбъект);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета()
	
	СтруктураЗависимыхЯчеекДляАвторасчета = Новый Структура;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОтчетномПериоде() Экспорт

	СтрПериодОтчета = ПредставлениеПериода(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, "ФП = истина");
	
	Если СтруктураРеквизитовФормы.мПериодичность = Перечисления.Периодичность.Квартал Тогда
		СтруктураРеквизитовФормы.мКвартал = Лев(СтрПериодОтчета,1);
		СтруктураРеквизитовФормы.мМесяц = Неопределено;
	Иначе
		СтруктураРеквизитовФормы.мМесяц = Месяц(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		СтруктураРеквизитовФормы.мКвартал = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мГод = Лев(Прав(СтрПериодОтчета,7),4);
		
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСведенияОНалогоплательщикеНаСервере(ТекущееИмяФормы)
	
	ОргСведения = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОНалогоплательщике(Налогоплательщик, ДатаПодписи);
	//Если организация не указана то не выводим никаких сведений
	Если ОргСведения = 0 Тогда
		Возврат;
	КонецЕсли;

	// Инициализируем переменные
	РННЮЛ = ""; 	// РНН	
	НаимЮЛПол = ""; // Полное наименование 	
	ИИН_БИН = ""; 	// ИИН_БИН	
	Руководитель = ""; 	// ФИО руководителя				
	КодНалоговогоОргана = ""; // Код налогового органа	
	
	
	// Получаем данные
	ОргСведения.Свойство("РННЮЛ",     			РННЮЛ);
	ОргСведения.Свойство("БИН_ИИН",   			ИИН_БИН);
	ОргСведения.Свойство("ПолноеНаименование", 	НаимЮЛПол);	
	ОргСведения.Свойство("Руководитель",		Руководитель);	
	
                                         		
	// Производим операции связанные с текущей формой отчетности	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "ИИН_БИН", ИИН_БИН);
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "ОргНазв", НаимЮЛПол);
	// Разбиваем название организации
	НазваниеОрганизацииДляРазбиения = НаимЮЛПол;
	НачПозиция = 1;
	Для Шаг = 1 По 3 Цикл
		ДлинаСтроки = ЭтотОбъект[ТекущееИмяФормы + "ПолеТабличногоДокументаСтраница1"].Области["ОргНазв"+Шаг].ТипЗначения.КвалификаторыСтроки.Длина;
		НазОрганизации = Сред(НазваниеОрганизацииДляРазбиения, НачПозиция, ДлинаСтроки); 
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы,"ОргНазв"+Шаг,НазОрганизации);
		НачПозиция =НачПозиция + ДлинаСтроки;
	КонецЦикла;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы,"Руководитель", Руководитель);	
	// Дата подачи декларации
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы,"ДатаПодачи",ДатаПодписи);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПанель(ПризнакОсновнойФормы,ПризнакМногострочности)
			
	Элементы.ФормаВыгрузитьВXML.Видимость = ПризнакОсновнойФормы; 
	Элементы.ФормаЗаполнить.Доступность   = НЕ (КодФормы = "Форма400_06" ИЛИ КодФормы = "Форма400_07"); 
	Элементы.ГруппаКнопокДействияСоСтрокамиИСтраницами.Видимость = ПризнакМногострочности;	
			    	
КонецПроцедуры //ЗаполнитьПанель()

&НаСервере
Процедура РазделыОтчетаПриАктивизацииСтрокиНаСервере(НовыйКодФормы, НовыйПризнакМногострочность);
	
	//проверим, что стояли не на основной, итоги передаем только когда переходим из доп.форм
	ТекФорма = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы", КодФормы));
	Если ТекФорма <> Неопределено И Не ТекФорма.ПризнакОсновной Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, КодФормы, Истина);		
	КонецЕсли;
				
	// установим новые значения реквизитам формы
	ЭтаФорма.КодФормы = НовыйКодФормы;	
	
	// передаем данные в структуру
	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма, НовыйКодФормы);	
	
	Если  НовыйПризнакМногострочность Тогда
		РегламентированнаяОтчетность.ПоказатьСтраницыМногострочнойФормы(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры	


&НаСервере
Процедура ЗаполнитьВидРасчета(ТекущееИмяФормы, ВидРасчета)
	
	//сначала очищаем поля, если были проставлены уже отметки
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Первоначальная","");
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Очередная","");
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Дополнительная","");
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"ПоУведомлению","");
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Ликвидационная","");
	
	Если ВидРасчета = "Первоначальная" Тогда
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Первоначальная","Х");
	ИначеЕсли ВидРасчета = "Очередная" Тогда
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Очередная","Х");		
	ИначеЕсли ВидРасчета = "Дополнительная" Тогда
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Дополнительная","Х");		
	ИначеЕсли ВидРасчета = "ПоУведомлению" Тогда
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"ПоУведомлению","Х");		
	ИначеЕсли ВидРасчета = "Ликвидационная" Тогда
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"Ликвидационная","Х");		
	КонецЕсли;
	
	Если ВидРасчета = "ПоУведомлению" Тогда
		Форма400ПолеТабличногоДокументаСтраница1.Области.НомерУведомления.Защита = Ложь;
		Форма400ПолеТабличногоДокументаСтраница1.Области.ДатаУведомления.Защита = Ложь;
	Иначе
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"НомерУведомления","");
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекущееИмяФормы,"ДатаУведомления","");
		Форма400ПолеТабличногоДокументаСтраница1.Области.НомерУведомления.Защита = Истина;
		Форма400ПолеТабличногоДокументаСтраница1.Области.ДатаУведомления.Защита = Истина;
	КонецЕсли;
	
	Модифированность = Истина;
	
КонецПроцедуры // ЗаполнитьВидРасчета()

// Процедура очистки формы
//
// параметр: ТекИмяФормы - имя очищаемой формы (=КодФормы)
//           ОчиститьВсе - признак вида очистки формы              
//
Процедура Очистить(ТекИмяФормы,ОчиститьВсе = Ложь) Экспорт
	
	СписокПоказателейНеПодлежащихОчистке = Новый СписокЗначений;
	// Список ячеек, очищать которые не нужно
	Если ОчиститьВсе Тогда
		СписокПоказателейНеПодлежащихОчистке.Добавить("КодВалюты");
	Иначе
		СписокПоказателейНеПодлежащихОчистке = Новый СписокЗначений;
		СписокПоказателейНеПодлежащихОчистке.Добавить("ОргНазв");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Первоначальная");
	    СписокПоказателейНеПодлежащихОчистке.Добавить("Очередная");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Дополнительная");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Ликвидационная");
		СписокПоказателейНеПодлежащихОчистке.Добавить("ПоУведомлению");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Месяц");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Год");
	    СписокПоказателейНеПодлежащихОчистке.Добавить("ДовУправляющий");
		СписокПоказателейНеПодлежащихОчистке.Добавить("НомерУведомления");
		СписокПоказателейНеПодлежащихОчистке.Добавить("ДатаУведомления");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Расчеты421");
		СписокПоказателейНеПодлежащихОчистке.Добавить("Расчеты431");
		СписокПоказателейНеПодлежащихОчистке.Добавить("КодНалоговогоОргана");
	КонецЕсли;
	
	РегламентированнаяОтчетность.ОчиститьСтруктуруДанныхИТабличноеПолеФормы(ЭтаФорма, ТекИмяФормы, ОчиститьВсе, СписокПоказателейНеПодлежащихОчистке);
			
КонецПроцедуры // Очистить()

&НаКлиенте
Процедура ОчиститьРеглОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Форма = ДополнительныеПараметры.Форма;	
		СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(Форма.мСписокФормБезИерархии, Новый Структура("КодФормы", Форма.КодФормы));
		Вложенность = ДополнительныеПараметры.ОчищатьПриложения;	
		
		ОчиститьРеглОтчетЗавершениеНаСервере(СтрокаФормы.КодФормы, СтрокаФормы.Многострочность, Вложенность)	
	КонецЕсли;		
КонецПроцедуры 	

&НаСервере
Процедура ОчиститьРеглОтчетЗавершениеНаСервере(КодФормы, ПризнакМногострочности, Вложенность) Экспорт		
	РегламентированнаяОтчетность.ОчиститьДанныеРегОтчета(ЭтотОбъект, КодФормы, ПризнакМногострочности, Вложенность);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыНастройкиСтраниц(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КопироватьДанныеФормы(РезультатЗакрытия, СписокФормДерева);
	
	Модифицированность = Истина;
	
	//обновим мСписокФормБезИерархии
	Для Каждого СтрокаФормы ИЗ мСписокФормБезИерархии.ПолучитьЭлементы() Цикл		
			
		ТекущаяСтрокаСписка = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(СписокФормДерева, Новый Структура("КодФормы",СтрокаФормы.КодФормы));
			
		Если  НЕ ТекущаяСтрокаСписка = Неопределено Тогда
			СтрокаФормы.Выгружать               = ТекущаяСтрокаСписка.Выгружать;
			СтрокаФормы.ПоказатьСтраницу        = ТекущаяСтрокаСписка.ПоказатьСтраницу;			
			СтрокаФормы.АвтополучениеИтогов     = ТекущаяСтрокаСписка.АвтополучениеИтогов;  
			СтрокаФормы.АвтоЗаполнение          = ТекущаяСтрокаСписка.АвтоЗаполнение;  
		КонецЕсли;			
	КонецЦикла; 	

	Если ДополнительныеПараметры.Свойство("ТекущийРаздел") И НЕ ДополнительныеПараметры.ТекущийРаздел = Неопределено Тогда  		
		// Пытаемся найти ранее запомненный раздел.
		НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(РазделыОтчета, Новый Структура("СписокФормДереваСтраницы",ДополнительныеПараметры.ТекущийРаздел));
		// В случае успешного поиска, устанавливаем курсор на найденный раздел.
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;			
	КонецЕсли;  	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиСтраниц()
	
	// Запоминаем текущий раздел, установленный в дереве разделов отчета.
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		ТекущийРаздел = Элементы.РазделыОтчета.ТекущиеДанные.Страницы;		
	КонецЕсли;
	
	Для Каждого ТекФорма ИЗ мСписокФормБезИерархии.ПолучитьЭлементы() Цикл		
			
		ТекущаяСтрокаСписка = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(СписокФормДерева, Новый Структура("КодФормы",ТекФорма.КодФормы));
			
		Если  НЕ ТекущаяСтрокаСписка = Неопределено Тогда
			ТекущаяСтрокаСписка.Выгружать               = ТекФорма.Выгружать;
			ТекущаяСтрокаСписка.ПоказатьСтраницу        = ТекФорма.ПоказатьСтраницу;			
			ТекущаяСтрокаСписка.АвтополучениеИтогов     = ТекФорма.АвтополучениеИтогов;  
			ТекущаяСтрокаСписка.АвтоЗаполнение          = ТекФорма.АвтоЗаполнение;  
		КонецЕсли;		   
		
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура("СписокФормДерева",СписокФормДерева);
	
	ДопПараметры = Новый Структура("ТекущийРаздел",ТекущийРаздел);
	
	ОповещениеПослеЗакрытияФормы = Новый ОписаниеОповещения("ПослеЗакрытияФормыНастройкиСтраниц",ЭтотОбъект,ДопПараметры);
	
	ОткрытьФорму("Обработка.ОбщиеОбъектыРегламентированнойОтчетности.Форма.НастройкиОтчета",ПараметрыФормы, ЭтаФорма,,,,ОповещениеПослеЗакрытияФормы,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////
// Печать

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	 Перем СтруктураГруппы; 
    
    Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
        ТекстСообщения = НСтр("ru = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");            
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);                
                
        Возврат Ложь;
        
    КонецЕсли;
            
    СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
    СтруктураРеквизитовФормы.мРежимПечати = Истина;
    
    Если СтруктураРеквизитовФормы.НужноРассчитатьОтчетНаСервере Тогда
        ВыборРасчета(КодФормы, Неопределено, Неопределено);
    КонецЕсли; 

    РегламентированнаяОтчетность.СформироватьСписокПечатаемыхЛистов(ЭтаФорма);                 
        
    Возврат Истина;    
	
КонецФункции

// Обрабатывает полученный из формы ФормаНастройкиОтчета дерево значений,
// определяет состав помеченных для вывода на печать листов.
//
// Параметры:
//  ВидПечати - строка, задающая способ печати:
//              "ПоказатьБланк" - непосредственный вывод на печать;
//              "ПечататьСразу" - с предварительным просмотром.
//
&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1. Формируется печатная форма...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если НЕ ПечатьНаСервере(ВидПечати) Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(ЭтаФорма, ВидПечати, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// Выгрузка в ХМL 
&НаСервере
Функция ВыгрузитьВXMLНаСервере(ВыдаватьСообщение = Ложь)
		
	Возврат РегламентированнаяОтчетность.ВыгрузитьОтчетВXMLДляСОНО(ЭтотОбъект, ВыдаватьСообщение);	

КонецФункции


///////////////////////////////////////////////////////////////
// Общие механизмы отчета

&НаКлиенте
Процедура ОбновитьПараметрыФормыНаКлиенте(Параметры) Экспорт
	ЗаполнитьПараметрыФормы(ЭтотОбъект, Параметры);	
	
	ЗаполнитьСведенияОбОтчетномПериоде();
	
	Для Каждого ТекФорма из мСписокФормБезИерархии.ПолучитьЭлементы() Цикл
		ЗаполнитьПараметры(ТекФорма.КодФормы);		
	КонецЦикла	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПараметрыФормы(ТекФорма, Параметры)
	
	ЗаполнитьЗначенияСвойств(ТекФорма.СтруктураРеквизитовФормы, Параметры);                     		
	ТекФорма.Налогоплательщик        						 = Параметры.Налогоплательщик;		
	
КонецПроцедуры

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	
	Перем ИсходноеКоличествоСтрокГруппы;
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;	
		
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда // документ скопирован
			ВосстановитьСохраненныеДанные();
		Иначе // новый документ
			
			СтруктураРеквизитовФормы.ЕдиницаИзмерения         = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;										
		КонецЕсли;
		
		
		Модифицированность = Истина;
		
	Иначе
		ВосстановитьСохраненныеДанные();			
		Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
		КонецЕсли;		
	КонецЕсли;
	
	//Обход ситуации с повторным открытием основной формы, из-за ТД
	МассивРеквизитовФормы = ЭтотОбъект.ПолучитьРеквизиты();
	Для Счетчик = 0 По МассивРеквизитовФормы.Количество()-1 Цикл		
		РеквизитФормы = МассивРеквизитовФормы[Счетчик];
		Если РеквизитФормы.ТипЗначения.СодержитТип(Тип("ТабличныйДокумент")) Тогда
			ЭтотОбъект[РеквизитФормы.Имя] = ЭтотОбъект[РеквизитФормы.Имя];	
		КонецЕсли;
	КонецЦикла;	  	
	
	мСтруктураЗначений = Новый Структура;
	
	Если СтруктураРеквизитовФормы.Свойство("СформироватьФормуОтчетаАвтоматически") И СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически <> Неопределено Тогда
		
		ЗаполнитьАвтоНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметры(ТекущееИмяФормы) Экспорт
	
	Форма = РеквизитФормыВЗначение("мСписокФормБезИерархии").Строки.Найти(ТекущееИмяФормы, "КодФормы");
	
	Если Форма.Многострочность = 1 Тогда // заполнение структуры шапки(подвала) для многострочных форм
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "ИИН_БИН", Налогоплательщик.ИдентификационныйНомер, Ложь);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "Месяц", СтруктураРеквизитовФормы.мМесяц, Ложь);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "Год", СтруктураРеквизитовФормы.мГод, Ложь);
		
	Иначе //обычная форма
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "Год", СтруктураРеквизитовФормы.мГод);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "Месяц", СтруктураРеквизитовФормы.мМесяц);
				
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "ИИН_БИН", Налогоплательщик.ИдентификационныйНомер);			
		                                              
	КонецЕсли;
	
	Если ТекущееИмяФормы = Лев(мВыбраннаяФорма,СтрДлина(мВыбраннаяФорма)-7) Тогда 
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтотОбъект, ТекущееИмяФормы, "КодВалюты", "KZT");
			
		ЗаполнитьВидРасчета(ТекущееИмяФормы, "Очередная");		
		
		//заполним основные сведения об организации
		ЗаполнитьСведенияОНалогоплательщикеНаСервере(ТекущееИмяФормы);
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАвтоНаСервере()
	
	РегламентированнаяОтчетность.ОчиститьДанныеРегОтчета(ЭтотОбъект, ЭтотОбъект.КодФормы, Ложь,Ложь);
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтаФорма, ЭтаФорма.КодФормы);
	
	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма);	
	
	Форма400РасчетНаСервере(Неопределено, Неопределено,КодФормы);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
//Процедура выполняет выбор процедуры расчета.
//ВыборРасчета выполняется при восстановлении данных, при изменении поля табличного документа
//
//Параметры:    ТекФорма - имя текущей формы
//              Индекс - индекс строки для многострочной формы
//              Показатель - имя ячейки, откуда была вызвана процедура расчета многострочной
//                           формы, без указания номера строки (например, без "__1")
//
Процедура ВыборРасчета(ТекФорма, Индекс = Неопределено, Показатель = Неопределено) Экспорт
	
	Если ТекФорма = "Форма400" Тогда
		Форма400РасчетНаСервере(Индекс, Показатель, ТекФорма);				
	ИначеЕсли ТекФорма = "Форма400_01" Тогда		
		Форма400_01РасчетНаСервере(Индекс, Показатель, ТекФорма);
	ИначеЕсли ТекФорма = "Форма400_02" Тогда		
		Форма400_02РасчетНаСервере(Индекс, Показатель, ТекФорма);
	ИначеЕсли ТекФорма = "Форма400_03" Тогда		
		Форма400_03РасчетНаСервере(Индекс, Показатель, ТекФорма);		
	ИначеЕсли ТекФорма = "Форма400_04" Тогда		
		Форма400_04РасчетНаСервере(Индекс, Показатель, ТекФорма);
	ИначеЕсли ТекФорма = "Форма400_05" Тогда		
		Форма400_05РасчетНаСервере(, ТекФорма);
	ИначеЕсли ТекФорма = "Форма400_08" Тогда		
		Форма400_08РасчетНаСервере(, ТекФорма);	
	КонецЕсли;		
	
КонецПроцедуры // ВыборРасчета()

&НаКлиенте
Процедура ПриЗакрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьнаСервере();
		Оповестить("Позиционирование в списке отчетов", СтруктураРеквизитовФормы.мСохраненныйДок);
	КонецЕсли;	

КонецПроцедуры 

&НаКлиенте
Процедура СохранитьДанные() Экспорт
	СохранитьНаСервере();
	Оповестить("Позиционирование в списке отчетов", СтруктураРеквизитовФормы.мСохраненныйДок);
КонецПроцедуры

&НаСервере
Процедура СохранитьнаСервере();
	РегламентированнаяОтчетность.СохранитьОтчет(ЭтотОбъект);
КонецПроцедуры

&НаСервере 
Процедура ПередатьЗначениеВСтруктуруНаСервере(ИмяЯчейки, ЗначениеЯчейки, ПередаватьВТП = Ложь, ПередаватьВМногострочнуюЧасть = Ложь, ПередаватьИтоги = Ложь)
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, КодФормы, ИмяЯчейки ,ЗначениеЯчейки, ПередаватьВТП, ПередаватьВМногострочнуюЧасть);
	
	Если ПередаватьИтоги Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, КодФормы);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвтоЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	 	
	
	Перезаполнить = ДополнительныеПараметры.Перезаполнить;
	Очистить(КодФормы,Истина);
	
	Если КодФормы = "Форма400" Тогда 		
		Форма400ЗаполнитьАвто(Перезаполнить);		 
	ИначеЕсли КодФормы = "Форма400_01" Тогда 		
		Форма400_01ЗаполнитьАвто(Перезаполнить);
	ИначеЕсли КодФормы = "Форма400_02" Тогда  
		Форма400_02ЗаполнитьАвто(Перезаполнить);
	ИначеЕсли КодФормы = "Форма400_03" Тогда 		
		Форма400_03ЗаполнитьАвто(Перезаполнить);
	ИначеЕсли КодФормы = "Форма400_04" Тогда  
		Форма400_04ЗаполнитьАвто(Перезаполнить); 		
	ИначеЕсли КодФормы = "Форма400_05" Тогда 		
		Форма400_05ЗаполнитьАвто(Перезаполнить);
	ИначеЕсли КодФормы = "Форма400_08" Тогда  
		Форма400_08ЗаполнитьАвто(Перезаполнить); 
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаЗначенияДляВыгрузки (ПроверяемоеЗначение, КоличестовСимволов)
	
	КоличествоПроверяемогоЗнач = СтрДлина(Формат(ПроверяемоеЗначение, "ЧГ=0"));
	
	Если КоличестовСимволов < КоличествоПроверяемогоЗнач Тогда 
		ЗначениеВозврата = 999999999999;
	Иначе 
		ЗначениеВозврата = ПроверяемоеЗначение;
	КонецЕсли;
	
	Возврат ЗначениеВозврата;
	
КонецФункции

&НаКлиенте
Процедура ПослеВводаЗначения(Значение, Параметры) Экспорт
	
	Если НЕ Значение = Неопределено Тогда         	
		ПроверятьЦифрыВСтроке = Ложь;
		Если Параметры.Свойство("ПроверятьЦифрыВСтроке" , ПроверятьЦифрыВСтроке) И ПроверятьЦифрыВСтроке Тогда
			Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Значение) Тогда				
				ТекстСообщения = НСтр("ru = 'Значение содержит нецифровые символы, значение будет очищено'");							  
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);				
				Значение = "";
			КонецЕсли;         		
		КонецЕсли;
		
		Параметры.Область.Значение = Значение;	
		
		Если Параметры.Свойство("ПередаватьИтоги") Тогда			
			ПередатьЗначениеВМногострочнуюСтруктуру(Параметры.ИмяСтраницы, Параметры.Область.Имя, Значение, Параметры.Расчет, Параметры.ПередаватьИтоги);       
		Иначе
			ПередатьЗначениеВМногострочнуюСтруктуру(Параметры.ИмяСтраницы, Параметры.Область.Имя, Значение, Параметры.Расчет);       
		КонецЕсли;			
		
	КонецЕсли;
	           	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораИзСписка(Значение, Параметры) Экспорт
	
	Если НЕ Значение = Неопределено Тогда         	
		Параметры.Область.Значение = Значение.Значение;	
		ПередатьЗначениеВМногострочнуюСтруктуру(Параметры.ИмяСтраницы, Параметры.Область.Имя, Значение.Значение, Параметры.Расчет);		
	КонецЕсли;
	           	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Ссылка, ЗначениеРеквизита)
											
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ЗначениеРеквизита);										
											
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначенияРеквизитов(Ссылка, ЗначенияРеквизитов)
											
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ЗначенияРеквизитов);										
											
КонецФункции

&НаКлиенте
Процедура ФормаОбработкаВыбораМногострочныхФорм(ВыбранноеЗначение, ИсточникВыбора, ИмяГруппы = "ЛистA")
	
	СсылкаРасшифровки = ВыбранноеЗначение;
	
	ОбластьРасшифровки = ЭтаФорма.ТекущийЭлемент.ТекущаяОбласть;	
	НомерСтроки = Сред(ОбластьРасшифровки.Имя, Найти(ОбластьРасшифровки.Имя, "__") + 2);
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда                                                 
		СтандартнаяОбработка = Ложь; 
		ЗначениеРекизитов = ПолучитьЗначенияРеквизитов(СсылкаРасшифровки, "НаименованиеПолное,Наименование");
		Значение = ?(ЗначениеЗаполнено(ЗначениеРекизитов.НаименованиеПолное),ЗначениеРекизитов.НаименованиеПолное, ЗначениеРекизитов.Наименование);	
		ОбластьРасшифровки.Значение  = Значение;
		ОбластьРасшифровки.Расшифровка = СсылкаРасшифровки;
		
		ПередатьЗначениеВМногострочнуюСтруктуру(ИмяГруппы, ОбластьРасшифровки.Имя, Значение);
 	
	ИначеЕсли ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ФормаВыбораИзКлассификатора") Тогда
		
		Если ВРег(ИсточникВыбора.ИмяСекции) = ВРег("Классификатор") Тогда 			
			Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
				ОбластьРасшифровки.Значение = ВыбранноеЗначение;	
			Иначе
				ОбластьРасшифровки.Значение = ВыбранноеЗначение.КодСтроки;
			КонецЕсли;
				 							
			ПередатьЗначениеВМногострочнуюСтруктуру(ИмяГруппы, ОбластьРасшифровки.Имя, ОбластьРасшифровки.Значение);
			
		КонецЕсли;                                                            			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОбработкаВыбораОбычнойФормы(ВыбранноеЗначение, ИсточникВыбора, ИмяГруппы = "Страница3")
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ФормаВыбораИзКлассификатора") Тогда
		
		Если ВРег(ИсточникВыбора.ИмяСекции) = ВРег("Классификатор") Тогда 			
			
			ОбластьРасшифровки = ЭтаФорма.ТекущийЭлемент.ТекущаяОбласть;
			
			Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
				ОбластьРасшифровки.Значение = ВыбранноеЗначение;	
			Иначе
				ОбластьРасшифровки.Значение = ВыбранноеЗначение.КодСтроки;
			КонецЕсли;
				 							
			ПередатьЗначениеВСтруктуруНаСервере(ОбластьРасшифровки.Имя, ОбластьРасшифровки.Значение);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры   

&НаСервере 
Процедура ПередатьЗначениеВМногострочнуюСтруктуру(ИмяСтраницы, ИмяЯчейки, Значение, Расчет = Ложь, ПередаватьИтоги = Ложь)
	
	РегламентированнаяОтчетность.ПередатьЗначениеВМногострочнуюСтруктуру(ЭтаФорма, ИмяСтраницы, ИмяЯчейки, Значение, Расчет);				
	
	Если ПередаватьИтоги Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, КодФормы);
	КонецЕсли;
		
КонецПроцедуры


///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.00

&НаСервере
Процедура Форма400ПолеТабличногоДокументаСтраница1ВыборНаСервере(Ячейка, Значение,ПризнакРасчета = Ложь)
	
	Если (Найти(Ячейка, "Первоначальная") > 0)
	 ИЛИ (Найти(Ячейка, "Очередная") > 0)
	 ИЛИ (Найти(Ячейка, "Дополнительная") > 0)
	 ИЛИ (Найти(Ячейка, "ПоУведомлению") > 0)
	 ИЛИ (Найти(Ячейка, "Ликвидационная") > 0) Тогда
	    ЗаполнитьВидРасчета(КодФормы, Ячейка);
	КонецЕсли;	
	
	Если (Найти(Ячейка, "ДовУправляющий") > 0) 
	 ИЛИ (Найти(Ячейка, "Расчеты") > 0) Тогда
		Если Значение = "Х" Тогда
			Значение = "";
		Иначе
			Значение = "Х";
		КонецЕсли;		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, КодФормы, Ячейка, Значение, Истина);		
	КонецЕсли;   
	
КонецПроцедуры

&НаСервере
// Выполняет расчет вычисляемых показателей формы
// Параметр Изменено определяет откуда была вызвана данная процедура
// 
// При Изменено = Истина вызывается при изменении ПТД,
// в остальных случаях параметр = Ложь.
// Основное назначение - манипуляция со значениями полей, которые которые подлежит не суммовому расчету, 
// а расчету суммы с добавлением входящих в него значений
//
Процедура Форма400РасчетНаСервере(ИмяЯчейки, ЗначениеЯчейки, ТекИмяФормы)

	Если ЗначениеЗаполнено(ИмяЯчейки) Тогда		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма,ТекИмяФормы,ИмяЯчейки ,ЗначениеЯчейки);					
	КонецЕсли;
	
	Если ИмяЯчейки = "НомерУведомления" ИЛИ ИмяЯчейки = "ДатаУведомления" ИЛИ ИмяЯчейки = "КодНалоговогоОргана" Тогда
		Возврат;
	КонецЕсли;

	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы);
	
	//Рассчитаем ячейку 400.00.009
	//s_400_00_009 = сумма с s_400_00_001 по s_400_00_008
	ИтогЗначение = 0;
	Для Н = 1 По 8 Цикл
		ИмяГрафы = "s_400_00_00" + Н;
		ИтогЗначение = ИтогЗначение + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, ИмяГрафы);
	КонецЦикла;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма,ТекИмяФормы,"s_400_00_009", ИтогЗначение, Истина);
			                            	
	//Рассчитаем ячейку 400.00.011
	// s_400_00_011 = s_400_00_009 - s_400_00_010
	s_400_00_011 = ИтогЗначение
	             - РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,"s_400_00_010");
				 
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма,ТекИмяФормы,"s_400_00_011", s_400_00_011, Истина);
			
	//s_400_00_014
	//Рассчитаем ячейку 400.00.014
	//s_400_00_014 = сумма с s_400_00_014_1 по s_400_00_014_13
	ИтогЗначение = 0;
	Для Н = 1 По 14 Цикл
		ИмяГрафы = "s_400_00_014_" + Н;
		ИтогЗначение = ИтогЗначение + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, ИмяГрафы);
	КонецЦикла;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма,ТекИмяФормы,"s_400_00_014", ИтогЗначение, Истина);
	              				
КонецПроцедуры //Форма400Расчет()

&НаКлиенте
Процедура Форма400ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.00");		
	Форма400ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.01

&НаКлиенте
Процедура Форма400_01ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.01");		
	Форма400_01ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

&НаСервере
Процедура Форма400ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)               
	
	ТекИмяФормы = "Форма400";
	
	Если Перезаполнить Тогда	
		ТекстСообщения = НСтр("ru = 'Расчет основной формы 400.00'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;	

	Форма400_01ЗаполнитьАвтоНаСервере();
	Форма400_02ЗаполнитьАвтоНаСервере();
	Форма400_03ЗаполнитьАвтоНаСервере();
	Форма400_04ЗаполнитьАвтоНаСервере();
	Форма400_05ЗаполнитьАвтоНаСервере();  
	Форма400_06ЗаполнитьАвтоНаСервере();
	Форма400_07ЗаполнитьАвтоНаСервере();
	Форма400_08ЗаполнитьАвтоНаСервере();
	
	ТекущаяСтрока = СписокФормДерева.ПолучитьЭлементы()[0];
	Для Каждого Форма Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
		ИмяОбласти = "Приложение" + Прав(Форма.КодФормы,2);
		Если Форма400ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда
			СтрокиФорм = мСписокФормБезИерархии.ПолучитьЭлементы();		
			Для Каждого Строка Из СтрокиФорм Цикл
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекИмяФормы, ИмяОбласти, "Х", Ложь);				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекИмяФормы, ИмяОбласти, "", Ложь);				
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// передаем в качестве признака перезаполнения Истина, т.к. это главная форма
	РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы, Истина);                          	
	
	Модифицированность = Истина;
	
КонецПроцедуры // Форма400ЗаполнитьАвто()
    
//////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.01

&НаСервере
Функция Форма400_01РассчитатьДанныеФормы(ВыдаватьСообщения = Ложь) 
	 
  	Запрос =  Новый Запрос;
     
    Запрос.УстановитьПараметр("НачПериода", 	  СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
    Запрос.УстановитьПараметр("КонПериода", 	  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
    Запрос.УстановитьПараметр("Организация", 	  Налогоплательщик);
	
	СписокВидовПродукции = Новый СписокЗначений;
	СписокВидовПродукции.Добавить(Перечисления.ВидыПодакцизныхТМЗ.Спирт);
	СписокВидовПродукции.Добавить(Перечисления.ВидыПодакцизныхТМЗ.Виноматериал);
    Запрос.УстановитьПараметр("СпиртИВиноматериал", СписокВидовПродукции);
	
	Запрос.УстановитьПараметр("КодСтроки", 		  "400.01%");
	СписокКодовСтрок = Новый СписокЗначений;
	Для КодСтроки = 2 По 13 Цикл
		СписокКодовСтрок.Добавить("400.01.0" + Формат(КодСтроки, "ЧЦ=2; ЧВН="));
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СписокКодовСтрок", СписокКодовСтрок);
                   
    ТекстЗапроса = "ВЫБРАТЬ
                   |	ОсновнаяТаблица.КодСтроки,
                   |	ЕСТЬNULL(ОсновнаяТаблица.Количество, 0) КАК Количество,
                   |	ЕСТЬNULL(ОсновнаяТаблица.СуммаАкциза, 0) КАК СуммаАкциза,
                   |	ЕСТЬNULL(ОсновнаяТаблица.СтавкаАкциза.Ставка, 0) КАК СтавкаАкциза,
                   |	ВЫБОР
                   |		КОГДА ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрок)
                   |			ТОГДА ИСТИНА
                   |		ИНАЧЕ ЛОЖЬ
                   |	КОНЕЦ КАК Выводить,
                   |	ОсновнаяТаблица.ТМЗВидПодакцизногоТМЗ КАК ТМЗВидПодакцизногоТМЗ
                   |ИЗ
                   |	(ВЫБРАТЬ
                   |		ИтоговаяТаблица.КодСтроки КАК КодСтроки,
                   |		СУММА(ИтоговаяТаблица.Количество) КАК Количество,
                   |		СУММА(ИтоговаяТаблица.СуммаАкциза) КАК СуммаАкциза,
                   |		ИтоговаяТаблица.ТМЗВидПодакцизногоТМЗ КАК ТМЗВидПодакцизногоТМЗ,
                   |		ИтоговаяТаблица.СтавкаАкциза КАК СтавкаАкциза
                   |	ИЗ
                   |		(ВЫБРАТЬ
                   |			АкцизОбороты.ВидОперации КАК ВидОперации,
                   |			АкцизОбороты.КоличествоОборот КАК Количество,
                   |			АкцизОбороты.СуммаАкцизаОборот КАК СуммаАкциза,
                   |			ДанныеПоКодамСтрок.КодСтроки КАК КодСтроки,
                   |			АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ КАК ТМЗВидПодакцизногоТМЗ,
                   |			АкцизОбороты.СтавкаАкциза КАК СтавкаАкциза
                   |		ИЗ
                   |			РегистрНакопления.Акциз.Обороты(
                   |					&НачПериода,
                   |					&КонПериода,
                   |					,
                   |					Организация = &организация
                   |						И ТМЗ.ВидПодакцизногоТМЗ В (&СпиртИВиноматериал)) КАК АкцизОбороты
                   |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидТМЗ КАК ВидТМЗ,
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидОперации КАК ВидОперации,
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки КАК КодСтроки
                   |				ИЗ
                   |					РегистрСведений.КодыСтрокДекларацииПоАкцизу.СрезПоследних(
                   |							&КонПериода,
                   |							ВидТМЗ В (&СпиртИВиноматериал)
                   |								И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоАкцизуСрезПоследних
                   |				ГДЕ
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки ПОДОБНО &КодСтроки) КАК ДанныеПоКодамСтрок
                   |				ПО АкцизОбороты.ВидОперации = ДанныеПоКодамСтрок.ВидОперации
                   |					И АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ = ДанныеПоКодамСтрок.ВидТМЗ) КАК ИтоговаяТаблица
                   |	
                   |	СГРУППИРОВАТЬ ПО
                   |		ИтоговаяТаблица.КодСтроки,
                   |		ИтоговаяТаблица.ТМЗВидПодакцизногоТМЗ,
                   |		ИтоговаяТаблица.СтавкаАкциза) КАК ОсновнаяТаблица
                   |ИТОГИ
                   |	СУММА(Количество),
                   |	СУММА(СуммаАкциза)
                   |ПО
                   |	ТМЗВидПодакцизногоТМЗ";
 

    Запрос.Текст = ТекстЗапроса;
     
    Результат = Запрос.Выполнить();
    Если Результат.Пустой() и ВыдаватьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Данные для заполнения формы 400.01 за отчетный период отсутствуют...'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
    КонецЕсли;	
                 
    Возврат Результат;		 
	
КонецФункции // Форма400_01РассчитатьДанныеФормы()
 
&НаСервере
Процедура Форма400_01ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)
	
	ТекИмяФормы = "Форма400_01";
			
	ТекущаяСтраница = 1;
		
	СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы",ТекИмяФормы));
	
	Если СтрокаФормы <> Неопределено Тогда
		СтрокаФормы.ВсегоСтраниц = 1;
	КонецЕсли;  
	
	Если Не Перезаполнить Тогда  
		Текст = НСтр("ru = 'Заполнение формы 400.01'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли; 
	
	РезультатЗапроса = Форма400_01РассчитатьДанныеФормы(Истина);	
	             	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		НомерСтроки = 1;  		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(ЭтаФорма, ТекИмяФормы);			
		ВыборкаПоВидамТМЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоВидамТМЗ.Следующий() Цикл
			Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл							
				ИмяГруппы = ЭлементСтруктуры.Ключ;
				ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
				ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;                    				
				ОбластьФ400_01_015_C = ОбщиеЭлементыГруппы.Найти("Ф400_01_015_C", "ИмяОбласти"); 
				
				Если НомерСтроки = 1 Тогда
					ТаблицаСтрокГруппы.Очистить();  				
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;
            				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				
				Если ИмяГруппы = "ЛистA" Тогда
					
					ИтоговоеКоличество = 0;
					ИтоговаяСуммаАкциза = 0;
					
					Элемент.Ф400_01_001_A = СокрЛП(ВыборкаПоВидамТМЗ.ТМЗВидПодакцизногоТМЗ);
									
					ВыборкаПоВидамОпераций = ВыборкаПоВидамТМЗ.Выбрать();
					Пока ВыборкаПоВидамОпераций.Следующий() Цикл
						КодСтр = ?(ВыборкаПоВидамОпераций.КодСтроки = NULL , "", ВыборкаПоВидамОпераций.КодСтроки);
						Если ВыборкаПоВидамОпераций.Выводить Тогда
							Для КодСтроки = 2 По 13 Цикл
								ИмяГрафы = "400.01.0" +  Формат(КодСтроки, "ЧЦ=2; ЧВН=");
								//Помещаем данные в форму
								Если КодСтр = ИмяГрафы Тогда
									Элемент["Ф400_01_0" + Формат(КодСтроки, "ЧЦ=2; ЧВН=")+"_A"] = Окр(ВыборкаПоВидамОпераций.Количество);
									Элемент["Ф400_01_0" + Формат(КодСтроки, "ЧЦ=2; ЧВН=")+"_B"] = ВыборкаПоВидамОпераций.СтавкаАкциза;
									Элемент["Ф400_01_0" + Формат(КодСтроки, "ЧЦ=2; ЧВН=")+"_C"] = Окр(ВыборкаПоВидамОпераций.СуммаАкциза);
									
									ИтоговоеКоличество = ИтоговоеКоличество + Окр(ВыборкаПоВидамОпераций.Количество);
									ИтоговаяСуммаАкциза = ИтоговаяСуммаАкциза + Окр(ВыборкаПоВидамОпераций.СуммаАкциза);
								КонецЕсли;
							КонецЦикла;						
						Иначе
							ТекстСообщения = НСтр("ru = 'Данные по коду строки %1 не отражены в форме'");
							  
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодСтр));						
							
						КонецЕсли;
					КонецЦикла;
					       					
					Элемент.Ф400_01_015_C = Окр(ИтоговаяСуммаАкциза);					
				КонецЕсли;  
				
			КонецЦикла;			 
			
		КонецЦикла;	 
		      		
		//заполняем данные для передачи итогов в "Шапку и подвал"
		Если  Не ОбластьФ400_01_015_C = Неопределено Тогда
			ОбластьФ400_01_015_C.Значение = ТаблицаСтрокГруппы.Итог("Ф400_01_015_C");			
		КонецЕсли; 

		РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы,СтруктураФормы); 	 
		РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма,ТекИмяФормы);			
		РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы,Перезаполнить);   	
		
		Если Перезаполнить Тогда
			РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
		КонецЕсли;
		
		РегламентированнаяОтчетность.ПоказатьСтраницыМногострочнойФормы(ЭтаФорма);
		
	КонецЕсли;	
	    	 
КонецПроцедуры // Форма400_01ЗаполнитьАвто()

&НаСервере
Процедура Форма400_01РасчетНаСервере(Инд,Колонка,ТекИмяФормы)
	
	Перем СтруктураГруппы;
		
	Индекс = Инд-1;
	
	мМногострочнаяСтруктура = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(ЭтаФорма,ТекИмяФормы);
	//рассчитаем вычисляемые ячейки   	
	мМногострочнаяСтруктура.Свойство("ЛистA", СтруктураГруппы);
	ТаблицаСтрокГруппы = СтруктураГруппы.Строки;
	ОбщиеЭлементыГруппы = СтруктураГруппы.ШапкаИПодвал;
	ОбластьФ400_01_015_C = ОбщиеЭлементыГруппы.Найти("Ф400_01_015_C", "ИмяОбласти"); 

	// Рассчитаем сумму в зависимости от ставки и  базы
	Попытка
		ИмяГрафы 	= Лев(Колонка,11); // получам "ф400_01_002" например
		База  		= ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы + "_A"]; 
		Ставка  	= ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы + "_B"]; 
		
		СуммаАкциза = Окр(База * Ставка, 2);
		ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы + "_C"] = СуммаАкциза;
		Форма400_01ПолеТабличногоДокументаЛистA.Области[ИмяГрафы + "_C__"+ Строка(Инд)].Значение = СуммаАкциза;
	Исключение		
	КонецПопытки;		
	
	//рассчитаем итоговую ячейку 400.01.015
	// сумма c 400.01.002С по 400.01.013С - 400.01.014)
	ИтогЗначение =  0;
	Для Н = 2 По 13 Цикл
		ИмяГрафы = "Ф400_01_0" + Формат(Н, "ЧЦ=2; ЧВН=") + "_C";
		ИтогЗначение = ИтогЗначение + ?(ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы] = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы]);
	КонецЦикла;
	ИтогЗначение = ИтогЗначение - ?(ТаблицаСтрокГруппы.Получить(Индекс)["Ф400_01_014_C"] = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс)["Ф400_01_014_C"]);
	
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_01_015_C = ИтогЗначение;	
	Форма400_01ПолеТабличногоДокументаЛистA.Области["Ф400_01_015_C__"+ Строка(Инд)].Значение = ИтогЗначение;
	
	//заполняем данные для передачи итогов в "Шапку и подвал"
	Если  Не ОбластьФ400_01_015_C = Неопределено Тогда
		ОбластьФ400_01_015_C.Значение = ТаблицаСтрокГруппы.Итог("Ф400_01_015_C");			
	КонецЕсли; 
	РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы,мМногострочнаяСтруктура); 	 	
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	
	Модифицированность = Истина;	
	       	 	
КонецПроцедуры // Форма400_01Расчет()

//////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.02

&НаКлиенте
Процедура Форма400_02ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.02");		
	Форма400_02ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

&НаСервере
Функция Форма400_02РассчитатьДанныеФормы(ВыдаватьСообщения = Ложь) 
	 
  	Запрос =  Новый Запрос;
     
    Запрос.УстановитьПараметр("НачПериода", 	  СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
    Запрос.УстановитьПараметр("КонПериода", 	  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
    Запрос.УстановитьПараметр("Организация", 	  Налогоплательщик);
    Запрос.УстановитьПараметр("Алкоголь", 		  Перечисления.ВидыПодакцизныхТМЗ.АлкогольнаяПродукция);
    Запрос.УстановитьПараметр("КодСтроки", 		  "400.02%");
	СписокКодовСтрок = Новый СписокЗначений;
	СписокКодовСтрок.Добавить("400.02.002");
	СписокКодовСтрок.Добавить("400.02.003");
	СписокКодовСтрок.Добавить("400.02.004");
	СписокКодовСтрок.Добавить("400.02.005");
	СписокКодовСтрок.Добавить("400.02.006");
	СписокКодовСтрок.Добавить("400.02.007");
	СписокКодовСтрок.Добавить("400.02.008");
	СписокКодовСтрок.Добавить("400.02.009");
	Запрос.УстановитьПараметр("СписокКодовСтрок", СписокКодовСтрок);
                   
    ТекстЗапроса = "ВЫБРАТЬ
                   |	ОсновнаяТаблица.КодСтроки,
                   |	ОсновнаяТаблица.Количество,
                   |	ОсновнаяТаблица.СуммаАкциза,
                   |	ВЫБОР
                   |		КОГДА ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрок)
                   |			ТОГДА ИСТИНА
                   |		ИНАЧЕ ЛОЖЬ
                   |	КОНЕЦ КАК Выводить
                   |ИЗ
                   |	(ВЫБРАТЬ
                   |		ИтоговаяТаблица.КодСтроки КАК КодСтроки,
                   |		СУММА(ИтоговаяТаблица.Количество) КАК Количество,
                   |		СУММА(ИтоговаяТаблица.СуммаАкциза) КАК СуммаАкциза
                   |	ИЗ
                   |		(ВЫБРАТЬ
                   |			АкцизОбороты.ВидОперации КАК ВидОперации,
                   |			АкцизОбороты.КоличествоОборот КАК Количество,
                   |			АкцизОбороты.СуммаАкцизаОборот КАК СуммаАкциза,
                   |			ДанныеПоКодамСтрок.КодСтроки КАК КодСтроки
                   |		ИЗ
                   |			РегистрНакопления.Акциз.Обороты(
                   |				&НачПериода,
                   |				&КонПериода,
                   |				,
                   |				Организация = &организация
                   |				    И ТМЗ.ВидПодакцизногоТМЗ = &Алкоголь) КАК АкцизОбороты
                   |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидТМЗ КАК ВидТМЗ,
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидОперации КАК ВидОперации,
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки КАК КодСтроки
                   |				ИЗ
                   |					РегистрСведений.КодыСтрокДекларацииПоАкцизу.СрезПоследних(
                   |						&КонПериода,
                   |						ВидТМЗ = &Алкоголь
                   |						    И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоАкцизуСрезПоследних
                   |				ГДЕ
                   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки ПОДОБНО &КодСтроки) КАК ДанныеПоКодамСтрок
                   |				ПО АкцизОбороты.ВидОперации = ДанныеПоКодамСтрок.ВидОперации
                   |					И АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ = ДанныеПоКодамСтрок.ВидТМЗ) КАК ИтоговаяТаблица
                   |	
                   |	СГРУППИРОВАТЬ ПО
                   |		ИтоговаяТаблица.КодСтроки) КАК ОсновнаяТаблица";
 

    Запрос.Текст = ТекстЗапроса;
     
    Результат = Запрос.Выполнить();
	Если Результат.Пустой() и ВыдаватьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Данные для заполнения формы 400.02 за отчетный период отсутствуют...'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);   	
    КонецЕсли;	
    
    ТаблицаРезультата = Результат.Выгрузить();
    
    Возврат ТаблицаРезультата;		 
	
КонецФункции // Форма400_02РассчитатьДанныеФормы()
 
&НаСервере
Процедура Форма400_02ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)
	
	ТекИмяФормы = "Форма400_02";
			
	ТекущаяСтраница = 1;
	ТекущаяСтраница = 1;
		
	СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы",ТекИмяФормы));
	
	Если СтрокаФормы <> Неопределено Тогда
		СтрокаФормы.ВсегоСтраниц = 1;
	КонецЕсли;  
	
	Если Не Перезаполнить Тогда  
		Текст = НСтр("ru = 'Заполнение формы 400.02'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли; 

	ТаблицаОтчета = Форма400_02РассчитатьДанныеФормы(Истина);
	
	Если ТаблицаОтчета.Количество() <> 0 Тогда
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(ЭтаФорма, ТекИмяФормы);
		                             	
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;                    				
			ОбластьФ400_02_013 = ОбщиеЭлементыГруппы.Найти("Ф400_02_013", "ИмяОбласти"); 
			ТаблицаСтрокГруппы.Очистить();
			
			Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				 
			Если ИмяГруппы = "ЛистA" Тогда
			
				ИтоговоеКоличество = 0;
				ИтоговаяСуммаАкциза = 0;
			
				Элемент.Ф400_02_001_A = НСтр("ru = 'Алкогольная продукция'");
			
				Для Каждого СтрокаОтчета Из ТаблицаОтчета Цикл
			        КодСтр = ?(СтрокаОтчета.КодСтроки = NULL , "", СтрокаОтчета.КодСтроки);
					Если СтрокаОтчета.Выводить Тогда
				       	Для Н = 2 По 9 Цикл
							ИмяГрафы = "400.02.00" + Н;
							//Помещаем данные в форму
							Если КодСтр = ИмяГрафы Тогда
								Элемент["Ф400_02_00" + Н] = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),2);
								ИтоговоеКоличество = ИтоговоеКоличество + Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),2);
								ИтоговаяСуммаАкциза = ИтоговаяСуммаАкциза + ?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза);
							КонецЕсли;
						КонецЦикла;						
					Иначе
						ТекстСообщения = НСтр("ru = 'Данные по коду строки %1 не отражены в форме'");							  
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодСтр));						
					КонецЕсли;
				КонецЦикла;
			
				Элемент.Ф400_02_011 = ИтоговоеКоличество;
				Элемент.Ф400_02_013 = Окр(ИтоговаяСуммаАкциза);
				Если Не ИтоговоеКоличество = 0 Тогда
					Ставка = Окр(Окр(ИтоговаяСуммаАкциза)/ИтоговоеКоличество, 2);
					Если Ставка >=1000 ИЛИ Ставка <=-1000 Тогда
						ТекстСообщения = НСтр("ru = 'Рассчитанная ставка акциза превышает установленный предел! Рассчитанная ставка равна %1 '");							  
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Ставка));												
						Ставка = 999.99;
					КонецЕсли;
					Элемент.Ф400_02_012 = Ставка;
				КонецЕсли;		
				
			КонецЕсли; 			            			
		 
		КонецЦикла;	 
		
		//заполняем данные для передачи итогов в "Шапку и подвал"
		Если  Не ОбластьФ400_02_013 = Неопределено Тогда
			ОбластьФ400_02_013.Значение = ТаблицаСтрокГруппы.Итог("Ф400_02_013");			
		КонецЕсли; 

		РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы,СтруктураФормы); 	 		
		РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма,ТекИмяФормы);						
		РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы,Перезаполнить);           		
		Если  Перезаполнить Тогда
			РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
		КонецЕсли;  		
		
		РегламентированнаяОтчетность.ПоказатьСтраницыМногострочнойФормы(ЭтаФорма); 				
				
	КонецЕсли;	
	    	 
КонецПроцедуры // Форма400_02ЗаполнитьАвто()
 
&НаСервере
Процедура Форма400_02РасчетНаСервере(Инд,Колонка, ТекИмяФормы)
	
	Перем СтруктураГруппы;
	
	Индекс = Инд-1;
	
	мМногострочнаяСтруктура = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(ЭтаФорма,ТекИмяФормы);
	//рассчитаем вычисляемые ячейки
	//рассчитаем ячейку 400.02.010
	мМногострочнаяСтруктура.Свойство("ЛистA", СтруктураГруппы);
	ТаблицаСтрокГруппы  = СтруктураГруппы.Строки;
	ОбщиеЭлементыГруппы = СтруктураГруппы.ШапкаИПодвал; 
	ОбластьФ400_02_013 = ОбщиеЭлементыГруппы.Найти("Ф400_02_013", "ИмяОбласти");
		
	A1 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_A1 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_A1);
	B1 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_B1 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_B1);
	
	A2 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_A2 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_A2);
	B2 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_B2 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_B2);
	
	A3 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_A3 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_A3);
	B3 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_B3 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_B3);
	
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_C1 = Окр(A1 * B1,2);
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_C2 = Окр(A2 * B2,2);
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010_C3 = Окр(A3 * B3,2);
	
	Форма400_02ПолеТабличногоДокументаЛистA.Области["Ф400_02_010_C1__"+ Строка(Инд)].Значение = Окр(A1 * B1,2);
	Форма400_02ПолеТабличногоДокументаЛистA.Области["Ф400_02_010_C2__"+ Строка(Инд)].Значение = Окр(A2 * B2,2);
	Форма400_02ПолеТабличногоДокументаЛистA.Области["Ф400_02_010_C3__"+ Строка(Инд)].Значение = Окр(A3 * B3,2);
	
	ИтогЗначение =  Окр(A1 * B1,2) + Окр(A2 * B2,2) + Окр(A3 * B3,2);
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_010 = ИтогЗначение;
	Форма400_02ПолеТабличногоДокументаЛистA.Области["Ф400_02_010__"+ Строка(Инд)].Значение = ИтогЗначение;
	
	//рассчитаем ячейку 400.02.011
	ИтогЗначение =  0;
	Для Н = 2 По 10 Цикл
		ИмяГрафы = "Ф400_02_0" + Формат(Н, "ЧЦ=2; ЧВН=");
		ИтогЗначение = ИтогЗначение + ?(ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы] = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы]);
	КонецЦикла;
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_011 = ИтогЗначение;
	Форма400_02ПолеТабличногоДокументаЛистA.Области["Ф400_02_011__"+ Строка(Инд)].Значение = ИтогЗначение;
	
	//рассчитаем ячейку 400.02.013 и подсчитаем итог для данной строки
	Знач011 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_011 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_011);
	Знач012 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_012 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_012);
	Знач013 = Окр(Знач011 * Знач012);
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_02_013 = Знач013;
	Форма400_02ПолеТабличногоДокументаЛистA.Области["Ф400_02_013__"+ Строка(Инд)].Значение = Знач013;
	
	//заполняем данные для передачи итогов в "Шапку и подвал"
	Если  Не ОбластьФ400_02_013 = Неопределено Тогда
		ОбластьФ400_02_013.Значение = ТаблицаСтрокГруппы.Итог("Ф400_02_013");			
	КонецЕсли; 
		
	РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы,мМногострочнаяСтруктура); 	 
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	
	Модифицированность = Истина;	
	       	 	
КонецПроцедуры // Форма400_02Расчет()

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.03

&НаКлиенте
Процедура Форма400_03ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.03");		
	Форма400_03ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

&НаСервере
Функция Форма400_03РассчитатьДанныеФормы(ВыдаватьСообщения = Ложь) 
	 
	Запрос =  Новый Запрос;
	 
	Запрос.УстановитьПараметр("НачПериода",  СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода",  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Налогоплательщик);
	
	СписокВидовТабак = Новый СписокЗначений;
	СписокВидовТабак.Добавить(Перечисления.ВидыПодакцизныхТМЗ.СигаретыСФильтром);
	СписокВидовТабак.Добавить(Перечисления.ВидыПодакцизныхТМЗ.СигаретыБезФильтра);
	СписокВидовТабак.Добавить(Перечисления.ВидыПодакцизныхТМЗ.Табак);
	СписокВидовТабак.Добавить(Перечисления.ВидыПодакцизныхТМЗ.Сигары);
    СписокВидовТабак.Добавить(Перечисления.ВидыПодакцизныхТМЗ.Сигариллы);
	
	Запрос.УстановитьПараметр("СписокВидовТабак", СписокВидовТабак);	
	Запрос.УстановитьПараметр("КодСтроки",        "400.03%");
	
	СписокКодовСтрокСигареты = Новый СписокЗначений;
	СписокКодовСтрокСигареты.Добавить("400.03.002");
	СписокКодовСтрокСигареты.Добавить("400.03.008.A");
	СписокКодовСтрокСигареты.Добавить("400.03.008.B");
	СписокКодовСтрокСигареты.Добавить("400.03.003");
	СписокКодовСтрокСигареты.Добавить("400.03.004");
	СписокКодовСтрокСигареты.Добавить("400.03.005");
	СписокКодовСтрокСигареты.Добавить("400.03.006");
	СписокКодовСтрокСигареты.Добавить("400.03.007");
	СписокКодовСтрокСигареты.Добавить("400.03.008");
	СписокКодовСтрокСигареты.Добавить("400.03.009");
	СписокКодовСтрокСигареты.Добавить("400.03.010");
	Запрос.УстановитьПараметр("СписокКодовСтрокСигареты", СписокКодовСтрокСигареты);     	
				   
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ОсновнаяТаблица.КодСтроки,
	               |	ОсновнаяТаблица.Количество КАК Количество,
	               |	ОсновнаяТаблица.СуммаАкциза КАК СуммаАкциза,
	               |	ОсновнаяТаблица.ВидТМЗ КАК ВидТМЗ,
	               |	ВЫБОР
	               |		КОГДА ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрокСигареты)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Выводить
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ИтоговаяТаблица.КодСтроки КАК КодСтроки,
	               |		СУММА(ИтоговаяТаблица.Количество) КАК Количество,
	               |		СУММА(ИтоговаяТаблица.СуммаАкциза) КАК СуммаАкциза,
	               |		ИтоговаяТаблица.ВидТМЗ КАК ВидТМЗ
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			АкцизОбороты.ВидОперации КАК ВидОперации,
	               |			АкцизОбороты.КоличествоОборот КАК Количество,
	               |			АкцизОбороты.СуммаАкцизаОборот КАК СуммаАкциза,
	               |			ДанныеПоКодамСтрок.КодСтроки КАК КодСтроки,
	               |			ДанныеПоКодамСтрок.ВидТМЗ КАК ВидТМЗ
	               |		ИЗ
	               |			РегистрНакопления.Акциз.Обороты(
	               |					&НачПериода,
	               |					&КонПериода,
	               |					,
	               |					Организация = &организация
	               |						И ТМЗ.ВидПодакцизногоТМЗ В (&СписокВидовТабак)) КАК АкцизОбороты
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидТМЗ КАК ВидТМЗ,
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидОперации КАК ВидОперации,
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки КАК КодСтроки
	               |				ИЗ
	               |					РегистрСведений.КодыСтрокДекларацииПоАкцизу.СрезПоследних(
	               |							&КонПериода,
	               |							ВидТМЗ В (&СписокВидовТабак)
	               |								И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоАкцизуСрезПоследних
	               |				ГДЕ
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки ПОДОБНО &КодСтроки) КАК ДанныеПоКодамСтрок
	               |				ПО АкцизОбороты.ВидОперации = ДанныеПоКодамСтрок.ВидОперации
	               |					И АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ = ДанныеПоКодамСтрок.ВидТМЗ) КАК ИтоговаяТаблица
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ИтоговаяТаблица.КодСтроки,
	               |		ИтоговаяТаблица.ВидТМЗ) КАК ОсновнаяТаблица
	               |ИТОГИ
	               |	СУММА(Количество),
	               |	СУММА(СуммаАкциза)
	               |ПО
	               |	ВидТМЗ";    

	Запрос.Текст = ТекстЗапроса;
	 
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() и ВыдаватьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Данные для заполнения формы 400.03 за отчетный период отсутствуют...'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);   			
	КонецЕсли;	
	 	
	Возврат Результат;		 
	
КонецФункции // Форма400_03РассчитатьДанныеФормы()

&НаСервере
Процедура Форма400_03ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)
	
	ТекИмяФормы = "Форма400_03";    	
		
	ТекущаяСтраница = 1;
	
	СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы",ТекИмяФормы));
	
	Если СтрокаФормы <> Неопределено Тогда
		СтрокаФормы.ВсегоСтраниц = 1;
	КонецЕсли;  
	
	Если Не Перезаполнить Тогда  
		Текст = НСтр("ru = 'Заполнение формы 400.03'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли; 
	
	РезультатЗапроса = Форма400_03РассчитатьДанныеФормы(Истина);	
	ВыборкаПоВидамТМЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(ЭтаФорма, ТекИмяФормы);
	НомерСтроки = 1;
	
	СписокГрафФормы = Новый СписокЗначений();
	Для Н = 1 По 10 Цикл
		ИмяГрафы = "400.03.0" + Формат(Н, "ЧЦ=2; ЧВН=");
		СписокГрафФормы.Добавить(ИмяГрафы);
	КонецЦикла;			
	СписокГрафФормы.Добавить("400.03.008.A");
	СписокГрафФормы.Добавить("400.03.008.B");
	
	Пока ВыборкаПоВидамТМЗ.Следующий() Цикл
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			
			ИмяГруппы = ЭлементСтруктуры.Ключ;                    			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;                    				
			ОбластьФ400_03_014 = ОбщиеЭлементыГруппы.Найти("Ф400_03_014", "ИмяОбласти");
			
			Если НомерСтроки = 1 Тогда
				ТаблицаСтрокГруппы.Очистить();
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
			Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				 
			Если ИмяГруппы = "ЛистA" Тогда
			
				ИтоговоеКоличество = 0;
				ИтоговаяСуммаАкциза = 0;
				
				Элемент.Ф400_03_001_A = СокрЛП(ВыборкаПоВидамТМЗ.ВидТМЗ);
				ВыборкаПоВидамОпераций = ВыборкаПоВидамТМЗ.Выбрать();
				Пока ВыборкаПоВидамОпераций.Следующий() Цикл
					
					КодСтр = ?(ВыборкаПоВидамОпераций.КодСтроки = NULL , "", ВыборкаПоВидамОпераций.КодСтроки);					
					Если ВыборкаПоВидамОпераций.Выводить И СписокГрафФормы.НайтиПоЗначению(КодСтр)<> Неопределено Тогда   
						
						// Заполняем операции по их видам
						ИмяСтрокиФормы = "Ф" + СтрЗаменить(КодСтр, ".", "_");
						
						Элемент[ИмяСтрокиФормы] = Окр(?(ВыборкаПоВидамОпераций.Количество = NULL , 0, ВыборкаПоВидамОпераций.Количество));								
						// перемещение с линии производства не входит в итоговую сумму
						ИтоговоеКоличество = ИтоговоеКоличество + Окр(?(ВыборкаПоВидамОпераций.Количество = NULL , 0, ВыборкаПоВидамОпераций.Количество));
						ИтоговаяСуммаАкциза = ИтоговаяСуммаАкциза + ?(ВыборкаПоВидамОпераций.СуммаАкциза = NULL , 0, ВыборкаПоВидамОпераций.СуммаАкциза);
						
					Иначе
						ТекстСообщения = НСтр("ru = 'Данные по коду строки %1 не отражены в форме'");							  
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодСтр));	
					КонецЕсли;
				КонецЦикла;
				
				Элемент.Ф400_03_008 = ?(Элемент.Ф400_03_008_A = Неопределено, 0, Элемент.Ф400_03_008_A ) + ?(Элемент.Ф400_03_008_B = Неопределено, 0, Элемент.Ф400_03_008_B);
								
				Элемент.Ф400_03_012 = ПроверкаЗначенияДляВыгрузки(ИтоговоеКоличество, 12);
				
				Элемент.Ф400_03_014 = Окр(ИтоговаяСуммаАкциза);
				Если Не ИтоговоеКоличество = 0 Тогда
					Ставка = Окр(Окр(ИтоговаяСуммаАкциза)/ИтоговоеКоличество);
					Если Ставка >=10000 ИЛИ Ставка <=-10000 Тогда
						ТекстСообщения = НСтр("ru = 'Рассчитанная ставка акциза превышает установленный предел! Рассчитанная ставка равна %1 '");							  
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Ставка));												
						Ставка = 9999;
					КонецЕсли;
					Элемент.Ф400_03_013 = Ставка;
				КонецЕсли;
								
			КонецЕсли;
		 
		КонецЦикла;	 
				
	КонецЦикла; 
	
	
	//заполняем данные для передачи итогов в "Шапку и подвал"
	Если Не ОбластьФ400_03_014 = Неопределено Тогда
		ОбластьФ400_03_014.Значение = ТаблицаСтрокГруппы.Итог("Ф400_03_014");			
	КонецЕсли; 

	РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы,СтруктураФормы); 	 		
	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма,ТекИмяФормы);						
	РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы,Перезаполнить);
	Если Перезаполнить Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПоказатьСтраницыМногострочнойФормы(ЭтаФорма); 
		
КонецПроцедуры // Форма400_03ЗаполнитьАвто()

&НаСервере
Процедура Форма400_03РасчетНаСервере(Инд, Колонка, ТекИмяФормы)
	
	Перем СтруктураГруппы;
		
	Индекс = Инд-1;
	
	мМногострочнаяСтруктура = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(ЭтаФорма,ТекИмяФормы);
	//рассчитаем вычисляемые ячейки
	
	мМногострочнаяСтруктура.Свойство("ЛистA", СтруктураГруппы);
	ТаблицаСтрокГруппы  = СтруктураГруппы.Строки;
	ОбщиеЭлементыГруппы = СтруктураГруппы.ШапкаИПодвал; 	
	ОбластьФ400_03_014 = ОбщиеЭлементыГруппы.Найти("Ф400_03_014", "ИмяОбласти");
	
	//рассчитаем ячейку 400.03.008 
	Знач008_a 	= ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_008_a = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_008_a);
	Знач008_b	= ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_008_b = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_008_b);
	Знач008		= Знач008_a  + Знач008_b;
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_008 = Знач008;
	Форма400_03ПолеТабличногоДокументаЛистA.Области["Ф400_03_008__"+ Строка(Инд)].Значение = Знач008;
	
	//рассчитаем ячейку 400.03.011 
	Знач011_a 	= ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_011_a = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_011_a);
	Знач011_b	= ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_011_b = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_011_b);
	Знач011_c	= Знач011_a * Знач011_b;
	
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_011 = Знач011_c;
	Форма400_03ПолеТабличногоДокументаЛистA.Области["Ф400_03_011__"+ Строка(Инд)].Значение = Знач011_c;
	
	//рассчитаем ячейку 400.03.012
	ИтогЗначение =  0;
	Для Н = 2 По 11 Цикл
		ИмяГрафы = "Ф400_03_0" + Формат(Н,"ЧЦ=2; ЧВН=");
		ИтогЗначение = ИтогЗначение + ?(ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы] = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс)[ИмяГрафы]);				 
	КонецЦикла;
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_012 = ПроверкаЗначенияДляВыгрузки(ИтогЗначение, 12);
	Форма400_03ПолеТабличногоДокументаЛистA.Области["Ф400_03_012__"+ Строка(Инд)].Значение = ИтогЗначение;
			 
	//рассчитаем ячейку 400.04.014
	Знач012 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_012 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_012);
	Знач013 = ?(ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_013 = Неопределено, 0, ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_013);
	
	Знач014 = Окр(Знач012 * Знач013);
		
	ТаблицаСтрокГруппы.Получить(Индекс).Ф400_03_014 = Знач014;
	Форма400_03ПолеТабличногоДокументаЛистA.Области["Ф400_03_014__"+ Строка(Инд)].Значение = Знач014;
	
	//заполняем данные для передачи итогов в "Шапку и подвал"
	Если  Не ОбластьФ400_03_014 = Неопределено Тогда
		ОбластьФ400_03_014.Значение = ТаблицаСтрокГруппы.Итог("Ф400_03_014");
	КонецЕсли;	
	
	РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы,мМногострочнаяСтруктура); 	 	
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	
	Модифицированность = Истина;	
	       	 	
КонецПроцедуры // Форма400_03Расчет()

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.04

&НаКлиенте
Процедура Форма400_04ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.04");		
	Форма400_04ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

&НаСервере
Функция Форма400_04РассчитатьДанныеФормы(ВыдаватьСообщения = Ложь) 
	 
	Запрос =  Новый Запрос;
	 
	Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	Запрос.УстановитьПараметр("НефтьИГазКонденсат",		Перечисления.ВидыПодакцизныхТМЗ.НефтьИГазовыйКонденсат);
	Запрос.УстановитьПараметр("КодСтроки", 				"400.04%");
	
	СписокКодовСтрок = Новый СписокЗначений;
	СписокКодовСтрок.Добавить("400.04.001");
	СписокКодовСтрок.Добавить("400.04.002");
	СписокКодовСтрок.Добавить("400.04.002.A");
	СписокКодовСтрок.Добавить("400.04.002.B");
	СписокКодовСтрок.Добавить("400.04.003");
	СписокКодовСтрок.Добавить("400.04.004");
	СписокКодовСтрок.Добавить("400.04.005");
	СписокКодовСтрок.Добавить("400.04.006");
	СписокКодовСтрок.Добавить("400.04.007");
	СписокКодовСтрок.Добавить("400.04.008");
	СписокКодовСтрок.Добавить("400.04.009");
	СписокКодовСтрок.Добавить("400.04.010");
	Запрос.УстановитьПараметр("СписокКодовСтрок", 		СписокКодовСтрок);
				   
	ТекстЗапроса = "ВЫБРАТЬ
				   |	ОсновнаяТаблица.КодСтроки,
				   |	ОсновнаяТаблица.Количество,
				   |	ОсновнаяТаблица.СуммаАкциза,
				   |	ВЫБОР
				   |		КОГДА ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрок)
				   |			ТОГДА ИСТИНА
				   |		ИНАЧЕ ЛОЖЬ
				   |	КОНЕЦ КАК Выводить
				   |ИЗ
				   |	(ВЫБРАТЬ
				   |		ИтоговаяТаблица.КодСтроки КАК КодСтроки,
				   |		СУММА(ИтоговаяТаблица.Количество) КАК Количество,
				   |		СУММА(ИтоговаяТаблица.СуммаАкциза) КАК СуммаАкциза
				   |	ИЗ
				   |		(ВЫБРАТЬ
				   |			АкцизОбороты.ВидОперации КАК ВидОперации,
				   |			АкцизОбороты.КоличествоОборот КАК Количество,
				   |			АкцизОбороты.СуммаАкцизаОборот КАК СуммаАкциза,
				   |			ДанныеПоКодамСтрок.КодСтроки КАК КодСтроки
				   |		ИЗ
				   |			РегистрНакопления.Акциз.Обороты(
				   |				&НачПериода,
				   |				&КонПериода,
				   |				,
				   |				Организация = &организация
				   |				    И ТМЗ.ВидПодакцизногоТМЗ = &НефтьИГазКонденсат) КАК АкцизОбороты
				   |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидТМЗ КАК ВидТМЗ,
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидОперации КАК ВидОперации,
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки КАК КодСтроки
				   |				ИЗ
				   |					РегистрСведений.КодыСтрокДекларацииПоАкцизу.СрезПоследних(
				   |						&КонПериода,
				   |						ВидТМЗ = &НефтьИГазКонденсат
				   |						    И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоАкцизуСрезПоследних
				   |				ГДЕ
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки ПОДОБНО &КодСтроки) КАК ДанныеПоКодамСтрок
				   |				ПО АкцизОбороты.ВидОперации = ДанныеПоКодамСтрок.ВидОперации
				   |					И АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ = ДанныеПоКодамСтрок.ВидТМЗ) КАК ИтоговаяТаблица
				   |	
				   |	СГРУППИРОВАТЬ ПО
				   |		ИтоговаяТаблица.КодСтроки) КАК ОсновнаяТаблица
				   | ";
 

	Запрос.Текст = ТекстЗапроса;
	 
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() и ВыдаватьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Данные для заполнения формы 400.04 за отчетный период отсутствуют...'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);   			
	КонецЕсли;	
	
	ТаблицаРезультата = Результат.Выгрузить();
	
	Возврат ТаблицаРезультата;		 
	
КонецФункции // Форма400_04РассчитатьДанныеФормы()
    
&НаСервере
Процедура Форма400_04ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)                        
	
	ТекИмяФормы = "Форма400_04";
	
	СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы",ТекИмяФормы));
	
	Если СтрокаФормы <> Неопределено Тогда
		СтрокаФормы.ВсегоСтраниц = 1;
	КонецЕсли;  
	
	Если Не Перезаполнить Тогда  
		Текст = НСтр("ru = 'Заполнение формы 400.04'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли; 
	
	ТаблицаОтчета = Форма400_04РассчитатьДанныеФормы(Истина);
    Количество		= 0;
	Сумма	= 0;
	
	СписокГрафФормы = Новый СписокЗначений();
	Для Н = 1 По 10 Цикл
		ИмяГрафы = "400.04.0" + Формат(Н, "ЧЦ=2; ЧВН=");
		СписокГрафФормы.Добавить(ИмяГрафы);
	КонецЦикла;			
	СписокГрафФормы.Добавить("400.04.002.A");
	СписокГрафФормы.Добавить("400.04.002.B");
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтотОбъект, ТекИмяФормы);
	
	Для Каждого СтрокаОтчета Из ТаблицаОтчета Цикл
		КодСтр = ?(СтрокаОтчета.КодСтроки = NULL , "", СтрокаОтчета.КодСтроки); 		
		Если СтрокаОтчета.Выводить И СписокГрафФормы.НайтиПоЗначению(КодСтр)<> Неопределено Тогда  
					
			ИмяСтрокиФормы = "s_" + СтрЗаменить(КодСтр, ".", "_");
			ЗначениеГрафы = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество)); 						
			РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, ИмяСтрокиФормы, ЗначениеГрафы);		
			   	        					
			Количество 	= Количество + Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество));
			Сумма 		= Сумма + ?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза);						
		Иначе
			ТекстСообщения = НСтр("ru = 'Данные по коду строки %1 не отражены в форме'");							  
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодСтр));	
		КонецЕсли;
	КонецЦикла;
	
	// Заполняем итоги 
	ОКРСумма		= Окр(Сумма);
	
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_04_011", Количество);		
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_04_013", ОКРСумма);		
	
	Если Не Количество = 0 Тогда
		Ставка = Окр(Окр(ОКРСумма)/Количество);		
		РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_04_012", Ставка);					
	КонецЕсли;
	
	РегламентированнаяОтчетность.ОбновитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы, ТаблицаДанных);	
	РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы,Перезаполнить);	
	
	Если Перезаполнить Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	КонецЕсли;

	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтотОбъект, ТекИмяФормы);
		
КонецПроцедуры // Форма400_04ЗаполнитьАвто()

&НаСервере
Процедура Форма400_04РасчетНаСервере(Изменено = Ложь, Раздел = Неопределено, ТекИмяФормы)

	ТекИмяФормы = "Форма400_04";
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы);
	
	СуммаЭкспорта = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_04_002_A") +
					РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_04_002_B");
					
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_04_002", СуммаЭкспорта,Форма400_04ПолеТабличногоДокументаСтраница1);	
	
	Итого = 0;
	Для Н = 1 По 10 Цикл		
		Итого = Итого + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_04_0" + Формат(Н,"ЧЦ=2; ЧВН="));
	КонецЦикла;	
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_04_011", Итого, Форма400_04ПолеТабличногоДокументаСтраница1);	
    
	СтавкаАкциза = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_04_012");	
	ИтогоСуммаАкциза = Итого *СтавкаАкциза;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_04_013", ИтогоСуммаАкциза, Форма400_04ПолеТабличногоДокументаСтраница1);		
	
	РегламентированнаяОтчетность.ОбновитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы, ТаблицаДанных);
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	Модифицированность = Истина;
                               		
КонецПроцедуры   // Форма400_04Расчет()

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.05

&НаКлиенте
Процедура Форма400_05ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.05");		
	Форма400_05ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

&НаСервере
Функция Форма400_05РассчитатьДанныеФормы(ВыдаватьСообщения = Ложь) 
	
	Запрос =  Новый Запрос;
	 
	Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	Запрос.УстановитьПараметр("Бензин", 				Перечисления.ВидыПодакцизныхТМЗ.Бензин);
	Запрос.УстановитьПараметр("ДизТопливо", 			Перечисления.ВидыПодакцизныхТМЗ.ДизельноеТопливо);
	Запрос.УстановитьПараметр("КодСтроки", 				"400.05%");
	
	СписокКодовСтрокБензин = Новый СписокЗначений;
	СписокКодовСтрокБензин.Добавить("400.05.001.I");
	СписокКодовСтрокБензин.Добавить("400.05.001.II");
	СписокКодовСтрокБензин.Добавить("400.05.001.III");
	СписокКодовСтрокБензин.Добавить("400.05.001.IV");
	СписокКодовСтрокБензин.Добавить("400.05.001.V");
	СписокКодовСтрокБензин.Добавить("400.05.002.I");
	СписокКодовСтрокБензин.Добавить("400.05.002.II");
	СписокКодовСтрокБензин.Добавить("400.05.002.III");
	СписокКодовСтрокБензин.Добавить("400.05.002.IV");
	СписокКодовСтрокБензин.Добавить("400.05.002.V");
	СписокКодовСтрокБензин.Добавить("400.05.002.VI");
	СписокКодовСтрокБензин.Добавить("400.05.002.VII");
	Запрос.УстановитьПараметр("СписокКодовСтрокБензин", 	СписокКодовСтрокБензин);
	
	СписокКодовСтрокДизТопливо = Новый СписокЗначений;
	СписокКодовСтрокДизТопливо.Добавить("400.05.004.I");
	СписокКодовСтрокДизТопливо.Добавить("400.05.004.II");
	СписокКодовСтрокДизТопливо.Добавить("400.05.004.III");
	СписокКодовСтрокДизТопливо.Добавить("400.05.004.IV");
	СписокКодовСтрокДизТопливо.Добавить("400.05.004.V");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.I");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.II");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.III");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.IV");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.V");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.VI");
	СписокКодовСтрокДизТопливо.Добавить("400.05.005.VII");
	Запрос.УстановитьПараметр("СписокКодовСтрокДизТопливо", СписокКодовСтрокДизТопливо);
	
	Запрос.УстановитьПараметр("Акциз", Справочники.НалогиСборыОтчисления.Акциз);	

				   
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ОсновнаяТаблица.КодСтроки,
	               |	ОсновнаяТаблица.Количество,
	               |	ВЫБОР
	               |		КОГДА ОсновнаяТаблица.Количество = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ОсновнаяТаблица.СуммаАкциза / ОсновнаяТаблица.Количество >= 10000
	               |					ТОГДА 9999.999
	               |				КОГДА ОсновнаяТаблица.СуммаАкциза / ОсновнаяТаблица.Количество <= -10000
	               |					ТОГДА -9999.999
	               |				ИНАЧЕ ОсновнаяТаблица.СуммаАкциза / ОсновнаяТаблица.Количество
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Ставка,
	               |	ОсновнаяТаблица.СуммаАкциза,
	               |	ВЫБОР
	               |		КОГДА ОсновнаяТаблица.ВидТМЗ = &Бензин
	               |				И ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрокБензин)
	               |			ТОГДА ИСТИНА
	               |		КОГДА ОсновнаяТаблица.ВидТМЗ = &ДизТопливо
	               |				И ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрокДизТопливо)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Выводить,
	               |	ВЫБОР
	               |		КОГДА ОсновнаяТаблица.ВидТМЗ = &Бензин
	               |			ТОГДА ""БЕНЗИН""
	               |		КОГДА ОсновнаяТаблица.ВидТМЗ = &ДизТопливо
	               |			ТОГДА ""ДИЗТОПЛИВО""
	               |	КОНЕЦ КАК ВИД,
	               |	ОсновнаяТаблица.КодБК КАК КБК
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ИтоговаяТаблица.КодСтроки КАК КодСтроки,
	               |		СУММА(ИтоговаяТаблица.Количество) КАК Количество,
	               |		СУММА(ИтоговаяТаблица.СуммаАкциза) КАК СуммаАкциза,
	               |		ИтоговаяТаблица.ТМЗВидПодакцизногоТМЗ КАК ВидТМЗ,
	               |		ИтоговаяТаблица.КодБК КАК КодБК
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			АкцизОбороты.ВидОперации КАК ВидОперации,
	               |			АкцизОбороты.КоличествоОборот КАК Количество,
	               |			АкцизОбороты.СуммаАкцизаОборот КАК СуммаАкциза,
	               |			ДанныеПоКодамСтрок.КодСтроки КАК КодСтроки,
	               |			АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ КАК ТМЗВидПодакцизногоТМЗ,
	               |			НалогиСборыОтчисления.КодБК КАК КодБК
	               |		ИЗ
	               |			РегистрНакопления.Акциз.Обороты(
	               |					&НачПериода,
	               |					&КонПериода,
	               |					,
	               |					Организация = &организация
	               |						И (ТМЗ.ВидПодакцизногоТМЗ = &Бензин
	               |							ИЛИ ТМЗ.ВидПодакцизногоТМЗ = &ДизТопливо)) КАК АкцизОбороты
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидТМЗ КАК ВидТМЗ,
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидОперации КАК ВидОперации,
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки КАК КодСтроки
	               |				ИЗ
	               |					РегистрСведений.КодыСтрокДекларацииПоАкцизу.СрезПоследних(
	               |							&КонПериода,
	               |							(ВидТМЗ = &Бензин
	               |								ИЛИ ВидТМЗ = &ДизТопливо)
	               |								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоАкцизуСрезПоследних
	               |				ГДЕ
	               |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки ПОДОБНО &КодСтроки) КАК ДанныеПоКодамСтрок
	               |				ПО АкцизОбороты.ВидОперации = ДанныеПоКодамСтрок.ВидОперации
	               |					И АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ = ДанныеПоКодамСтрок.ВидТМЗ,
	               |			Справочник.НалогиСборыОтчисления КАК НалогиСборыОтчисления
	               |		ГДЕ
	               |			НалогиСборыОтчисления.Ссылка = &Акциз) КАК ИтоговаяТаблица
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ИтоговаяТаблица.КодСтроки,
	               |		ИтоговаяТаблица.ТМЗВидПодакцизногоТМЗ,
	               |		ИтоговаяТаблица.КодБК) КАК ОсновнаяТаблица";
 

	Запрос.Текст = ТекстЗапроса;
	 
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() И ВыдаватьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Данные для заполнения формы 400.05 за отчетный период отсутствуют...'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);   	
	КонецЕсли;	
	
	ТаблицаРезультата = Результат.Выгрузить();
	
	Возврат ТаблицаРезультата;	
	
КонецФункции // Форма400_05РассчитатьДанныеФормы()

&НаСервере
Процедура Форма400_05ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)                        
	
	ТекИмяФормы = "Форма400_05";
	
	СтрокаФормы = РегламентированнаяОтчетностьКлиентСервер.НайтиСтрокуДерева(мСписокФормБезИерархии, Новый Структура("КодФормы",ТекИмяФормы));
	
	Если СтрокаФормы <> Неопределено Тогда
		СтрокаФормы.ВсегоСтраниц = 1;
	КонецЕсли;  
	
	Если Не Перезаполнить Тогда  
		Текст = НСтр("ru = 'Заполнение формы 400.05'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли; 

	ТаблицаОтчета = Форма400_05РассчитатьДанныеФормы(Истина);
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтотОбъект, ТекИмяФормы);
	
	ЗначСуммаАкциза = 0;
	Для Каждого СтрокаОтчета Из ТаблицаОтчета Цикл
		
		КодСтр = ?(СтрокаОтчета.КодСтроки = NULL , "", СтрокаОтчета.КодСтроки);
		КБК = СокрЛП(?(СтрокаОтчета.КБК = NULL , "", СтрокаОтчета.КБК));		
		Если СтрокаОтчета.Выводить Тогда
			Вид =  ?(СтрокаОтчета.Вид = NULL , "", СтрокаОтчета.Вид);
			ЗначСуммаАкциза = ЗначСуммаАкциза + Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));			
			Если Вид = "БЕНЗИН" Тогда
				Номер1 = 1;
				Номер2 = 2;
			Иначе
				Номер1 = 4;
				Номер2 = 5;
			КонецЕсли;
			//Помещаем данные в форму
			Если КодСтр = "400.05.00" + Номер1 +".I" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_1_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_1_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_1_c", ЗначСумма);
			ИначеЕсли КодСтр = "400.05.00" + Номер1 +".II" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_2_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_2_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_2_c", ЗначСумма);
					
			ИначеЕсли КодСтр = "400.05.00" + Номер1 +".III" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_3_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_3_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_3_c", ЗначСумма);  
				
			ИначеЕсли КодСтр = "400.05.00" + Номер1 +".IV" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_4_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_4_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_4_c", ЗначСумма);

			ИначеЕсли КодСтр = "400.05.00" + Номер1 +".V" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_5_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_5_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер1 +"_5_c", ЗначСумма); 					
			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".I" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_1_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_1_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_1_c", ЗначСумма);

			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".II" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_2_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_2_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_2_c", ЗначСумма); 
				
			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".III" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_3_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_3_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_3_c", ЗначСумма);

			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".IV" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_4_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_4_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_4_c", ЗначСумма);

			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".V" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_5_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_5_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_5_c", ЗначСумма);

			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".VI" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_6_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_6_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_6_c", ЗначСумма);
			
			ИначеЕсли КодСтр = "400.05.00" + Номер2 +".VII" Тогда
				ЗначКолВо  = Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество),3);
				ЗначСтавка = Окр(?(СтрокаОтчета.Ставка = NULL , 0, СтрокаОтчета.Ставка),3);
				ЗначСумма  = Окр(?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза));
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_7_a", ЗначКолВо);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_7_b", ЗначСтавка);
				РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_00" + Номер2 +"_7_c", ЗначСумма);  
				
			КонецЕсли;			
		Иначе        
			
			ТекстСообщения = НСтр("ru = 'Данные по коду строки %1 не отражены в форме'");							  
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодСтр));	
			
		КонецЕсли;
		
	КонецЦикла;

	// Выводим общую сумму акциза для КБК в строке 400.05.007
	Если ЗначениеЗаполнено(ЗначСуммаАкциза) Тогда
		Если Не ПустаяСтрока(КБК) Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_007_1_a", КБК);  			
		КонецЕсли;
		РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_007_1_b", ЗначСуммаАкциза);  	
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ОбновитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы, ТаблицаДанных);	
	РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы,Перезаполнить);
	
	Если Перезаполнить Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтотОбъект, ТекИмяФормы);	
		
КонецПроцедуры // Форма400_05ЗаполнитьАвто()

&НаСервере
Процедура Форма400_05РасчетНаСервере(Изменено = Истина,ТекИмяФормы)
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы);	
	
	//Расчитываем ячейку s_400_05_001, s_400_05_004
	ИтогГрафыА001 = 0;
	ИтогГрафыС001 = 0;
	ИтогГрафыА004 = 0;
	ИтогГрафыС004 = 0;
	Для Н = 1 По 5 Цикл
		Если Изменено Тогда
			// ячейки 400.05.001
			ЗначГрафыA001 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_001_" + Н + "_a");
			ЗначГрафыB001 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_001_" + Н + "_b");
			ЗначГрафыC001 = Окр(ЗначГрафыA001 * ЗначГрафыB001);
			РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_001_" + Н + "_c", ЗначГрафыC001,Форма400_05ПолеТабличногоДокументаСтраница1);									
		КонецЕсли;
		ИтогГрафыА001 = ИтогГрафыА001 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_001_" + Н + "_a");
		ИтогГрафыС001 = ИтогГрафыС001 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_001_" + Н + "_c");
		Если Изменено Тогда
			// ячейки 400.05.004
			ЗначГрафыA004 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_004_" + Н + "_a");
			ЗначГрафыB004 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_004_" + Н + "_b");
			ЗначГрафыC004 = Окр(ЗначГрафыA004 * ЗначГрафыB004);			
			РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_004_" + Н + "_c", ЗначГрафыC004,Форма400_05ПолеТабличногоДокументаСтраница2);									
		КонецЕсли;												
		ИтогГрафыА004 = ИтогГрафыА004 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_004_" + Н + "_a");
		ИтогГрафыС004 = ИтогГрафыС004 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_004_" + Н + "_c");
	КонецЦикла;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_001_a", ИтогГрафыА001, Форма400_05ПолеТабличногоДокументаСтраница1);				
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_001_c", ИтогГрафыС001, Форма400_05ПолеТабличногоДокументаСтраница1);				
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_004_a", ИтогГрафыА004, Форма400_05ПолеТабличногоДокументаСтраница2);				
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_004_c", ИтогГрафыС004, Форма400_05ПолеТабличногоДокументаСтраница2);				
		
	//Расчитываем ячейку s_400_05_002, s_400_05_005
	ИтогГрафыА002 = 0;
	ИтогГрафыС002 = 0;
	ИтогГрафыА005 = 0;
	ИтогГрафыС005 = 0;
	Для Н = 1 По 7 Цикл
		Если Изменено Тогда
			// ячейки 400.05.002
			ЗначГрафыA002 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_002_" + Н + "_a");
			ЗначГрафыB002 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_002_" + Н + "_b");
			ЗначГрафыC002 = Окр(ЗначГрафыA002 * ЗначГрафыB002);
			
			РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_002_" + Н + "_c", ЗначГрафыC002, Форма400_05ПолеТабличногоДокументаСтраница1);							
		КонецЕсли;                      
		
		ИтогГрафыА002 = ИтогГрафыА002 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_002_" + Н + "_a");
		ИтогГрафыС002 = ИтогГрафыС002 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_002_" + Н + "_c");
		Если Изменено Тогда
			// ячейки 400.05.005
			ЗначГрафыA005 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_005_" + Н + "_a");
			ЗначГрафыB005 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_005_" + Н + "_b");
			ЗначГрафыC005 = Окр(ЗначГрафыA005 * ЗначГрафыB005);
			РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_005_" + Н + "_c", ЗначГрафыC005,Форма400_05ПолеТабличногоДокументаСтраница2);													
		КонецЕсли;
		ИтогГрафыА005 = ИтогГрафыА005 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_005_" + Н + "_a");
		ИтогГрафыС005 = ИтогГрафыС005 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_005_" + Н + "_c");
	КонецЦикла;
			
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_002_a", ИтогГрафыА002, Форма400_05ПолеТабличногоДокументаСтраница1);										
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_002_c", ИтогГрафыС002, Форма400_05ПолеТабличногоДокументаСтраница1);										
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_005_a", ИтогГрафыА005, Форма400_05ПолеТабличногоДокументаСтраница2);										
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_005_c", ИтогГрафыС005, Форма400_05ПолеТабличногоДокументаСтраница2);											
	         	
	
	//Расчитываем ячейку s_400_05_003
	Знач400_05_003_a = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_001_a")
					 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_002_a");
	Знач400_05_003_c = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_001_c")
					 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_002_c");
					 
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_003_a", Знач400_05_003_a, Форма400_05ПолеТабличногоДокументаСтраница1);										
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_003_c", Знач400_05_003_c, Форма400_05ПолеТабличногоДокументаСтраница1);				 
			
	//Расчитываем ячейку s_400_05_006
	Знач400_05_006_a = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_004_a")
					 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_005_a");
	Знач400_05_006_c = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_004_c")
					 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_05_005_c");
					 
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_006_a", Знач400_05_006_a, Форма400_05ПолеТабличногоДокументаСтраница3);										
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_05_006_c", Знач400_05_006_c, Форма400_05ПолеТабличногоДокументаСтраница3);	
	
	РегламентированнаяОтчетность.ОбновитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы, ТаблицаДанных);
	
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
КонецПроцедуры   // Форма400_05Расчет()

&НаСервере
Процедура Форма400_05ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбластиНаСервере(ИмяЯчейки, ЗначениеЯчейки)

	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, КодФормы, ИмяЯчейки ,ЗначениеЯчейки);
		
	Форма400_05РасчетНаСервере(Истина,КодФормы);
	   
КонецПроцедуры

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.06

&НаСервере
Процедура Форма400_06ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)
	
	ТекИмяФормы = "Форма400_06";                                                                          
	
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
			 
КонецПроцедуры // Форма400_06ЗаполнитьАвто()

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.07

&НаСервере
Процедура Форма400_07ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)                        
	
	ТекИмяФормы = "Форма400_07"; 	
		
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	         		
КонецПроцедуры // Форма400_07ЗаполнитьАвто()

&НаСервере
Процедура Форма400_07РасчетНаСервере(Изменено = Ложь, ТекИмяФормы)

	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы);
	
	//Расчитываем ячейку s_400_07_001
	НомерНач = 1;
	НомерКон = 13;
	s_400_07_001 = 0 ;
	Для ИмяЯчейки = НомерНач  По НомерКон Цикл
		ИмяГрафы = "s_400_07_001_2_" + ИмяЯчейки;
		s_400_07_001 = s_400_07_001 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, ИмяГрафы); 
	КонецЦикла;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекИмяФормы, "s_400_07_001_2", s_400_07_001, Ложь);
	Если Изменено Тогда
		Форма400_07ПолеТабличногоДокументаСтраница1.Области["s_400_07_001_2"].Значение = s_400_07_001;		
	КонецЕсли;	
	
	//Расчитаем ячейку s_400_07_004
	ИтогЗначение = s_400_07_001 ;
	Для Номер = 2 По 3 Цикл
		ИтогЗначение = ИтогЗначение + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_07_00" + Номер + "_2"); 
	КонецЦикла;
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, ТекИмяФормы, "s_400_07_004_2", ИтогЗначение, Ложь);
	
	Если Изменено Тогда
		Форма400_07ПолеТабличногоДокументаСтраница2.Области["s_400_07_004_2"].Значение = ИтогЗначение;		
	КонецЕсли;	
	
	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	
КонецПроцедуры   // Форма400_07Расчет()

&НаСервере
Процедура Форма400_07ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбласти(ИмяЯчейки, ЗначениеЯчейки)
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, КодФормы, ИмяЯчейки ,ЗначениеЯчейки);

	Форма400_07РасчетНаСервере(Истина, КодФормы);	

КонецПроцедуры

///////////////////////////////////////////////////////////////
// Процедуры и функции для расчета(заполнения) формы 400.08

&НаКлиенте
Процедура Форма400_08ЗаполнитьАвто(Перезаполнить = Ложь) 
	                	
	Состояние("Расчет формы 400.08");		
	Форма400_08ЗаполнитьАвтоНаСервере(Перезаполнить);	
	Состояние("");	 
	
КонецПроцедуры // 

&НаСервере
Функция Форма400_08РассчитатьДанныеФормы(ВыдаватьСообщения = Ложь) 
	 
	Запрос =  Новый Запрос;
	 
	Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	Запрос.УстановитьПараметр("НефтьИГазКонденсат",		Перечисления.ВидыПодакцизныхТМЗ.ЛегковыеАвтомобили);
	Запрос.УстановитьПараметр("КодСтроки", 				"400.08%");
	СписокКодовСтрок = Новый СписокЗначений;
	СписокКодовСтрок.Добавить("400.08.001");
	СписокКодовСтрок.Добавить("400.08.002");
	СписокКодовСтрок.Добавить("400.08.003");
	СписокКодовСтрок.Добавить("400.08.004");
	СписокКодовСтрок.Добавить("400.08.005");
	СписокКодовСтрок.Добавить("400.08.006");
	СписокКодовСтрок.Добавить("400.08.007");
	СписокКодовСтрок.Добавить("400.08.008");
	Запрос.УстановитьПараметр("СписокКодовСтрок", 		СписокКодовСтрок);
				   
	ТекстЗапроса = "ВЫБРАТЬ
				   |	ОсновнаяТаблица.КодСтроки,
				   |	ОсновнаяТаблица.Количество,
				   |	ОсновнаяТаблица.СуммаАкциза,
				   |	ВЫБОР
				   |		КОГДА ОсновнаяТаблица.КодСтроки В (&СписокКодовСтрок)
				   |			ТОГДА ИСТИНА
				   |		ИНАЧЕ ЛОЖЬ
				   |	КОНЕЦ КАК Выводить
				   |ИЗ
				   |	(ВЫБРАТЬ
				   |		ИтоговаяТаблица.КодСтроки КАК КодСтроки,
				   |		СУММА(ИтоговаяТаблица.Количество) КАК Количество,
				   |		СУММА(ИтоговаяТаблица.СуммаАкциза) КАК СуммаАкциза
				   |	ИЗ
				   |		(ВЫБРАТЬ
				   |			АкцизОбороты.ВидОперации КАК ВидОперации,
				   |			АкцизОбороты.КоличествоОборот КАК Количество,
				   |			АкцизОбороты.СуммаАкцизаОборот КАК СуммаАкциза,
				   |			ДанныеПоКодамСтрок.КодСтроки КАК КодСтроки
				   |		ИЗ
				   |			РегистрНакопления.Акциз.Обороты(
				   |				&НачПериода,
				   |				&КонПериода,
				   |				,
				   |				Организация = &организация
				   |				    И ТМЗ.ВидПодакцизногоТМЗ = &НефтьИГазКонденсат) КАК АкцизОбороты
				   |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидТМЗ КАК ВидТМЗ,
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.ВидОперации КАК ВидОперации,
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки КАК КодСтроки
				   |				ИЗ
				   |					РегистрСведений.КодыСтрокДекларацииПоАкцизу.СрезПоследних(
				   |						&КонПериода,
				   |						ВидТМЗ = &НефтьИГазКонденсат
				   |						    И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоАкцизуСрезПоследних
				   |				ГДЕ
				   |					КодыСтрокДекларацииПоАкцизуСрезПоследних.КодСтроки ПОДОБНО &КодСтроки) КАК ДанныеПоКодамСтрок
				   |				ПО АкцизОбороты.ВидОперации = ДанныеПоКодамСтрок.ВидОперации
				   |					И АкцизОбороты.ТМЗ.ВидПодакцизногоТМЗ = ДанныеПоКодамСтрок.ВидТМЗ) КАК ИтоговаяТаблица
				   |	
				   |	СГРУППИРОВАТЬ ПО
				   |		ИтоговаяТаблица.КодСтроки) КАК ОсновнаяТаблица
				   | ";
 

	Запрос.Текст = ТекстЗапроса;
	 
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() И ВыдаватьСообщения Тогда
		
		ТекстСообщения = НСтр("ru = 'Данные для заполнения формы 400.08 за отчетный период отсутствуют...'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);  
		
	КонецЕсли;	
	
	ТаблицаРезультата = Результат.Выгрузить();
	
	Возврат ТаблицаРезультата;		 
	
КонецФункции // Форма400_08РассчитатьДанныеФормы()

&НаСервере 
Процедура Форма400_08ЗаполнитьАвтоНаСервере(Перезаполнить = Ложь)                        
	
	ТекИмяФормы = "Форма400_08";
			
	Если Не Перезаполнить Тогда  
		Текст = НСтр("ru = 'Заполнение формы 400.08'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли; 
	
	ТаблицаОтчета = Форма400_08РассчитатьДанныеФормы(Истина);
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтотОбъект, ТекИмяФормы);
	
	ОбщееКоличество = 0;
	ОбщаяСумма = 0;
	
	Для Каждого СтрокаОтчета Из ТаблицаОтчета Цикл
		
		КодСтр = ?(СтрокаОтчета.КодСтроки = NULL , "", СтрокаОтчета.КодСтроки);
		Если СтрокаОтчета.Выводить Тогда   
			
			Для Н = 1 По 8 Цикл
				ИмяГрафы = "400.08.00" + Н;
				//Помещаем данные в форму
				Если КодСтр = ИмяГрафы Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_08_00" + Н, Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество)));					
					ОбщееКоличество = ОбщееКоличество + Окр(?(СтрокаОтчета.Количество = NULL , 0, СтрокаОтчета.Количество));
					ОбщаяСумма = ОбщаяСумма + ?(СтрокаОтчета.СуммаАкциза = NULL , 0, СтрокаОтчета.СуммаАкциза);
				КонецЕсли;
			КонецЦикла;                                                                                                                         					
		Иначе			
			ТекстСообщения = НСтр("ru = 'Данные по коду строки %1 не отражены в форме'");							  
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, КодСтр));				
		КонецЕсли;
	КонецЦикла;
	
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_08_009", ОбщееКоличество);					
	РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_08_011", Окр(ОбщаяСумма));					
	
	Если Не ОбщееКоличество = 0 Тогда
		Ставка = Окр(Окр(ОбщаяСумма)/ОбщееКоличество);
		Если Ставка >=1000 ИЛИ Ставка <=-1000 Тогда
			
			ТекстСообщения = НСтр("ru = 'Рассчитанная ставка акциза по легковым автомобилям превышает установленный предел! Рассчитанная ставка равна %1 не отражены в форме'");							  
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Ставка));				
			Ставка = 999;
		КонецЕсли;
		
		РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных,"s_400_08_010", Ставка);							
	КонецЕсли;
			
	РегламентированнаяОтчетность.ОбновитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы, ТаблицаДанных);	
	РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма,ТекИмяФормы,Перезаполнить);
	
	Если Перезаполнить Тогда
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтотОбъект, ТекИмяФормы);
			
КонецПроцедуры // Форма400_08ЗаполнитьАвто()

&НаСервере 
Процедура Форма400_08РасчетНаСервере(Изменено = Ложь, ТекИмяФормы)

	Если Изменено Тогда
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормы(ЭтотОбъект,ТекИмяФормы);
		//Расчет вычисляемых ячеек
		
		
		//Рассчитаем ячейку 400.08.009
		Знач400_08_009 = 0;
		Для Н = 1 По 8 Цикл
			Знач400_08_009 = Знач400_08_009 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_08_00" + Н);		
		КонецЦикла;
		
		РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_08_009", Знач400_08_009, ?(Изменено,Форма400_08ПолеТабличногоДокументаСтраница1,Неопределено));						
			
		//Рассчитаем ячейку 400.08.011
		Знач400_08_011 = Окр(РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_400_08_010") * Знач400_08_009);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВТаблицуДанных(ТаблицаДанных, "s_400_08_011", Знач400_08_011,Форма400_08ПолеТабличногоДокументаСтраница1);						
		
		Форма400_08ПолеТабличногоДокументаСтраница1.Области["s_400_08_011"].Значение = Знач400_08_011;
				
		РегламентированнаяОтчетность.ОбновитьТаблицуДанныхОбычнойФормы(ЭтаФорма,ТекИмяФормы, ТаблицаДанных);
		
		РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);

	КонецЕсли;

	
КонецПроцедуры   // Форма400_08Расчет()

&НаСервере
Процедура Форма400_08ПолеТабличногоДокументаСтраницаПриИзмененииСодержимогоОбласти(ИмяЯчейки, ЗначениеЯчейки)
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуру(ЭтаФорма, КодФормы, ИмяЯчейки ,ЗначениеЯчейки);

	Форма400_08РасчетНаСервере(Истина, КодФормы);	

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Комментарий");
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////
//Обход проблемы при очистки значений ячеек в ТП, в клиент-серверном варианте

&НаКлиенте
Процедура ПанельФорма400ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ПанельФорма400ПриСменеСтраницыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПанельФорма400ПриСменеСтраницыНаСервере()
	РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма, КодФормы);	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяФорма(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("мДатаНачалаПериодаОтчета", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("мСохраненныйДок",          СтруктураРеквизитовФормы.мСохраненныйДок);	
	ПараметрыФормы.Вставить("мСкопированаФорма",        мСкопированаФорма);
	ПараметрыФормы.Вставить("мДатаКонцаПериодаОтчета",  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыФормы.Вставить("мПериодичность",           СтруктураРеквизитовФормы.мПериодичность);
	ПараметрыФормы.Вставить("Налогоплательщик",         Налогоплательщик);
	ПараметрыФормы.Вставить("мВыбраннаяФорма",          мВыбраннаяФорма);
	ПараметрыФормы.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);	
	
	ОткрытьФорму(СтрЗаменить(ЭтаФорма.ИмяФормы, мВыбраннаяФорма, "") + "ОсновнаяФорма", ПараметрыФормы, ЭтотОбъект);	

КонецПроцедуры

	