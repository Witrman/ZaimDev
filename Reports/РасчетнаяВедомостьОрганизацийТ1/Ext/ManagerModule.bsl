#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Возврат Новый Структура("ИспользоватьПередКомпоновкойМакета,
							|ИспользоватьПослеВыводаРезультата,
							|ИспользоватьДанныеРасшифровки,
							|ИспользоватьПриВыводеПодвала",
							Истина, Истина, Истина, Истина);
							
КонецФункции

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале = Истина) Экспорт
	
	ЗаголовокОтчета = НСтр("ru = 'Расчетная ведомость организаций (Форма Т-1) %1'");
	ЗаголовокОтчета = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ЗаголовокОтчета, БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода));
	
	Возврат ЗаголовокОтчета;
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	ВыводитьИтоги = ПараметрыОтчета.ОбщиеИтоги;
	
	Для Каждого ЭлементСтруктурыОтчета ИЗ КомпоновщикНастроек.Настройки.Структура Цикл
		Если ТипЗнч(ЭлементСтруктурыОтчета) = Тип("ГруппировкаКомпоновкиДанных") Тогда
			Если ЭлементСтруктурыОтчета.Имя = "ТаблицаОтчета" Тогда
				УстановитьВыводИтогов(ЭлементСтруктурыОтчета, ВыводитьИтоги); 
				Прервать;
			Иначе
				ПоследнийЭлементСтруктуры = НайтиПоследнийЭлементСтруктурыСтрок(ЭлементСтруктурыОтчета.Структура);
				Если ПоследнийЭлементСтруктуры <> Неопределено Тогда
					Если ПоследнийЭлементСтруктуры.Имя = "ТаблицаОтчета" Тогда
						УстановитьВыводИтогов(ПоследнийЭлементСтруктуры, ВыводитьИтоги); 
						Прервать;
					КонецЕсли;				
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НачалоПериода = ПараметрыОтчета.НачалоПериода;
	КонецПериода  = ПараметрыОтчета.КонецПериода;
	
	Если НачалоПериода = '00010101' И (КонецПериода = '00010101' ИЛИ Год(КонецПериода) = Год(Дата('00010101235959'))) Тогда
		НачалоПериода = НачалоМесяца(ТекущаяДатаСеанса());
		КонецПериода  = КонецМесяца(ТекущаяДатаСеанса());
    ИначеЕсли НачалоПериода = '00010101' Тогда
		НачалоПериода = НачалоМесяца(КонецПериода);
	ИначеЕсли КонецПериода = '00010101' Тогда
		КонецПериода  = КонецМесяца(НачалоПериода);
	ИначеЕсли НачалоПериода > КонецПериода ИЛИ КонецПериода < НачалоПериода Тогда
		КонецПериода  = КонецМесяца(НачалоПериода);
	КонецЕсли;
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода" , КонецДня(КонецПериода));
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолноеОписаниеПериода(НачалоПериода, КонецПериода, Ложь);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПредставлениеПериода", ПредставлениеПериода);	
	
	БухгалтерскиеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, ПараметрыОтчета);
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	Результат.ПолеСлева  = 10;
	Результат.ПолеСправа = 10;
	Результат.ПолеСверху = 10;
	Результат.ПолеСнизу  = 10;
	
	Результат.МасштабПечати = 81;
	Результат.РазмерСтраницы = "A4";
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Результат.ФиксацияСлева = 13;
	Результат.ВывестиВертикальныйРазделительСтраниц();
	
	ОбластьПервойЯчейки = Результат.НайтиТекст("Фамилия, имя, отчество");
	ОбластьСледЯчейки = Результат.НайтиТекст("Фамилия, имя, отчество", ОбластьПервойЯчейки); // подтверждает наличие нескольких организаций в отчете
	
	Результат.ПовторятьПриПечатиСтроки = Неопределено;
	Если ОбластьПервойЯчейки <> Неопределено И ОбластьСледЯчейки = Неопределено Тогда
		ОбластьШапкиТаблицы  = Результат.Область(ОбластьПервойЯчейки.Верх, , ОбластьПервойЯчейки.Верх+3, );
		Результат.ПовторятьПриПечатиСтроки = ОбластьШапкиТаблицы;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыводеПодвала(ПараметрыОтчета, Результат) Экспорт
	
	Если ПараметрыОтчета.ВыводитьПодписиРуководителей Тогда
		ВыводПодписейРуководителей(ПараметрыОтчета, Результат);
	КонецЕсли;
	
	Если ПараметрыОтчета.ВыводитьПодписи Тогда 
		Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
		ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
		
		Результат.Вывести(ОбластьПодписи);
		
		Результат.Области.Подписи.Видимость = ПараметрыОтчета.ВыводитьПодписи;
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция НайтиПоследнийЭлементСтруктурыСтрок(Строки) 
	
	Если Строки.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		ЭлементСтруктуры = Строки[0];
	КонецЕсли;
	Пока ЭлементСтруктуры.Структура.Количество() <> 0 Цикл
		ЭлементСтруктуры = ЭлементСтруктуры.Структура[0];
	КонецЦикла;
	
	Возврат ЭлементСтруктуры;
	
КонецФункции

Процедура УстановитьВыводИтогов(Элемент, ВыводитьИтоги)
	
	Если ВыводитьИтоги Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(Элемент, "ВертикальноеРасположениеОбщихИтогов", РасположениеИтоговКомпоновкиДанных.Конец);
	Иначе
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(Элемент, "ВертикальноеРасположениеОбщихИтогов", РасположениеИтоговКомпоновкиДанных.Нет);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыводПодписейРуководителей(ПараметрыОтчета, Результат)
	
	Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
	ОбластьПодписи = Макет.ПолучитьОбласть("ПодписиРуководителей");
	
	ВыбиратьОрганизацию = Ложь;
	СписокСтруктурныхЕдиниц = ПараметрыОтчета.СписокСтруктурныхЕдиниц;
	Если СписокСтруктурныхЕдиниц.Количество() > 0 Тогда
		ВыбиратьОрганизацию = Истина;
	КонецЕсли;

	Если ВыбиратьОрганизацию Тогда
		Если СписокСтруктурныхЕдиниц.Количество() = 1 Тогда
			Организация = СписокСтруктурныхЕдиниц[0].Значение;
		Иначе
			Организация = Неопределено;
		КонецЕсли;	
	Иначе
		Организация = Неопределено;
	КонецЕсли;
	
	Если Организация = Неопределено Тогда
		ОбластьПодписи.Параметры.РукРасшифровкаПодписи     = "";	
		ОбластьПодписи.Параметры.РукДолжность              = "";
		ОбластьПодписи.Параметры.ГлавБухРасшифровкаПодписи = "";	
		ОбластьПодписи.Параметры.ГлавБухДолжность          = "";
	Иначе
		Руководители = ОбщегоНазначенияБКВызовСервера.ОтветственныеЛицаОрганизаций(Организация, ТекущаяДатаСеанса());
		ОбластьПодписи.Параметры.РукРасшифровкаПодписи     = Руководители.Руководитель;	
		ОбластьПодписи.Параметры.РукДолжность              = Руководители.РуководительДолжность;
		ОбластьПодписи.Параметры.ГлавБухРасшифровкаПодписи = ?(НЕ ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер), НСтр("ru = 'Не предусмотрен'"), Руководители.ГлавныйБухгалтер);
		ОбластьПодписи.Параметры.ГлавБухДолжность          = Руководители.ГлавныйБухгалтерДолжность;
	КонецЕсли;
	
	Результат.Вывести(ОбластьПодписи);
	
КонецПроцедуры

#КонецЕсли