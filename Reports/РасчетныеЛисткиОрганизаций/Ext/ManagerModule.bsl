#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура СформироватьОтчет(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	Результат = Новый ТабличныйДокумент;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.СписокСотрудников) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СотрудникиОрганизаций.Физлицо
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.Ссылка В(&СписокСотрудников)";
		
		Запрос.УстановитьПараметр("СписокСотрудников", ПараметрыОтчета.СписокСотрудников);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
		Иначе
			 МассивФизЛиц = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ФизЛицо");
			 Если МассивФизЛиц.Количество() = 1 Тогда
				 ПараметрыОтчета.Вставить("СписокФизЛиц", МассивФизЛиц[0]);
			 Иначе
				 ПараметрыОтчета.Вставить("СписокФизЛиц", МассивФизЛиц);
			 КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	СформироватьРасчетныеЛистки(Результат, ПараметрыОтчета);
	
	ПоместитьВоВременноеХранилище(Новый Структура("Результат", Результат), АдресХранилища);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ВАРИАНТЫ ОТЧЕТОВ

Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	НастройкиОтчета.КлючВарианта = "РасчетныеЛисткиОрганизаций";
	
КонецПроцедуры

Функция ПустыеПараметрыКомпоновкиОтчета() Экспорт
	
	КоллекцияНастроек = Новый Структура;

	КоллекцияНастроек.Вставить("ИдентификаторОтчета"         , "");
	КоллекцияНастроек.Вставить("ОткрытИзРассылки"            , Ложь);
	КоллекцияНастроек.Вставить("НастройкиКомпоновкиДанных"   , Неопределено);
	КоллекцияНастроек.Вставить("НачалоПериода"               , Дата(1,1,1));
	КоллекцияНастроек.Вставить("КонецПериода"                , Дата(1,1,1));
	КоллекцияНастроек.Вставить("ПериодОтчета"                , Новый СтандартныйПериод(ВариантСтандартногоПериода.ПрошлыйМесяц));
	КоллекцияНастроек.Вставить("Группировать"                , "");
	КоллекцияНастроек.Вставить("ДетализацияВыплаты"          , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьНалоги"              , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьПримененныйВычет"    , Ложь);
	КоллекцияНастроек.Вставить("РежимРасшифровки"            , Ложь);
	КоллекцияНастроек.Вставить("ДанныеРасшифровки"           , Неопределено);
	КоллекцияНастроек.Вставить("СхемаКомпоновкиДанных"       , Неопределено);
	КоллекцияНастроек.Вставить("ИзмененыНастройкиВариант"    , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьУровниПодразделений" , 0);
	
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации");
	КоллекцияНастроек.Вставить("СписокОрганизаций"           , СписокОрганизаций);
	
	КоллекцияНастроек.Вставить("СписокПодразделений"         , Новый СписокЗначений);
	КоллекцияНастроек.Вставить("СписокСотрудников"           , Новый СписокЗначений);
	КоллекцияНастроек.Вставить("СписокФизическихЛиц"         , Новый СписокЗначений);
	КоллекцияНастроек.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями", Ложь);
	
	Возврат КоллекцияНастроек;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПараметрыПустымиЗначениями(КоллекцияПараметров)

	Для Н = 0 По КоллекцияПараметров.Количество() - 1 Цикл
		КоллекцияПараметров.Установить(Н, "");
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПараметрыПустымиЗначениями

// Функция формирует основной запрос по сбору данных для расчетных листков.
//
// Параметры
//
// Возвращаемое значение:
//   РезультатЗапроса   – результат запроса.
//
Функция СформироватьЗапрос(ПараметрыОтчета)

	ОтборОрганизации   = ЗначениеЗаполнено(ПараметрыОтчета.СписокОрганизаций);
	ОтборПодразделения = ЗначениеЗаполнено(ПараметрыОтчета.СписокПодразделений);
	ОтборРаботника     = ПараметрыОтчета.Свойство("СписокФизЛиц") И ЗначениеЗаполнено(ПараметрыОтчета.СписокФизЛиц);
	
	ЗапросРЛ = Новый Запрос;
	ЗапросРЛ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗапросРЛ.УстановитьПараметр("парамПустаяОрганизация", 	 	 Справочники.Организации.ПустаяСсылка());
	ЗапросРЛ.УстановитьПараметр("ПериодРегистрации", 	  		 НачалоМесяца(ПараметрыОтчета.НачалоПериода));
	ЗапросРЛ.УстановитьПараметр("КонецПериодаРегистрации", 		 КонецДня(ПараметрыОтчета.КонецПериода));
	ЗапросРЛ.УстановитьПараметр("ВидСтроки",              		 Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	ЗапросРЛ.УстановитьПараметр("Приход", 						 ВидДвиженияНакопления.Приход);
	ЗапросРЛ.УстановитьПараметр("Расход", 						 ВидДвиженияНакопления.Расход);
	ЗапросРЛ.УстановитьПараметр("ВнутреннееСовместительство",	 Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	ЗапросРЛ.УстановитьПараметр("Увольнение",					 Перечисления.ПричиныИзмененияСостояния.Увольнение);
	ЗапросРЛ.УстановитьПараметр("парамНалогВзнос",			 	 Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	ЗапросРЛ.УстановитьПараметр("ЗанятостьНеУказана",			 Перечисления.ВидыЗанятостиВОрганизации.ПустаяСсылка());
	ЗапросРЛ.УстановитьПараметр("ЧерезКассу",				     Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу);
	ЗапросРЛ.УстановитьПараметр("ЧерезБанк",				     Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк);
	ЗапросРЛ.УстановитьПараметр("НеОблагаетсяЦеликом",			 Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом);
	ЗапросРЛ.УстановитьПараметр("ОблагаетсяЦеликом",			 Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом);
	ЗапросРЛ.УстановитьПараметр("Прекратить",					 Перечисления.ВидыДействияСНачислением.Прекратить);
	ЗапросРЛ.УстановитьПараметр("НачальнаяДата",				 '00010101');
	ЗапросРЛ.УстановитьПараметр("Возврат",				 		 Перечисления.РасчетыСБюджетомФондамиВидСтроки.Возврат);
	ЗапросРЛ.УстановитьПараметр("парамДатаНачалаРасчетаПоФиксСтавке",	'20070101');
	
	ОтборПоРазрешеннымОрганизациям = Ложь;
	Если НЕ Пользователи.ЭтоПолноправныйПользователь() И ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
		ОтборПоРазрешеннымОрганизациям = Истина;
		ДоступныеОрганизации = БухгалтерскиеОтчеты.ПолучитьСписокДоступныхОрганизаций().ВыгрузитьКолонку("Организация");
		ЗапросРЛ.УстановитьПараметр("ДоступныеОрганизации",	ДоступныеОрганизации);	
	КонецЕсли;
	
	ОтборПоРазрешеннымПоразделениям = Ложь;
	Если НЕ Пользователи.ЭтоПолноправныйПользователь() И ПолучитьФункциональнуюОпцию("ОграничиватьДоступНаУровнеЗаписей") Тогда
		ОтборПоРазрешеннымПоразделениям = Истина;
		ДоступныеПодразделения = БухгалтерскиеОтчеты.ПолучитьСписокДоступныхПодразделений(ДоступныеОрганизации).ВыгрузитьКолонку("Подразделение");
		ЗапросРЛ.УстановитьПараметр("ДоступныеПодразделения",	ДоступныеПодразделения);	
	КонецЕсли;

	Если ОтборОрганизации Тогда
		
		ЗапросРЛ.УстановитьПараметр("Организация", ПараметрыОтчета.СписокОрганизаций);
		Если ТипЗнч(ПараметрыОтчета.СписокОрганизаций) = Тип("СправочникСсылка.Организации") Тогда
			ЗапросРЛ.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(ПараметрыОтчета.СписокОрганизаций));
		Иначе
					
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	УчетнаяПолитика.Организация,
			|	УчетнаяПолитика.ВедениеУчетаПоГоловнойОрганизации
			|ПОМЕСТИТЬ ВТ_УчетнаяПолитикаПоПерсоналуОрганизации
			|ИЗ
			|	&парамУчетнаяПолитикаПоПерсоналуОрганизации КАК УчетнаяПолитика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ВЫБОР
			|		КОГДА ВТ_УчетнаяПолитикаПоПерсоналуОрганизации.ВедениеУчетаПоГоловнойОрганизации
			|			ТОГДА ВЫБОР
			|					КОГДА Организации.ГоловнаяОрганизация = &парамПустаяОрганизация
			|							ИЛИ Организации.ГоловнаяОрганизация = Организации.Ссылка
			|						ТОГДА Организации.Ссылка
			|					ИНАЧЕ Организации.ГоловнаяОрганизация
			|				КОНЕЦ
			|		ИНАЧЕ Организации.Ссылка
			|	КОНЕЦ КАК ГоловнаяОрганизация
			|ИЗ
			|	Справочник.Организации КАК Организации
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетнаяПолитикаПоПерсоналуОрганизации КАК ВТ_УчетнаяПолитикаПоПерсоналуОрганизации
			|		ПО Организации.Ссылка = ВТ_УчетнаяПолитикаПоПерсоналуОрганизации.Организация
			|ГДЕ
			|	Организации.Ссылка В(&парамОрганизация)");
			
			Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
			Запрос.УстановитьПараметр("парамОрганизация", ПараметрыОтчета.СписокОрганизаций);
			УчетнаяПолитикаПоПерсоналуОрганизацииТаблица = ПолныеПраваПовтИсп.СформироватьТаблицуУчетнойПолитикиПоПерсоналу();		
			Запрос.УстановитьПараметр("парамУчетнаяПолитикаПоПерсоналуОрганизации", УчетнаяПолитикаПоПерсоналуОрганизацииТаблица);		
			
			ЗапросРЛ.УстановитьПараметр("ГоловнаяОрганизация", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ГоловнаяОрганизация"));
			
		КонецЕсли;
		
		Если ПараметрыОтчета.ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = "=" 
		ИначеЕсли ПараметрыОтчета.ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = "<>"
		ИначеЕсли ПараметрыОтчета.ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = "В"
		Иначе
			ВидСравненияОрганизацииСтрокой = "НЕ В"
		КонецЕсли; 
		
	КонецЕсли;  
	
	Если ОтборРаботника Тогда
		
		ЗапросРЛ.УстановитьПараметр("РаботникиОрганизации", ПараметрыОтчета.СписокФизЛиц);
	
		Если ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.Равно Тогда
			ВидСравненияРаботник = "=" 
		ИначеЕсли ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.НеРавно Тогда
			ВидСравненияРаботник = "<>"
		ИначеЕсли ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.ВСписке Тогда
			ВидСравненияРаботник = "В"
		ИначеЕсли ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.НеВСписке Тогда
			ВидСравненияРаботник = "НЕ В"
		ИначеЕсли ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.ВИерархии Тогда
			ВидСравненияРаботник = "В ИЕРАРХИИ"
		ИначеЕсли ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ПараметрыОтчета.ВидСравненияРаботника = ВидСравнения.НеВИерархии Тогда
			ВидСравненияРаботник = "НЕ В ИЕРАРХИИ"
		КонецЕсли; 
	
	КонецЕсли; 
	
	Если ОтборПодразделения Тогда
		
		ЗапросРЛ.УстановитьПараметр("ПодразделенияОрганизации", ПараметрыОтчета.СписокПодразделений);
	
		Если ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.Равно Тогда
			ВидСравненияПодразделение = "=" 
		ИначеЕсли ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.НеРавно Тогда
			ВидСравненияПодразделение = "<>"
		ИначеЕсли ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.ВСписке Тогда
			ВидСравненияПодразделение = "В"
		ИначеЕсли ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.НеВСписке Тогда
			ВидСравненияПодразделение = "НЕ В"
		ИначеЕсли ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.ВИерархии Тогда
			ВидСравненияПодразделение = "В ИЕРАРХИИ"
		ИначеЕсли ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ПараметрыОтчета.ВидСравненияПодразделения = ВидСравнения.НеВИерархии Тогда
			ВидСравненияПодразделение = "НЕ В ИЕРАРХИИ"
		КонецЕсли; 
	
	КонецЕсли;
	
	ФПДУсловиеТекст = 
	"ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
	РНУсловиеТекст = "";
	
	ТекстМесяцыОтчета = "";
	ТекущийМесяц = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
	
/////////////////////////////////////////////МесяцыОтчета//////////////////////////////////////////////////////////////////

	Пока ТекущийМесяц <= НачалоМесяца(ПараметрыОтчета.КонецПериода) Цикл
		Если ЗначениеЗаполнено(ТекстМесяцыОтчета) Тогда
			ТекстМесяцыОтчета = ТекстМесяцыОтчета + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		ТекстМесяцыОтчета = ТекстМесяцыОтчета + "
		|ВЫБРАТЬ "+?(ТекстМесяцыОтчета ="", " РАЗРЕШЕННЫЕ", "")+"
		|	ДАТАВРЕМЯ(" + Формат(ТекущийМесяц, "ДФ=гггг,ММ,дд,ЧЧ,мм,сс") + ") КАК ПериодРегистрации,
		|	ДАТАВРЕМЯ(" + Формат(КонецМесяца(ТекущийМесяц), "ДФ=гггг,ММ,дд,ЧЧ,мм,сс") + ") КАК ДатаКонцаМесяца
		|
		|"+?(ТекстМесяцыОтчета = "","ПОМЕСТИТЬ ВТ_МесяцыОтчета ","")+"
		|";
		
		ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, 1);
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ТекстМесяцыОтчета) Тогда
		ТекущийМесяц = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
		ТекстМесяцыОтчета = ТекстМесяцыОтчета + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДАТАВРЕМЯ(" + Формат(ТекущийМесяц, "ДФ=гггг,ММ,дд,ЧЧ,мм,сс") + ") КАК ПериодРегистрации,
		|	ДАТАВРЕМЯ(" + Формат(КонецМесяца(ТекущийМесяц), "ДФ=гггг,ММ,дд,ЧЧ,мм,сс") + ") КАК ДатаКонцаМесяца
		|
		|ПОМЕСТИТЬ ВТ_МесяцыОтчета
		|";
	КонецЕсли;
	
	ТекстМесяцыОтчета = ТекстМесяцыОтчета + "
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	ДатаКонцаМесяца
	|;";
	
	Если ОтборОрганизации Тогда
		ФПДУсловиеТекст = ФПДУсловиеТекст + " И Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		РНУсловиеТекст = РНУсловиеТекст + " И Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ФПДУсловиеТекст = ФПДУсловиеТекст + " И ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
		РНУсловиеТекст = РНУсловиеТекст + " И ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
	КонецЕсли;
	РНУсловиеТекст = Сред(РНУсловиеТекст,4);

	// количество уровней подразделений
	ТекстУровниПодразделений = "";
	Н = ПараметрыОтчета.ВыводитьУровниПодразделений - 1;
	Пока Н > 0 Цикл

		Если НЕ ПустаяСтрока(ТекстУровниПодразделений) Тогда
			ТекстУровниПодразделений = ТекстУровниПодразделений + " + ";
		КонецЕсли;
		
		ТекстРодители = "";
		Для А = 1 По Н Цикл
			Если Не ПустаяСтрока(ТекстРодители) Тогда
				ТекстРодители = ТекстРодители + ".";
			КонецЕсли;
			ТекстРодители = ТекстРодители + "Родитель";
		КонецЦикла;
		
		ТекстУровниПодразделений = ТекстУровниПодразделений + "ЕСТЬNULL(<<ПодразделениеОрганизации>>." + ТекстРодители + ".Наименование + ""/"", """")";
		
		Н = Н - 1;
	КонецЦикла;	
	
	Если Не ПустаяСтрока(ТекстУровниПодразделений) Тогда
		ТекстУровниПодразделений = ТекстУровниПодразделений + " + ";
	КонецЕсли;
	
	ТекстУровниПодразделений = ТекстУровниПодразделений + "<<ПодразделениеОрганизации>>.Наименование";
	
	ТекстЗапроса = "";
	ТекстЗапроса = ТекстЗапроса + ТекстМесяцыОтчета;
	
	// Получим налогоплательщиков организаций
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(ИсчислениеНалогов.Налогоплательщик, Организации.Ссылка) КАК Налогоплательщик
	|
	|ПОМЕСТИТЬ ВТ_Налогоплательщик
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсчислениеНалоговСтруктурныхЕдиниц КАК ИсчислениеНалогов
	|		ПО Организации.Ссылка = ИсчислениеНалогов.СтруктурнаяЕдиница
	|			И ИсчислениеНалогов.РазделНалоговогоУчета = ЗНАЧЕНИЕ(Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты)";
			
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ Организации.Ссылка " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + 
	"ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Налогоплательщик
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МесяцыОтчета.ПериодРегистрации,
	|	УчетнаяПолитикаНУ.Организация,
	|	МАКСИМУМ(УчетнаяПолитикаНУ.Период) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПоследняяДатаУчетнойПолитики
	|ИЗ
	|	ВТ_МесяцыОтчета КАК МесяцыОтчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
	|		ПО УчетнаяПолитикаНУ.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|	
	|СГРУППИРОВАТЬ ПО
	|	МесяцыОтчета.ПериодРегистрации,
	|	УчетнаяПолитикаНУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодРегистрации,
	|	Период
	|;
	|";
	
	Если ПараметрыОтчета.ВыводитьНалоги ИЛИ ПараметрыОтчета.ВыводитьПримененныйВычет Тогда 
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|			И ИсчислениеНалогов.Организация = ИПНСведенияОДоходах.Организация // как прочий доход показывает только в той организации, где его начислили
		|					ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяПрочимДоходом,
		|	ИПНСведенияОДоходах.ВидРасчета КАК ВидРасчета,
		|	ИПНСведенияОДоходах.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		|	ИсчислениеНалогов.Организация,
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.СпособНалогообложения,
		|	ИПНСведенияОДоходах.СуммаДохода,
		|	ИПНСведенияОДоходах.СуммаВычета,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) < ДАТАВРЕМЯ(2019, 1, 1)
		|			ТОГДА ИПНСведенияОДоходах.ПримененнаяЛьгота
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПримененнаяЛьгота,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) >= ДАТАВРЕМЯ(2019, 1, 1)
		|			ТОГДА ИПНСведенияОДоходах.ПримененнаяЛьгота
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПримененнаяКорректировка,
		|	ИПНСведенияОДоходах.ПримененныйВычет КАК ПримененныйВычет,
		|	0 КАК ОПВ,
		|	0 КАК ИПН
		|
		|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
		|ИЗ
		|	ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ПО ИсчислениеНалогов.Налогоплательщик = ИПНСведенияОДоходах.Налогоплательщик
		|ГДЕ
		|	((ИПНСведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД) И &КонецПериодаРегистрации)
		|	ИЛИ (ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД) И &КонецПериодаРегистрации))
		|	И ИПНСведенияОДоходах.ФизЛицо Ссылка Справочник.ФизическиеЛица";
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ИПНСведенияОДоходах.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ КАК ЯвляетсяПрочимДоходом,
		|	NULL КАК ВидРасчета,
		|	"""" КАК ВидРасчетаНаименование,
		|	ИсчислениеНалогов.Организация,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодРегистрации,
		|	НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
		|	&ОблагаетсяЦеликом КАК СпособНалогообложения,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.Доход КАК СуммаДохода,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ДоходНеОблагаемыйИПН КАК СуммаВычета,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота,
		|	0 КАК ПримененнаяКорректировка,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененныйВычет,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ОПВ,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ИПН
		|ИЗ
		|	ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|		ПО ИсчислениеНалогов.Налогоплательщик = СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик
		|ГДЕ
		|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД) И &КонецПериодаРегистрации
		|	И СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода < &парамДатаНачалаРасчетаПоФиксСтавке";	
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "	
		|ИНДЕКСИРОВАТЬ ПО
		|	ИсчислениеНалогов.Организация,
		|	ПериодРегистрации,
		|	Период;";
		
		Если ПараметрыОтчета.ВыводитьНалоги Тогда
			
			ТекстЗапроса = ТекстЗапроса + " 
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
			|	ВЫБОР
			|		КОГДА ЕПСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
			|			И ИсчислениеНалогов.Организация = ЕПСведенияОДоходах.Организация // как прочий доход показывает только в той организации, где его начислили
			|					ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ЯвляетсяПрочимДоходом,
			|	ЕПСведенияОДоходах.ВидРасчета КАК ВидРасчета,
			|	ЕПСведенияОДоходах.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
			|	ИсчислениеНалогов.Организация,
			|	ЕПСведенияОДоходах.ФизЛицо,
			|	НАЧАЛОПЕРИОДА(ЕПСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	НАЧАЛОПЕРИОДА(ЕПСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
			|	ЕПСведенияОДоходах.СпособНалогообложения,
			|	ЕПСведенияОДоходах.СуммаДохода
			|
			|ПОМЕСТИТЬ ВТ_ЕПСведенияОДоходах
			|ИЗ
			|	ВТ_Налогоплательщик КАК ИсчислениеНалогов
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЕПСведенияОДоходах КАК ЕПСведенияОДоходах
			|		ПО ИсчислениеНалогов.Налогоплательщик = ЕПСведенияОДоходах.Налогоплательщик
			|ГДЕ
			|	((ЕПСведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД) И &КонецПериодаРегистрации)
			|	ИЛИ (ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД) И &КонецПериодаРегистрации))
			|	И ЕПСведенияОДоходах.ФизЛицо Ссылка Справочник.ФизическиеЛица";
			
			Если ОтборРаботника Тогда
				ТекстЗапроса = ТекстЗапроса + " И ЕПСведенияОДоходах.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса + "	
			|ИНДЕКСИРОВАТЬ ПО
			|	ИсчислениеНалогов.Организация,
			|	ПериодРегистрации,
			|	Период;";
			
		КонецЕсли;

	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыСДепонентами.Организация,
	|	ВзаиморасчетыСДепонентами.ФизЛицо,
	|	ДОБАВИТЬКДАТЕ(&ПериодРегистрации, СЕКУНДА, -1) КАК Период,
	|	ВзаиморасчетыСДепонентами.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов
	|
	|ПОМЕСТИТЬ ВТ_ВзаиморасчетыСДепонентами
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентамиОрганизаций.Остатки(
	|		&ПериодРегистрации,
	|		" + ?(РНУсловиеТекст <> "", РНУсловиеТекст, "") + ") КАК ВзаиморасчетыСДепонентами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Организация,
	|	ВзаиморасчетыСДепонентами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСДепонентами.Период, МЕСЯЦ) КАК Период,
	|	ВзаиморасчетыСДепонентами.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентамиОрганизаций.Обороты(
	|		&ПериодРегистрации,
	|		&КонецПериодаРегистрации,
	|		МЕСЯЦ,
	|		" + ?(РНУсловиеТекст <> "", РНУсловиеТекст, "") + ") КАК ВзаиморасчетыСДепонентами
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыСРаботниками.Организация,
	|	ВзаиморасчетыСРаботниками.ФизЛицо,
	|	ДОБАВИТЬКДАТЕ(&ПериодРегистрации, СЕКУНДА, -1) КАК Период,
	|	ВзаиморасчетыСРаботниками.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТ_ВзаиморасчетыСРаботниками
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|		&ПериодРегистрации,
	|		" + ?(РНУсловиеТекст <> "", РНУсловиеТекст, "") + ") КАК ВзаиморасчетыСРаботниками
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСРаботниками.Организация,	
	|	ВзаиморасчетыСРаботниками.ФизЛицо,
	|	ВзаиморасчетыСРаботниками.Период,
	|	ВзаиморасчетыСРаботниками.СуммаВзаиморасчетовОборот КАК СуммаВзаиморасчетов
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Обороты(
	|		&ПериодРегистрации,
	|		&КонецПериодаРегистрации,
	|		МЕСЯЦ,
	|		" + ?(РНУсловиеТекст <> "", РНУсловиеТекст, "") + ") КАК ВзаиморасчетыСРаботниками
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;";
	
    УсловиеТекст = "";
	УсловиеНаФизлицоТекст = "";
	
	Если ОтборОрганизации Тогда
		УсловиеТекст = УсловиеТекст + "Организация " + ВидСравненияОрганизацииСтрокой + " (&ГоловнаяОрганизация)";
		Если ОтборРаботника Тогда
			УсловиеТекст = УсловиеТекст + " И Сотрудник.ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
			УсловиеНаФизлицоТекст = "ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
		КонецЕсли;
	ИначеЕсли ОтборРаботника Тогда 
		УсловиеТекст = УсловиеТекст + "Сотрудник.ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
		УсловиеНаФизлицоТекст = "ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	РаботникиОрганизации.Организация,
	|	РаботникиОрганизации.ОбособленноеПодразделение,
	|	МесяцыОтчета.ПериодРегистрации,
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Увольнение
	|					ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|				ИНАЧЕ РаботникиОрганизации.Период
	|			 КОНЕЦ) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПоследниеНазначения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МесяцыОтчета КАК МесяцыОтчета
	|		ПО РаботникиОрганизации.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|ГДЕ
	|	РаботникиОрганизации.Период <= &КонецПериодаРегистрации И
	|	(РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство) 
	|	" + ?(УсловиеТекст <> "", " И " + УсловиеТекст, "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизации.Сотрудник.ФизЛицо,
	|	РаботникиОрганизации.Организация,
	|	РаботникиОрганизации.ОбособленноеПодразделение,
	|	МесяцыОтчета.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцыОтчета.ПериодРегистрации,
	|	РаботникиОрганизации.Сотрудник.ФизЛицо,
	|	РаботникиОрганизации.ОбособленноеПодразделение	
	|;";
	
	// ПлановыеНачисленияПоследниеДаты
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МесяцыОтчета.ПериодРегистрации,
	|	РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	РаботникиОрганизации.Организация,
	|	РаботникиОрганизации.ОбособленноеПодразделение,
	|	МАКСИМУМ(ПлановыеНачисления.Период) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеНачисленияПоследниеДаты
	|ИЗ
	|	ВТ_МесяцыОтчета КАК МесяцыОтчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|		И РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство
	|		И РаботникиОрганизации.ПричинаИзмененияСостояния <> &Увольнение";

	Если ОтборРаботника Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|	И РаботникиОрганизации.Сотрудник.ФизЛицо " + ВидСравненияРаботник + " (&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|		ПО РаботникиОрганизации.Сотрудник = ПлановыеНачисления.Сотрудник	
	|		И РаботникиОрганизации.Организация = ПлановыеНачисления.Организация
	|		И ПлановыеНачисления.Период <= РаботникиОрганизации.Период
	|		И ПлановыеНачисления.ВидРасчетаИзмерение.Код ЕСТЬ NULL
	|		И ПлановыеНачисления.Размер <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизации.Сотрудник.ФизЛицо,
	|	РаботникиОрганизации.Организация,
	|	РаботникиОрганизации.ОбособленноеПодразделение,
	|	МесяцыОтчета.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцыОтчета.ПериодРегистрации,
	|	РаботникиОрганизации.Сотрудник.ФизЛицо,
	|	РаботникиОрганизации.ОбособленноеПодразделение	
	|;";
	
	// Запрос по взаиморасчетам
	ТекстЗапросПоВзаиморасчетам = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыСРаботниками.Организация КАК Организация,
	|	ВзаиморасчетыСРаботниками.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботниками.Период, МЕСЯЦ) КАК ПериодРегистрации";
	Если ПараметрыОтчета.ДетализацияВыплаты Тогда
		ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
		|	ВзаиморасчетыСРаботниками.Регистратор КАК Регистратор";
	Иначе
		ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
		|	NULL КАК Регистратор";
	КонецЕсли;
	ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСРаботниками.СпособВыплаты = &ЧерезКассу
	|			ТОГДА ВЫБОР
	|						КОГДА ВзаиморасчетыСРаботниками.ВидСтроки = &Возврат
	|							ТОГДА ""Возвращено в кассу""
	|						ИНАЧЕ ""Выплачено из кассы""
	|				  КОНЕЦ
	|		КОГДА ВзаиморасчетыСРаботниками.СпособВыплаты = &ЧерезБанк
	|			ТОГДА ""Перечислено в банк"" // считаем, что возвраты из банка работнику показывать не нужно, т.к. это взаимоотношения организации и банка
	|		ИНАЧЕ ""Способ выплаты не указан""
	|	КОНЕЦ КАК Вид,
	|	СУММА(ВзаиморасчетыСРаботниками.СуммаВзаиморасчетов) КАК Удержания,
	|	0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|
	|ПОМЕСТИТЬ ВТ_ЗапросПоВзаиморасчетам
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботниками
	|
	|ГДЕ
	|	ВзаиморасчетыСРаботниками.Активность И
	|	ВзаиморасчетыСРаботниками.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ВзаиморасчетыСРаботниками.ВидДвижения = &Расход
	|	И НЕ (ВзаиморасчетыСРаботниками.Регистратор ССЫЛКА Документ.ДепонированиеЗаработнойПлаты)
	|	" + ?(РНУсловиеТекст <> "", " И " + РНУсловиеТекст, "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСРаботниками.Организация,
	|	ВзаиморасчетыСРаботниками.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботниками.Период, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСРаботниками.СпособВыплаты = &ЧерезКассу
	|			ТОГДА ВЫБОР
	|						КОГДА ВзаиморасчетыСРаботниками.ВидСтроки = &Возврат
	|							ТОГДА ""Возвращено в кассу""
	|						ИНАЧЕ ""Выплачено из кассы""
	|				  КОНЕЦ
	|		КОГДА ВзаиморасчетыСРаботниками.СпособВыплаты = &ЧерезБанк
	|			ТОГДА ""Перечислено в банк"" // считаем, что возвраты из банка работнику показывать не нужно, т.к. это взаимоотношения организации и банка
	|		ИНАЧЕ ""Способ выплаты не указан""
	|	КОНЕЦ";
	Если  ПараметрыОтчета.ДетализацияВыплаты Тогда
		ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
		|	ВзаиморасчетыСРаботниками.Регистратор";
	КонецЕсли;
	ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСРаботниками.Организация КАК Организация,
	|	ВзаиморасчетыСРаботниками.ФизЛицо КАК ФизЛицо,
	|	МесяцыОтчета.ПериодРегистрации,
	|	NULL КАК Регистратор,
	|	""Сальдо"" КАК Вид,
	|	0 КАК Удержания,
	|	СУММА(ВЫБОР 
	|			КОГДА ВзаиморасчетыСРаботниками.Период < МесяцыОтчета.ПериодРегистрации 
	|				ТОГДА ВзаиморасчетыСРаботниками.СуммаВзаиморасчетов 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ) КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	СУММА(ВЫБОР 
	|			КОГДА ВзаиморасчетыСРаботниками.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|				ТОГДА ВзаиморасчетыСРаботниками.СуммаВзаиморасчетов 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ) КАК СуммаВзаиморасчетовКонечныйОстаток
	|ИЗ
	|	ВТ_МесяцыОтчета КАК МесяцыОтчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВзаиморасчетыСРаботниками КАК ВзаиморасчетыСРаботниками
	|		ПО ВзаиморасчетыСРаботниками.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСРаботниками.Организация,
	|	ВзаиморасчетыСРаботниками.ФизЛицо,
	|	МесяцыОтчета.ПериодРегистрации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Организация КАК Организация,
	|	ВзаиморасчетыСДепонентами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСДепонентами.Период, МЕСЯЦ) КАК ПериодРегистрации";
	Если ПараметрыОтчета.ДетализацияВыплаты Тогда
		ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
		|	ВзаиморасчетыСДепонентами.Регистратор КАК Регистратор";
	Иначе
		ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
		|	NULL КАК Регистратор";
	КонецЕсли;
	ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСДепонентами.СпособВыплаты = &ЧерезКассу
	|			ТОГДА ВЫБОР
	|						КОГДА ВзаиморасчетыСДепонентами.ВидСтроки = &Возврат
	|							ТОГДА ""Возвращено в кассу""
	|						ИНАЧЕ ""Выплачено из кассы""
	|				  КОНЕЦ
	|		КОГДА ВзаиморасчетыСДепонентами.СпособВыплаты = &ЧерезБанк
	|			ТОГДА ""Перечислено в банк"" // считаем, что возвраты из банка работнику показывать не нужно, т.к. это взаимоотношения организации и банка
	|		ИНАЧЕ ""Способ выплаты не указан""
	|	КОНЕЦ КАК Вид,
	|	СУММА(ВзаиморасчетыСДепонентами.СуммаВзаиморасчетов) КАК Удержания,
	|	0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентамиОрганизаций КАК ВзаиморасчетыСДепонентами
	|
	|ГДЕ  
	|	ВзаиморасчетыСДепонентами.Активность И
	|	ВзаиморасчетыСДепонентами.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ВзаиморасчетыСДепонентами.ВидДвижения = &Расход
	|	И НЕ (ВзаиморасчетыСДепонентами.Регистратор ССЫЛКА Документ.ДепонированиеЗаработнойПлаты)
	|	" + ?(РНУсловиеТекст <> "", " И " + РНУсловиеТекст, "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСДепонентами.Организация,
	|	ВзаиморасчетыСДепонентами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСДепонентами.Период, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСДепонентами.СпособВыплаты = &ЧерезКассу
	|			ТОГДА ВЫБОР
	|						КОГДА ВзаиморасчетыСДепонентами.ВидСтроки = &Возврат
	|							ТОГДА ""Возвращено в кассу""
	|						ИНАЧЕ ""Выплачено из кассы""
	|				  КОНЕЦ
	|		КОГДА ВзаиморасчетыСДепонентами.СпособВыплаты = &ЧерезБанк
	|			ТОГДА ""Перечислено в банк"" // считаем, что возвраты из банка работнику показывать не нужно, т.к. это взаимоотношения организации и банка
	|		ИНАЧЕ ""Способ выплаты не указан""
	|	КОНЕЦ";
	Если  ПараметрыОтчета.ДетализацияВыплаты Тогда
		ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + ",
		|	ВзаиморасчетыСДепонентами.Регистратор";
	КонецЕсли;
	ТекстЗапросПоВзаиморасчетам = ТекстЗапросПоВзаиморасчетам + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Организация КАК Организация,
	|	ВзаиморасчетыСДепонентами.ФизЛицо КАК ФизЛицо,
	|	МесяцыОтчета.ПериодРегистрации,
	|	NULL КАК Регистратор,
	|	""Сальдо"" КАК Вид,
	|	0 КАК Удержания,
	|	СУММА(ВЫБОР 
	|			КОГДА ВзаиморасчетыСДепонентами.Период < МесяцыОтчета.ПериодРегистрации 
	|				ТОГДА ВзаиморасчетыСДепонентами.СуммаВзаиморасчетов 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ) КАК СуммаВзаиморасчетовНачальныйОстаток,
	|	СУММА(ВЫБОР 
	|			КОГДА ВзаиморасчетыСДепонентами.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|				ТОГДА ВзаиморасчетыСДепонентами.СуммаВзаиморасчетов 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ) КАК СуммаВзаиморасчетовКонечныйОстаток
	|ИЗ
	|	ВТ_МесяцыОтчета КАК МесяцыОтчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
	|		ПО ВзаиморасчетыСДепонентами.Период <= МесяцыОтчета.ДатаКонцаМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСДепонентами.Организация,
	|	ВзаиморасчетыСДепонентами.ФизЛицо,
	|	МесяцыОтчета.ПериодРегистрации
	|;";

	// Основной запрос

	ТекстЗапроса = ТекстЗапроса + ТекстЗапросПоВзаиморасчетам +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   НачисленияУдержания.ВидДвижения,
	|	ВЫБОР 
	|		КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  
	|			ТОГДА НачисленияУдержания.ФизЛицо.Наименование 
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество 
	|	КОНЕЦ КАК ФИОФизлица,
	|   НачисленияУдержания.Регистратор КАК Регистратор,
	|   НачисленияУдержания.Регистратор.Номер КАК НомерРегистратора,
	|   НачисленияУдержания.Регистратор.Дата КАК ДатаРегистратора,
	|	НачисленияУдержания.ФизЛицо КАК ФизЛицо,
	|   НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.Организация.Наименование КАК ОрганизацияНаименование,
	|	НачисленияУдержания.ПериодРегистрации КАК ПериодРегистрации, 
	|	НачисленияУдержания.ВидРасчета,
	|	НачисленияУдержания.ПорядокВидаРасчета,
	|	НачисленияУдержания.НомерСтроки КАК НомерСтроки,
	|	НачисленияУдержания.ПериодДействияНачало,
	|	НачисленияУдержания.ПериодДействияКонец,
	|	НачисленияУдержания.ОтработаноДней КАК ОтработаноДней,
	|	НачисленияУдержания.ОтработаноЧасов КАК ОтработаноЧасов,
	|	НачисленияУдержания.УчитываемыеДни КАК УчитываемыеДни,
	|	НачисленияУдержания.УчитываемыеЧасы КАК УчитываемыеЧасы,
	|	НачисленияУдержания.Начисления КАК Начисления,
	|	НачисленияУдержания.Удержания КАК Удержания,
	|	НачисленияУдержания.ПримененнаяКорректировка,	
	|	НачисленияУдержания.ВычетСНачалаГода,
	|	НачисленияУдержания.НеОблагаемыеИПНДоходыСНачалаГода,
	|	НачисленияУдержания.ДоходыСНачалаГода,
	|	НачисленияУдержания.ИПНСНачалаГода,
	|	НачисленияУдержания.ОПВСНачалаГода,
	|	НачисленияУдержания.ОППВСНачалаГода,
	|	НачисленияУдержания.ОППВЗаМесяц,
	|	НачисленияУдержания.ОПВРСНачалаГода,
	|	НачисленияУдержания.ОПВРЗаМесяц,
	|	НачисленияУдержания.ООСМССНачалаГода,
	|	НачисленияУдержания.ООСМСЗаМесяц,
	|	НачисленияУдержания.ВОСМССНачалаГода,
	|	НачисленияУдержания.ЕПЗаМесяц КАК ЕПЗаМесяц,
	|	НачисленияУдержания.ЕПЗаСчетРаботодателя КАК ЕПЗаСчетРаботодателя,
	|	НачисленияУдержания.ЕПЗаСчетРаботника КАК ЕПЗаСчетРаботника,
	|	" + СтрЗаменить(ТекстУровниПодразделений, "<<ПодразделениеОрганизации>>", "РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации") + " КАК ПодразделениеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.Должность.Наименование КАК Должность,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер, 0) КАК Размер,
	|	НачисленияУдержания.СуммаВзаиморасчетовНачальныйОстаток,
	|	НачисленияУдержания.СуммаВзаиморасчетовКонечныйОстаток,
	|	ВЫБОР КОГДА НачисленияУдержания.ВидДвижения = 1 И НачисленияУдержания.Начисления <> 0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИмеютсяНачисления,
	|	ВЫБОР КОГДА НачисленияУдержания.ВидДвижения = 2 И НачисленияУдержания.Удержания <> 0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИмеютсяУдержания,
	|	ВЫБОР КОГДА НачисленияУдержания.ВидДвижения = 3 И НачисленияУдержания.Начисления <> 0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИмеютсяДоходыВНатуральнойФорме,
	|	ВЫБОР КОГДА НачисленияУдержания.ВидДвижения = 4 И НачисленияУдержания.Удержания <> 0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИмеютсяВыплаты,
	|	ВЫБОР КОГДА НачисленияУдержания.ВидДвижения = 5 И НачисленияУдержания.ВычетСНачалаГода <> 0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИмеютсяВычетИПН,
	|	ВЫБОР КОГДА НачисленияУдержания.ВидДвижения = 5 И НачисленияУдержания.ПримененнаяКорректировка <> 0 ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИмеетсяКорректировкаИПН
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК ВидДвижения,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.Ссылка
	|		КОНЕЦ КАК Регистратор,
	|		ВЫБОР 
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ПодразделениеОрганизации.Владелец  ЕСТЬ NULL 
	|				ТОГДА &парамПустаяОрганизация 
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.ПодразделениеОрганизации.Владелец 
	|		КОНЕЦ КАК Организация,
	|		ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.Сотрудник,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|			КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|				ТОГДА """"
	|			ИНАЧЕ "" (по внутр. совмест-ву)""
	|		КОНЕЦ КАК ВидРасчета,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЗачетОтработанногоВремени 
	|				ТОГДА ""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование
	|			ИНАЧЕ ""Б"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование
	|		КОНЕЦ КАК ПорядокВидаРасчета,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		МИНИМУМ(ОсновныеНачисленияРаботниковОрганизации.ДатаНачала) КАК ПериодДействияНачало,
	|		МАКСИМУМ(ОсновныеНачисленияРаботниковОрганизации.ДатаОкончания) КАК ПериодДействияКонец,
	|		СУММА(ВЫБОР
	|				КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЗачетОтработанногоВремени
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней
	|				ИНАЧЕ 0
	|			  КОНЕЦ) КАК ОтработаноДней,
	|		СУММА(ВЫБОР                                                        
	|				КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЗачетОтработанногоВремени
	|					ТОГДА ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов 
	|				ИНАЧЕ 0
	|			  КОНЕЦ) КАК ОтработаноЧасов,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней) КАК УчитываемыеДни,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов) КАК УчитываемыеЧасы,
	|		СУММА(ОсновныеНачисленияРаботниковОрганизации.Результат) КАК Начисления,
	|		0 КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц, 
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		0 КАК ЕПЗаМесяц,
	|		0 КАК ЕПЗаСчетРаботодателя,
	|		0 КАК ЕПЗаСчетРаботника,
	|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизации
	|
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизации.Ссылка.Проведен
	|		И ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И ОсновныеНачисленияРаботниковОрганизации.ПодразделениеОрганизации.Владелец " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И ОсновныеНачисленияРаботниковОрганизации.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.Ссылка
	|		КОНЕЦ,
	|		ВЫБОР 
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ПодразделениеОрганизации.Владелец  ЕСТЬ NULL 
	|				ТОГДА &парамПустаяОрганизация 
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.ПодразделениеОрганизации.Владелец 
	|		КОНЕЦ,
	|		ОсновныеНачисленияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ФизЛицо,
	|		ОсновныеНачисленияРаботниковОрганизации.Сотрудник,
	|		ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование + ВЫБОР
	|			КОГДА ЕСТЬNULL(ОсновныеНачисленияРаботниковОрганизации.Сотрудник.ВидЗанятости, &ЗанятостьНеУказана) <> &ВнутреннееСовместительство
	|				ТОГДА """"
	|			ИНАЧЕ "" (по внутр. совмест-ву)""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ЗачетОтработанногоВремени 
	|				ТОГДА ""А"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование
	|			ИНАЧЕ ""Б"" + ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.Наименование
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ ОсновныеНачисленияРаботниковОрганизации.НомерСтроки
	|		КОНЕЦ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		2 КАК ВидДвижения,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Ссылка
	|		КОНЕЦ КАК Регистратор,
	|		УдержанияРаботниковОрганизации.Ссылка.Организация КАК Организация,
	|		УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|		УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		NULL КАК Сотрудник,
	|		УдержанияРаботниковОрганизации.ВидРасчета.Наименование + 
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|					И УдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование <> """"
	|				ТОГДА "" ("" + УдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование + "")""
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК ВидРасчета,
	|		""В"" + УдержанияРаботниковОрганизации.ВидРасчета.Наименование КАК ПорядокВидаРасчета,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
	|		0 КАК ОтработаноДней,
	|		0 КАК ОтработаноЧасов,
	|		0 КАК УчитываемыеДни,
	|		0 КАК УчитываемыеЧасы,
	|		0 КАК Начисления,
	|		СУММА(УдержанияРаботниковОрганизации.Результат) КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц,
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		0 КАК ЕПЗаМесяц,
	|		0 КАК ЕПЗаСчетРаботодателя,
	|		0 КАК ЕПЗаСчетРаботника,
	|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		Документ.РасчетУдержанийРаботниковОрганизаций.Удержания КАК УдержанияРаботниковОрганизации
	|
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.Ссылка.Проведен
	|		И УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И УдержанияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И УдержанияРаботниковОрганизации.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Ссылка
	|		КОНЕЦ,
	|		УдержанияРаботниковОрганизации.Ссылка.Организация,
	|		УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|		УдержанияРаботниковОрганизации.ФизЛицо,
	|		УдержанияРаботниковОрганизации.ВидРасчета.Наименование + 
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|					И УдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование <> """"
	|				ТОГДА "" ("" + УдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование + "")""
	|			ИНАЧЕ """"
	|		КОНЕЦ,
	|		""В"" + УдержанияРаботниковОрганизации.ВидРасчета.Наименование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.НомерСтроки
	|		КОНЕЦ,
	|		КОНЕЦПЕРИОДА(УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации, МЕСЯЦ)
    |
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		2 КАК ВидДвижения,
	|		ВЫБОР
	|			КОГДА РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ РасчетЕПУдержанияРаботниковОрганизации.Ссылка
	|		КОНЕЦ КАК Регистратор,
	|		РасчетЕПУдержанияРаботниковОрганизации.Ссылка.Организация КАК Организация,
	|		РасчетЕПУдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|		РасчетЕПУдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		NULL КАК Сотрудник,
	|		РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.Наименование + 
	|		ВЫБОР
	|			КОГДА РасчетЕПУдержанияРаботниковОрганизации.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|					И РасчетЕПУдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование <> """"
	|				ТОГДА "" ("" + РасчетЕПУдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование + "")""
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК ВидРасчета,
	|		""В"" + РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.Наименование КАК ПорядокВидаРасчета,
	|		ВЫБОР
	|			КОГДА РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ РасчетЕПУдержанияРаботниковОрганизации.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		РасчетЕПУдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(РасчетЕПУдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
	|		0 КАК ОтработаноДней,
	|		0 КАК ОтработаноЧасов,
	|		0 КАК УчитываемыеДни,
	|		0 КАК УчитываемыеЧасы,
	|		0 КАК Начисления,
	|		СУММА(РасчетЕПУдержанияРаботниковОрганизации.Результат) КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц,
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		0 КАК ЕПЗаМесяц,
	|		0 КАК ЕПЗаСчетРаботодателя,
	|		0 КАК ЕПЗаСчетРаботника,
	|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		Документ.РасчетЕдиногоПлатежа.Удержания КАК РасчетЕПУдержанияРаботниковОрганизации
	|
	|	ГДЕ
	|		РасчетЕПУдержанияРаботниковОрганизации.Ссылка.Проведен
	|		И РасчетЕПУдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
    	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И РасчетЕПУдержанияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И РасчетЕПУдержанияРаботниковОрганизации.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ РасчетЕПУдержанияРаботниковОрганизации.Ссылка
	|		КОНЕЦ,
	|		РасчетЕПУдержанияРаботниковОрганизации.Ссылка.Организация,
	|		РасчетЕПУдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|		РасчетЕПУдержанияРаботниковОрганизации.ФизЛицо,
	|		РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.Наименование + 
	|		ВЫБОР
	|			КОГДА РасчетЕПУдержанияРаботниковОрганизации.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|					И РасчетЕПУдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование <> """"
	|				ТОГДА "" ("" + РасчетЕПУдержанияРаботниковОрганизации.ДокументОснование.Получатель.Наименование + "")""
	|			ИНАЧЕ """"
	|		КОНЕЦ,
	|		""В"" + РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.Наименование,
	|		ВЫБОР
	|			КОГДА РасчетЕПУдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ РасчетЕПУдержанияРаботниковОрганизации.НомерСтроки
	|		КОНЕЦ,
	|		КОНЕЦПЕРИОДА(РасчетЕПУдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации, МЕСЯЦ)
    |
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		2 КАК ВидДвижения,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Ссылка 
	|		КОНЕЦ КАК Регистратор,
	|		УдержанияРаботниковОрганизации.Ссылка.Организация КАК Организация,
	|		УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	|		УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|		NULL КАК Сотрудник,
	|		УдержанияРаботниковОрганизации.ВидРасчета.Наименование КАК ВидРасчета,
	|		""В"" + УдержанияРаботниковОрганизации.ВидРасчета.Наименование КАК ПорядокВидаРасчета,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.НомерСтроки 
	|		КОНЕЦ КАК НомерСтроки,
	|		УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
	|		0 КАК ОтработаноДней,
	|		0 КАК ОтработаноЧасов,
	|		0 КАК УчитываемыеДни,
	|		0 КАК УчитываемыеЧасы,
	|		0 КАК Начисления,
	|		СУММА(УдержанияРаботниковОрганизации.Результат) КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц, 
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		0 КАК ЕПЗаМесяц,
	|		0 КАК ЕПЗаСчетРаботодателя,
	|		0 КАК ЕПЗаСчетРаботника,
	|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.Удержания КАК УдержанияРаботниковОрганизации
	|
	|	ГДЕ
	|		УдержанияРаботниковОрганизации.Ссылка.Проведен
	|		И УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И УдержанияРаботниковОрганизации.Ссылка.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И УдержанияРаботниковОрганизации.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.Ссылка 
	|		КОНЕЦ,
	|		УдержанияРаботниковОрганизации.Ссылка.Организация,
	|		УдержанияРаботниковОрганизации.ФизЛицо,
	|		УдержанияРаботниковОрганизации.ВидРасчета.Наименование,
	|		""В"" + УдержанияРаботниковОрганизации.ВидРасчета.Наименование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.ОбъединятьВРасчетномЛистке
	|				ТОГДА NULL
	|			ИНАЧЕ УдержанияРаботниковОрганизации.НомерСтроки 
	|		КОНЕЦ,
	|		УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации,
	|		КОНЕЦПЕРИОДА(УдержанияРаботниковОрганизации.Ссылка.ПериодРегистрации, МЕСЯЦ)";
	
	Если ПараметрыОтчета.ВыводитьНалоги Тогда // выбираем налоги и взносы с начала года
	
		ТекстЗапроса = ТекстЗапроса + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИсчислениеНалогов.Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ИПН исчисленный"" КАК ВидРасчета,
		|		""Г"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		ВЫБОР
		|			КОГДА ИПНРасчетыСБюджетом.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете = ЛОЖЬ
		|					И ИсчислениеНалогов.Организация = ИПНРасчетыСБюджетом.Организация
		|				ТОГДА НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ПериодРегистрации
		|		КОНЕЦ КАК ПериодДействияНачало,
		|		ВЫБОР
		|			КОГДА ИПНРасчетыСБюджетом.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете = ЛОЖЬ
		|					И ИсчислениеНалогов.Организация = ИПНРасчетыСБюджетом.Организация
		|				ТОГДА КОНЕЦПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ДатаКонцаМесяца 
		|		КОНЕЦ КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНРасчетыСБюджетом.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|						И ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете = ЛОЖЬ
		|						И ИсчислениеНалогов.Организация = ИПНРасчетыСБюджетом.Организация // сколько налога за текущий месяц в текущей организации
		|					ТОГДА ИПНРасчетыСБюджетом.Налог
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ИПНРасчетыСБюджетом.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНРасчетыСБюджетом.Налог
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ИПНРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНРасчетыСБюджетом.Налог
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета      
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|			ПО ИСТИНА
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
		|			ПО ИсчислениеНалогов.Налогоплательщик = ИПНРасчетыСБюджетом.Налогоплательщик // для отображения с начала года берем по налогоплательщику
		|				И ((ИПНРасчетыСБюджетом.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ИПНРасчетыСБюджетом.Период <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ИПНРасчетыСБюджетом.МесяцНалоговогоПериода <= МесяцыОтчета.ДатаКонцаМесяца
		|							И ИПНРасчетыСБюджетом.Период <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ИПНРасчетыСБюджетом.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период
		|	
		|	ГДЕ
		|		ИПНРасчетыСБюджетом.Активность И
		|		ИПНРасчетыСБюджетом.ВидДвижения = &Приход И
		|		ИПНРасчетыСБюджетом.ВидСтроки = &ВидСтроки
		|		И ИПНРасчетыСБюджетом.ФизЛицо Ссылка Справочник.ФизическиеЛица";
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ИПНРасчетыСБюджетом.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		ВЫБОР
		|			КОГДА ИПНРасчетыСБюджетом.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете = ЛОЖЬ
		|					И ИсчислениеНалогов.Организация = ИПНРасчетыСБюджетом.Организация
		|				ТОГДА НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ПериодРегистрации
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ИПНРасчетыСБюджетом.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете = ЛОЖЬ
		|					И ИсчислениеНалогов.Организация = ИПНРасчетыСБюджетом.Организация
		|				ТОГДА КОНЕЦПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ДатаКонцаМесяца 
		|		КОНЕЦ,
		|		ИсчислениеНалогов.Организация,
		|		ИПНРасчетыСБюджетом.ФизЛицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИсчислениеНалогов.Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ОПВ исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		ВЫБОР
		|			КОГДА ОПВРасчетыСФондами.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИсчислениеНалогов.Организация = ОПВРасчетыСФондами.Организация
		|				ТОГДА НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ПериодРегистрации
		|		КОНЕЦ КАК ПериодДействияНачало,
		|		ВЫБОР
		|			КОГДА ОПВРасчетыСФондами.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИсчислениеНалогов.Организация = ОПВРасчетыСФондами.Организация
		|				ТОГДА КОНЕЦПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ДатаКонцаМесяца 
		|		КОНЕЦ КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ВЫБОР
		|				КОГДА ОПВРасчетыСФондами.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|						И ИсчислениеНалогов.Организация = ОПВРасчетыСФондами.Организация
		|					ТОГДА ОПВРасчетыСФондами.Взнос
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ОПВРасчетыСФондами.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ОПВРасчетыСФондами.Взнос
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ОПВРасчетыСФондами.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ОПВРасчетыСФондами.Взнос
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|			ПО ИСТИНА
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
		|			ПО ИсчислениеНалогов.Налогоплательщик = ОПВРасчетыСФондами.Налогоплательщик // для отображения с начала года берем по налогоплательщику
		|				И ((ОПВРасчетыСФондами.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ОПВРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ОПВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= МесяцыОтчета.ДатаКонцаМесяца
		|							И ОПВРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ОПВРасчетыСФондами.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период	
		|	
		|	ГДЕ
		|		ОПВРасчетыСФондами.Активность И
		|		ОПВРасчетыСФондами.ВидДвижения = &Приход И
		|		ОПВРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ОПВРасчетыСФондами.ВидПлатежа = &парамНалогВзнос И
		|		ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица";
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОПВРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		          	
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		МесяцыОтчета.ДатаКонцаМесяца,
		|		ВЫБОР
		|			КОГДА ОПВРасчетыСФондами.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИсчислениеНалогов.Организация = ОПВРасчетыСФондами.Организация
		|				ТОГДА НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ПериодРегистрации
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ОПВРасчетыСФондами.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					И ИсчислениеНалогов.Организация = ОПВРасчетыСФондами.Организация
		|				ТОГДА КОНЕЦПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|			ИНАЧЕ МесяцыОтчета.ДатаКонцаМесяца 
		|		КОНЕЦ,
		|		ИсчислениеНалогов.Организация,
		|		ОПВРасчетыСФондами.ФизЛицо";
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИсчислениеНалогов.Организация КАК Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ООСМС исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		0 КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ООСМСРасчетыСФондами.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ООСМСРасчетыСФондами.Отчисление
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ООСМСРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ООСМСРасчетыСФондами.Отчисление
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ООСМССНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, МЕСЯЦ)
		|					ТОГДА ООСМСРасчетыСФондами.Отчисление
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, МЕСЯЦ)
		|					ТОГДА ООСМСРасчетыСФондами.Отчисление
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|			ПО ИСТИНА
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
		|			ПО ИсчислениеНалогов.Налогоплательщик = ООСМСРасчетыСФондами.Налогоплательщик // для отображения с начала года берем по налогоплательщику
		|				И ((ООСМСРасчетыСФондами.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ООСМСРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ООСМСРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ООСМСРасчетыСФондами.МесяцНалоговогоПериода <= МесяцыОтчета.ДатаКонцаМесяца
		|							И ООСМСРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ООСМСРасчетыСФондами.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период	
		|		
		|	ГДЕ  
		|	    ООСМСРасчетыСФондами.Активность И
		|		ООСМСРасчетыСФондами.ВидДвижения = &Приход И
		|		ООСМСРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ООСМСРасчетыСФондами.ВидПлатежа = &парамНалогВзнос";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ООСМСРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ООСМСРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИсчислениеНалогов.Организация,
		|		ООСМСРасчетыСФондами.ФизЛицо ";
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИсчислениеНалогов.Организация КАК Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ВОСМС исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ВЫБОР
		|				КОГДА ВОСМСРасчетыСФондами.Период МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|						И ИсчислениеНалогов.Организация = ВОСМСРасчетыСФондами.Организация
		|					ТОГДА ВОСМСРасчетыСФондами.Взнос
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц, 
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ВОСМСРасчетыСФондами.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ВОСМСРасчетыСФондами.Взнос
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ВОСМСРасчетыСФондами.Взнос
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|			ПО ИСТИНА
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами
		|			ПО ИсчислениеНалогов.Налогоплательщик = ВОСМСРасчетыСФондами.Налогоплательщик // для отображения с начала года берем по налогоплательщику
		|				И ((ВОСМСРасчетыСФондами.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ВОСМСРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода <= МесяцыОтчета.ДатаКонцаМесяца
		|							И ВОСМСРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ВОСМСРасчетыСФондами.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период	
		|		
		|	ГДЕ 
		|	    ВОСМСРасчетыСФондами.Активность И
		|		ВОСМСРасчетыСФондами.ВидДвижения = &Приход И
		|		ВОСМСРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ВОСМСРасчетыСФондами.ВидПлатежа = &парамНалогВзнос
		|		И ВОСМСРасчетыСФондами.ФизЛицо Ссылка Справочник.ФизическиеЛица";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ВОСМСРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ВОСМСРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИсчислениеНалогов.Организация,
		|		ВОСМСРасчетыСФондами.ФизЛицо ";

		
	Иначе // к Если ВыводитьНалоги Тогда (т.е. не выводить) - тогда налоги и взносы выводить строго за выбранный период без накопления с начала года
	
		ТекстЗапроса = ТекстЗапроса + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИПНРасчетыСБюджетом.Организация,
		|		НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ИПН исчисленный"" КАК ВидРасчета,
		|		""Г"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ИПНРасчетыСБюджетом.Налог) КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
		|				
		|	ГДЕ
		|	    ИПНРасчетыСБюджетом.Активность И
		|		ИПНРасчетыСБюджетом.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		ИПНРасчетыСБюджетом.ВидДвижения = &Приход И
		|		ИПНРасчетыСБюджетом.ВидСтроки = &ВидСтроки И
		|		ИПНРасчетыСБюджетом.ФизЛицо Ссылка Справочник.ФизическиеЛица";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ИПНРасчетыСБюджетом.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ИПНРасчетыСБюджетом.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.Период, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНРасчетыСБюджетом.Организация,
		|		ИПНРасчетыСБюджетом.ФизЛицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ОПВРасчетыСФондами.Организация КАК Организация,
		|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ОПВ исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ОПВРасчетыСФондами.Взнос) КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц, 
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
		|		
		|	ГДЕ
		|		ОПВРасчетыСФондами.Активность И
		|		ОПВРасчетыСФондами.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		ОПВРасчетыСФондами.ВидДвижения = &Приход И
		|		ОПВРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ОПВРасчетыСФондами.ВидПлатежа = &парамНалогВзнос И
		|		ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОПВРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОПВРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		          	
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.Период, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ОПВРасчетыСФондами.Организация,
		|		ОПВРасчетыСФондами.ФизЛицо
		|
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ООСМСРасчетыСФондами.Организация КАК Организация,
		|		НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ООСМС исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		0 КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
		|		
		|	ГДЕ 
		|		ООСМСРасчетыСФондами.Активность И
		|		ООСМСРасчетыСФондами.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		ООСМСРасчетыСФондами.ВидДвижения = &Приход И
		|		ООСМСРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ООСМСРасчетыСФондами.ВидПлатежа = &парамНалогВзнос";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ООСМСРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ООСМСРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.Период, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ООСМСРасчетыСФондами.Организация,
		|		ООСМСРасчетыСФондами.ФизЛицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ВОСМСРасчетыСФондами.Организация КАК Организация,
		|		НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ВОСМС исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ВОСМСРасчетыСФондами.Взнос) КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами
		|		
		|	ГДЕ
		|	    ВОСМСРасчетыСФондами.Активность И
		|		ВОСМСРасчетыСФондами.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		ВОСМСРасчетыСФондами.ВидДвижения = &Приход И
		|		ВОСМСРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ВОСМСРасчетыСФондами.ВидПлатежа = &парамНалогВзнос И
		|		ВОСМСРасчетыСФондами.ФизЛицо Ссылка Справочник.ФизическиеЛица";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ВОСМСРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ВОСМСРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.Период, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ВОСМСРасчетыСФондами.Организация,
		|		ВОСМСРасчетыСФондами.ФизЛицо ";

	КонецЕсли;
		
	Если ПараметрыОтчета.ВыводитьНалоги Тогда // соберем доходы с начала года
		
		ТекстЗапроса = ТекстЗапроса + "	
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		МИНИМУМ(ВЫБОР
		|					КОГДА ИПНСведенияОДоходах.ЯвляетсяПрочимДоходом
		|							И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|						ТОГДА 3
		|					ИНАЧЕ 6
		|				КОНЕЦ) КАК ВидДвижения,
		|		NULL КАК Регистратор,
		|		ИПНСведенияОДоходах.Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		ИПНСведенияОДоходах.ВидРасчета,
		|		ИПНСведенияОДоходах.ВидРасчетаНаименование КАК ПорядокВидаРасчета,
		|		NULL КАК НомерСтроки,
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ИПНСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				 КОНЕЦ, МесяцыОтчета.ПериодРегистрации) КАК ПериодДействияНачало,
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ИПНСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА КОНЕЦПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				  КОНЕЦ, МесяцыОтчета.ДатаКонцаМесяца) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода
		|       		ИНАЧЕ 0
		|			КОНЕЦ) КАК Начисления,
		|		0 КАК Удержания,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ПримененныйВычет + ВЫБОР
		|																	КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН
		|																		ТОГДА ИПНСведенияОДоходах.СуммаВычета
		|																	ИНАЧЕ 0
		|																 КОНЕЦ
		|
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ПримененныйВычет + ВЫБОР
		|																	КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН
		|																		ТОГДА ИПНСведенияОДоходах.СуммаВычета
		|																	ИНАЧЕ 0
		|																 КОНЕЦ
		|
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ПримененнаяЛьгота + ВЫБОР
		|																	КОГДА ИПНСведенияОДоходах.СпособНалогообложения = &НеОблагаетсяЦеликом
		|																		ТОГДА ИПНСведенияОДоходах.СуммаДохода
		|																	КОГДА НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|																		ТОГДА ИПНСведенияОДоходах.СуммаВычета
		|																	ИНАЧЕ 0
		|																  КОНЕЦ
		|
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ПримененнаяЛьгота + ВЫБОР
		|																	КОГДА ИПНСведенияОДоходах.СпособНалогообложения = &НеОблагаетсяЦеликом
		|																		ТОГДА ИПНСведенияОДоходах.СуммаДохода
		|																	КОГДА НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|																		ТОГДА ИПНСведенияОДоходах.СуммаВычета
		|																	ИНАЧЕ 0
		|																  КОНЕЦ
		|
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода
		|
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ДоходыСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ИПН
		|
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ИПН
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ИПНСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ОПВ
		|
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ИПНСведенияОДоходах.ОПВ
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета                                                                    
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|			ПО ((ИПНСведенияОДоходах.ПериодРегистрации >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ИПНСведенияОДоходах.ПериодРегистрации <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ИПНСведенияОДоходах.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ИПНСведенияОДоходах.Период <= МесяцыОтчета.ДатаКонцаМесяца 
		|							И ИПНСведенияОДоходах.ПериодРегистрации <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ИПНСведенияОДоходах.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период
		|
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		МесяцыОтчета.ДатаКонцаМесяца,
		|		ИПНСведенияОДоходах.Организация,
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.ВидРасчета,
		|		ИПНСведенияОДоходах.ВидРасчетаНаименование,
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ИПНСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				 КОНЕЦ, МесяцыОтчета.ПериодРегистрации),
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ИПНСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА КОНЕЦПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				  КОНЕЦ, МесяцыОтчета.ДатаКонцаМесяца)
		|	
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		МИНИМУМ(ВЫБОР
		|					КОГДА ЕПСведенияОДоходах.ЯвляетсяПрочимДоходом
		|							И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|						ТОГДА 3
		|					ИНАЧЕ 6
		|				КОНЕЦ) КАК ВидДвижения,
		|		NULL КАК Регистратор,
		|		ЕПСведенияОДоходах.Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ЕПСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		ЕПСведенияОДоходах.ВидРасчета,
		|		ЕПСведенияОДоходах.ВидРасчетаНаименование КАК ПорядокВидаРасчета,
		|		NULL КАК НомерСтроки,
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ЕПСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА НАЧАЛОПЕРИОДА(ЕПСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				 КОНЕЦ, МесяцыОтчета.ПериодРегистрации) КАК ПериодДействияНачало,
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ЕПСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА КОНЕЦПЕРИОДА(ЕПСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				  КОНЕЦ, МесяцыОтчета.ДатаКонцаМесяца) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		СУММА(ВЫБОР
		|				КОГДА ЕПСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ЕПСведенияОДоходах.СуммаДохода
		|       		ИНАЧЕ 0
		|			КОНЕЦ) КАК Начисления,
		|		0 КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ЕПСведенияОДоходах.СуммаДохода
		|
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ)
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ЕПСведенияОДоходах.СуммаДохода
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц, 
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета                                                                    
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЕПСведенияОДоходах КАК ЕПСведенияОДоходах
		|			ПО ((ЕПСведенияОДоходах.ПериодРегистрации >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ЕПСведенияОДоходах.ПериодРегистрации <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ЕПСведенияОДоходах.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ЕПСведенияОДоходах.Период <= МесяцыОтчета.ДатаКонцаМесяца 
		|							И ЕПСведенияОДоходах.ПериодРегистрации <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ЕПСведенияОДоходах.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период
		|
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		МесяцыОтчета.ДатаКонцаМесяца,
		|		ЕПСведенияОДоходах.Организация,
		|		ЕПСведенияОДоходах.ФизЛицо,
		|		ЕПСведенияОДоходах.ВидРасчета,
		|		ЕПСведенияОДоходах.ВидРасчетаНаименование,
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ЕПСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА НАЧАЛОПЕРИОДА(ЕПСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				 КОНЕЦ, МесяцыОтчета.ПериодРегистрации),
		|		ЕСТЬNULL(ВЫБОР
		|					КОГДА ЕПСведенияОДоходах.ЯвляетсяПрочимДоходом
		|						И ЕПСведенияОДоходах.ПериодРегистрации МЕЖДУ МесяцыОтчета.ПериодРегистрации И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА КОНЕЦПЕРИОДА(ЕПСведенияОДоходах.Период, МЕСЯЦ)
		|					ИНАЧЕ NULL
		|				  КОНЕЦ, МесяцыОтчета.ДатаКонцаМесяца)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИсчислениеНалогов.Организация КАК Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ОППВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ОППВ исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		0 КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ОППВРасчетыСФондами.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ОППВРасчетыСФондами.Взнос
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ОППВРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ОППВРасчетыСФондами.Взнос
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ОППВСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, МЕСЯЦ)
		|					ТОГДА ОППВРасчетыСФондами.Взнос
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, МЕСЯЦ)
		|					ТОГДА ОППВРасчетыСФондами.Взнос
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|			ПО ИСТИНА
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОППВРасчетыСФондами КАК ОППВРасчетыСФондами
		|			ПО ИсчислениеНалогов.Налогоплательщик = ОППВРасчетыСФондами.Налогоплательщик // для отображения с начала года берем по налогоплательщику
		|				И ((ОППВРасчетыСФондами.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ОППВРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ОППВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ОППВРасчетыСФондами.МесяцНалоговогоПериода <= МесяцыОтчета.ДатаКонцаМесяца
		|							И ОППВРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ОППВРасчетыСФондами.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период	
		|		
		|	ГДЕ 
		|	    ОППВРасчетыСФондами.Активность И
		|		ОППВРасчетыСФондами.ВидДвижения = &Приход И
		|		ОППВРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ОППВРасчетыСФондами.ВидПлатежа = &парамНалогВзнос";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОППВРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОППВРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИсчислениеНалогов.Организация,
		|		ОППВРасчетыСФондами.ФизЛицо ";
		
				ТекстЗапроса = ТекстЗапроса + "	
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ИсчислениеНалогов.Организация КАК Организация,
		|		МесяцыОтчета.ПериодРегистрации КАК ПериодРегистрации,
		|		ОПВРРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""ОПВР исчисленные"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		0 КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППРСНачалаГода,
		|		0 КАК ОППРЗаМесяц,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ОПВРРасчетыСФондами.Период МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ОПВРРасчетыСФондами.Взнос
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И ОПВРРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД) И МесяцыОтчета.ДатаКонцаМесяца
		|					ТОГДА ОПВРРасчетыСФондами.Взнос
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ОПВРСНачалаГода,
		|		СУММА(ВЫБОР
		|				КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, МЕСЯЦ)
		|					ТОГДА ОПВРРасчетыСФондами.Взнос
		|	
		|				КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) 
		|						И НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, МЕСЯЦ)
		|					ТОГДА ОПВРРасчетыСФондами.Взнос
		|
		|				ИНАЧЕ 0
		|			  КОНЕЦ) КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_МесяцыОтчета КАК МесяцыОтчета
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Налогоплательщик КАК ИсчислениеНалогов
		|			ПО ИСТИНА
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОПВРРасчетыСФондами КАК ОПВРРасчетыСФондами
		|			ПО ИсчислениеНалогов.Налогоплательщик = ОПВРРасчетыСФондами.Налогоплательщик // для отображения с начала года берем по налогоплательщику
		|				И ((ОПВРРасчетыСФондами.Период >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|						И ОПВРРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца)
		|					ИЛИ (ОПВРРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(МесяцыОтчета.ПериодРегистрации, ГОД)
		|							И ОПВРРасчетыСФондами.МесяцНалоговогоПериода <= МесяцыОтчета.ДатаКонцаМесяца
		|							И ОПВРРасчетыСФондами.Период <= МесяцыОтчета.ДатаКонцаМесяца))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяДатаУчетнойПолитики КАК ПоследняяДатаУчетнойПолитики
		|			ПО МесяцыОтчета.ПериодРегистрации = ПоследняяДатаУчетнойПолитики.ПериодРегистрации
		|				И ОПВРРасчетыСФондами.Организация = ПоследняяДатаУчетнойПолитики.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНУ
		|			ПО ПоследняяДатаУчетнойПолитики.Организация = УчетнаяПолитикаНУ.Организация
		|				И ПоследняяДатаУчетнойПолитики.Период = УчетнаяПолитикаНУ.Период	
		|		
		|	ГДЕ
		|		ОПВРРасчетыСФондами.Активность И
		|		ОПВРРасчетыСФондами.ВидДвижения = &Приход И
		|		ОПВРРасчетыСФондами.ВидСтроки = &ВидСтроки И
		|		ОПВРРасчетыСФондами.ВидПлатежа = &парамНалогВзнос";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОПВРРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ОПВРРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		МесяцыОтчета.ПериодРегистрации,
		|		НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИсчислениеНалогов.Организация,
		|		ОПВРРасчетыСФондами.ФизЛицо ";
		

	КонецЕсли;
	
	//Вычет ИПН 2018
	Если ПараметрыОтчета.ВыводитьПримененныйВычет Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       5,
		| 		NULL КАК Регистратор,
		|		СведенияОбИсчисленииВычетовИПН.Организация,
		|		НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПН.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|		СведенияОбИсчисленииВычетовИПН.ФизическоеЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		СведенияОбИсчисленииВычетовИПН.ВидВычета КАК ВидРасчета,
		|		СведенияОбИсчисленииВычетовИПН.ВидВычета.Приоритет КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПН.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(СведенияОбИсчисленииВычетовИПН.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		0 КАК Удержания,
		|		Сумма(СведенияОбИсчисленииВычетовИПН.ПримененныйВычет) КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.СведенияОбИсчисленииВычетовИПН КАК СведенияОбИсчисленииВычетовИПН
		|				
		|	ГДЕ
		|		СведенияОбИсчисленииВычетовИПН.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		СведенияОбИсчисленииВычетовИПН.ФизическоеЛицо Ссылка Справочник.ФизическиеЛица";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И СведенияОбИсчисленииВычетовИПН.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И СведенияОбИсчисленииВычетовИПН.ФизическоеЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПН.ПериодРегистрации, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПН.ПериодРегистрации, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(СведенияОбИсчисленииВычетовИПН.ПериодРегистрации, МЕСЯЦ),
		|		СведенияОбИсчисленииВычетовИПН.Организация,
		|		СведенияОбИсчисленииВычетовИПН.ФизическоеЛицо,
		|		СведенияОбИсчисленииВычетовИПН.ВидВычета";
		
		ТекстЗапроса = ТекстЗапроса + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       5,
		| 		NULL КАК Регистратор,
		|		ИПНСведенияОДоходах.Организация,
		|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""Корректировка дохода"" КАК ВидРасчета,
		|		1 КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		0 КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		СУММА(ИПНСведенияОДоходах.ПримененнаяКорректировка) КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		ВТ_ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|				
		|	ГДЕ
		|		ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		ИПНСведенияОДоходах.ПериодРегистрации >= ДАТАВРЕМЯ(2019,1,1) И
		|		ИПНСведенияОДоходах.ФизЛицо Ссылка Справочник.ФизическиеЛица И
		|		НЕ ИПНСведенияОДоходах.ПримененнаяКорректировка = 0";
		
		Если ОтборОрганизации Тогда
			ТекстЗапроса = ТекстЗапроса + " И ИПНСведенияОДоходах.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И ИПНСведенияОДоходах.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ),
		|		ИПНСведенияОДоходах.Организация,
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		""Корректировка дохода""";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
    // ЕП
	"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|       2,
	| 		NULL КАК Регистратор,
	|		ЕПРасчетыСФондами.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ЕПРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|		NULL КАК Сотрудник,
	|		""ЕП исчисленные"" КАК ВидРасчета,
	|		""Д"" КАК ПорядокВидаРасчета,
	| 		NULL КАК НомерСтроки,
	|		НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(ЕПРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
	|		0 КАК ОтработаноДней,
	|		0 КАК ОтработаноЧасов,
	|		0 КАК УчитываемыеДни,
	|		0 КАК УчитываемыеЧасы,
	|		0 КАК Начисления,
	|		0 КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц, 
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		СУММА(ЕПРасчетыСФондами.СуммаПлатежа) КАК ЕПЗаМесяц,
	|		0 КАК ЕПЗаСчетРаботодателя,
	|		0 КАК ЕПЗаСчетРаботника,
	|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.ЕПРасчетыСФондами КАК ЕПРасчетыСФондами
	|		
	|	ГДЕ 
	|		ЕПРасчетыСФондами.Активность И
	|		ЕПРасчетыСФондами.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
	|		ЕПРасчетыСФондами.ВидДвижения = &Приход И
	|		ЕПРасчетыСФондами.ВидСтроки = &ВидСтроки И
	|		ЕПРасчетыСФондами.ВидПлатежа = &парамНалогВзнос";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И ЕПРасчетыСФондами.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И ЕПРасчетыСФондами.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.Период, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|		КОНЕЦПЕРИОДА(ЕПРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ЕПРасчетыСФондами.Организация,
	|		ЕПРасчетыСФондами.ФизЛицо
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|       2,
	| 		NULL КАК Регистратор,
	|		ЕПКомпоненты.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|		ЕПКомпоненты.ФизЛицо КАК ФизЛицо,
	|		NULL КАК Сотрудник,
	|		""ЕП исчисленные"" КАК ВидРасчета,
	|		""Д"" КАК ПорядокВидаРасчета,
	| 		NULL КАК НомерСтроки,
	|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
	|		0 КАК ОтработаноДней,
	|		0 КАК ОтработаноЧасов,
	|		0 КАК УчитываемыеДни,
	|		0 КАК УчитываемыеЧасы,
	|		0 КАК Начисления,
	|		0 КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц, 
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		0 КАК ЕПЗаМесяц,
	|		СУММА(ЕПКомпоненты.СуммаООСМС + ЕПКомпоненты.СуммаСО + ЕПКомпоненты.СуммаОПВР) КАК ЕПЗаСчетРаботодателя,
	|		СУММА(ЕПКомпоненты.СуммаОПВ + ЕПКомпоненты.СуммаВОСМС + ЕПКомпоненты.СуммаИПН) КАК ЕПЗаСчетРаботника,
	|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		РегистрНакопления.ЕПКомпоненты КАК ЕПКомпоненты
	|		
	|	ГДЕ
	|		ЕПКомпоненты.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
	|		ЕПКомпоненты.ВидПлатежа = &парамНалогВзнос";
	
	Если ОтборОрганизации Тогда
		ТекстЗапроса = ТекстЗапроса + " И ЕПКомпоненты.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
	КонецЕсли;
	
	Если ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " И ЕПКомпоненты.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.Период, МЕСЯЦ),
	|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ),
	|		КОНЕЦПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ЕПКомпоненты.Организация,
	|		ЕПКомпоненты.ФизЛицо
	|";
	
	ДополнитьТекстКомпонентыЕП(ТекстЗапроса, ОтборОрганизации, ВидСравненияОрганизацииСтрокой, ОтборРаботника, ВидСравненияРаботник);
	
	ТекстЗапроса = ТекстЗапроса	+
	"		
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ВыплатаЗарплаты.Вид = ""Сальдо"" 
	|				ТОГДА 6
	|			ИНАЧЕ 4
	|		КОНЕЦ КАК ВидДвижения,
	|		ВыплатаЗарплаты.Регистратор КАК Регистратор,
	|		ВыплатаЗарплаты.Организация КАК Организация,
	|		ВыплатаЗарплаты.ПериодРегистрации КАК ПериодРегистрации,
	|		ВыплатаЗарплаты.ФизЛицо КАК ФизЛицо,
	|		NULL КАК Сотрудник,
	|		ВыплатаЗарплаты.Вид КАК ВидРасчета,
	|		" + ?(ПараметрыОтчета.ДетализацияВыплаты, "ВыплатаЗарплаты.Регистратор.Дата", """А"" + ВыплатаЗарплаты.Вид") + " КАК ПорядокВидаРасчета,
	|		NULL КАК НомерСтроки,
	|		ВыплатаЗарплаты.ПериодРегистрации КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(ВыплатаЗарплаты.ПериодРегистрации, МЕСЯЦ) КАК ПериодДействияКонец,
	|		0 КАК ОтработаноДней,
	|		0 КАК ОтработаноЧасов,
	|		0 КАК УчитываемыеДни,
	|		0 КАК УчитываемыеЧасы,
	|		0 КАК Начисления,
	|		СУММА(ВыплатаЗарплаты.Удержания) КАК Удержания,
	|		0 КАК ВычетСНачалаГода,
	|		0 КАК ПримененнаяКорректировка,
	|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
	|		0 КАК ДоходыСНачалаГода,
	|		0 КАК ИПНСНачалаГода,
	|		0 КАК ОПВСНачалаГода,
	|		0 КАК ОППВСНачалаГода,
	|		0 КАК ОППВЗаМесяц, 
	|		0 КАК ОПВРСНачалаГода,
	|		0 КАК ОПВРЗаМесяц,
	|		0 КАК ООСМССНачалаГода,
	|		0 КАК ООСМСЗаМесяц,
	|		0 КАК ВОСМССНачалаГода,
	|		0 КАК ЕПЗаМесяц,
	|		0 КАК ЕПЗаСчетРаботодателя,
	|		0 КАК ЕПЗаСчетРаботника,
	|		СУММА(ВыплатаЗарплаты.СуммаВзаиморасчетовНачальныйОстаток) КАК СуммаВзаиморасчетовНачальныйОстаток,
	|		СУММА(ВыплатаЗарплаты.СуммаВзаиморасчетовКонечныйОстаток) КАК СуммаВзаиморасчетовКонечныйОстаток
	|	ИЗ
	|		ВТ_ЗапросПоВзаиморасчетам КАК ВыплатаЗарплаты
	|
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР
	|				КОГДА ВыплатаЗарплаты.Вид = ""Сальдо""
	|					ТОГДА 6
	|				ИНАЧЕ 4
	|		КОНЕЦ,
	|		ВыплатаЗарплаты.Организация,
	|		ВыплатаЗарплаты.ПериодРегистрации,	
	|		КОНЕЦПЕРИОДА(ВыплатаЗарплаты.ПериодРегистрации, МЕСЯЦ),
	|		ВыплатаЗарплаты.ФизЛицо,
	|		ВыплатаЗарплаты.Вид,
	|		" + ?(ПараметрыОтчета.ДетализацияВыплаты, "ВыплатаЗарплаты.Регистратор.Дата", """А"" + ВыплатаЗарплаты.Вид") + ",
	|		ВыплатаЗарплаты.Регистратор
	|   ) КАК НачисленияУдержания
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецПериодаРегистрации, " + УсловиеНаФизлицоТекст + ") КАК ФИОФизЛицСрезПоследних
	|			ПО НачисленияУдержания.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеНазначения КАК ПоследниеНазначения
	|			ПО НачисленияУдержания.ФизЛицо = ПоследниеНазначения.ФизЛицо 
	|			   И НачисленияУдержания.Организация = ПоследниеНазначения.ОбособленноеПодразделение
	|			   И НачисленияУдержания.ПериодРегистрации = ПоследниеНазначения.ПериодРегистрации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацииСрезПоследних
	|			ПО ПоследниеНазначения.ФизЛицо = РаботникиОрганизацииСрезПоследних.Сотрудник.ФизЛицо
	|			   И (РаботникиОрганизацииСрезПоследних.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|			   И ПоследниеНазначения.Организация = РаботникиОрганизацииСрезПоследних.Организация
	|			   И ПоследниеНазначения.Период = ВЫБОР
	|												КОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния = &Увольнение
	|													ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизацииСрезПоследних.Период, ДЕНЬ, -1)
	|												ИНАЧЕ РаботникиОрганизацииСрезПоследних.Период
	|											  КОНЕЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеНачисленияПоследниеДаты КАК ПлановыеНачисленияПоследниеДаты
	|				ПО НачисленияУдержания.ФизЛицо = ПлановыеНачисленияПоследниеДаты.ФизЛицо
	|				   	И НачисленияУдержания.Организация = ПлановыеНачисленияПоследниеДаты.ОбособленноеПодразделение
	|				  	И НачисленияУдержания.ПериодРегистрации = ПлановыеНачисленияПоследниеДаты.ПериодРегистрации
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	|		ПО (ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение.Код ЕСТЬ NULL) 
	|		  	И ПлановыеНачисленияПоследниеДаты.ФизЛицо = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник.Физлицо 
	|		   	И ПлановыеНачисленияПоследниеДаты.Организация = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация 
	|		   	И ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство
	|		   	И ПлановыеНачисленияПоследниеДаты.Период = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период
	|		   	И ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Размер <> 0
	|";
	
	Если ОтборПодразделения Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ (РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации " + ВидСравненияПодразделение + " (&ПодразделенияОрганизации))";
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И (НачисленияУдержания.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации))";
		КонецЕсли;
	ИначеЕсли ОтборПоРазрешеннымПоразделениям Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ 
		| ВЫБОР 
		| 	КОГДА РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением
		| 		ТОГДА (РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации В (&ДоступныеПодразделения))
		| 	ИНАЧЕ ИСТИНА
		| КОНЕЦ
		|";
		Если ОтборРаботника Тогда
			ТекстЗапроса = ТекстЗапроса + " И (НачисленияУдержания.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации))";
		КонецЕсли;
	ИначеЕсли ОтборРаботника Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ (НачисленияУдержания.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации))";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	ОрганизацияНаименование,
	|	ПодразделениеОрганизации,
	|	ФИОФизЛица,
	|	ВидДвижения,
	|	ПорядокВидаРасчета,
	|	ПериодДействияНачало
	|
	|ИТОГИ 	МАКСИМУМ(УчитываемыеДни), 
	|		МАКСИМУМ(УчитываемыеЧасы), 
	|		СУММА(ОтработаноДней),
	|		СУММА(ОтработаноЧасов),
	|		СУММА(Начисления), 
	|		СУММА(Удержания), 
	|		СУММА(ВычетСНачалаГода),
	|		СУММА(ПримененнаяКорректировка),
	|		СУММА(НеОблагаемыеИПНДоходыСНачалаГода),
	|		СУММА(ДоходыСНачалаГода),
	|		СУММА(ИПНСНачалаГода),
	|		СУММА(ОПВСНачалаГода),
	|		СУММА(ОППВСНачалаГода),
	|		СУММА(ОППВЗаМесяц),
	|		СУММА(ОПВРСНачалаГода),
	|		СУММА(ОПВРЗаМесяц),
	|		СУММА(ООСМССНачалаГода),
	|		СУММА(ООСМСЗаМесяц),
	|		СУММА(ВОСМССНачалаГода),
	|		СУММА(ЕПЗаМесяц),
	|		СУММА(ЕПЗаСчетРаботодателя),
	|		СУММА(ЕПЗаСчетРаботника),
	|		СУММА(СуммаВзаиморасчетовНачальныйОстаток), 
	|		СУММА(СуммаВзаиморасчетовКонечныйОстаток),
	|	    МИНИМУМ(ПериодДействияНачало),
	|	    МАКСИМУМ(ПериодДействияКонец),
	|		СУММА(ИмеютсяНачисления),
	|		СУММА(ИмеютсяУдержания),
	|		СУММА(ИмеютсяДоходыВНатуральнойФорме),
	|		СУММА(ИмеютсяВыплаты),
	|		СУММА(ИмеютсяВычетИПН),
	|		СУММА(ИмеетсяКорректировкаИПН)
	|	ПО
	|		ПериодРегистрации,
	|		Организация,
	|		ПодразделениеОрганизации,
	|		ФИОФизлица,
	|		ФизЛицо";
	
	ЗапросРЛ.Текст = ТекстЗапроса;
	
	Возврат ЗапросРЛ.Выполнить();
	
КонецФункции // СформироватьЗапрос()

Процедура СформироватьРасчетныеЛистки(ТабличныйДокумент, ПараметрыОтчета)
	
	Макет 			  		 		= ПолучитьМакет("Макет");
	ОбластьШапка 	  		 		= Макет.ПолучитьОбласть("Шапка");
	ОбластьНалоги 	  		 		= Макет.ПолучитьОбласть("Налоги" + ?(ПараметрыОтчета.НачалоПериода >= Дата(2018,1,1), "После2018", ""));
	ОПВР_ОППВ 	  		 			= Макет.ПолучитьОбласть("ОПВР_ОППВ");
	ОбластьОСМС 	  		 		= Макет.ПолучитьОбласть("ОСМС");
    ОбластьЕП 	  		 			= Макет.ПолучитьОбласть("ЕП");
	ОбластьЗаголовокТЧ		 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьНачисленоУдержано 		= Макет.ПолучитьОбласть("НачисленоУдержано");
	ОбластьВсего			 		= Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал			 		= Макет.ПолучитьОбласть("Подвал");
	ОбластьОтбивка			 		= Макет.ПолучитьОбласть("Отбивка");
	Линия					 		= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	СоответствиеТиповДокументов  	= Новый Соответствие; // здесь храниться соответствие типов документов и их синонимов
	
	РезультатЗапроса = СформироватьЗапрос(ПараметрыОтчета);
	
	Если РезультатЗапроса.Пустой() Тогда
	
		ТекстСообщения = НСтр("ru='Данные для формирования расчетных листков не обнаружены!'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Если ПараметрыОтчета.Свойство("КомпоновщикНастроек") И ТипЗнч(ПараметрыОтчета.КомпоновщикНастроек) = Тип("КомпоновщикНастроекКомпоновкиДанных") Тогда
			ДопСвойства = ПараметрыОтчета.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
			ДопСвойства.Вставить("ОтчетПустой", Истина);
		КонецЕсли;
		
	    Возврат;
		
	Иначе
		
		Если ПараметрыОтчета.Свойство("КомпоновщикНастроек") И ТипЗнч(ПараметрыОтчета.КомпоновщикНастроек) = Тип("КомпоновщикНастроекКомпоновкиДанных") Тогда
			ДопСвойства = ПараметрыОтчета.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
			ДопСвойства.Вставить("ОтчетПустой", Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	// В этот табличный документ будет собираться данные для РЛ до проверки на возвможность его вывода (по количеству строк)
	ВременныйТабличныйДокумент = Новый ТабличныйДокумент;
	
	ВыборкаПоПериоду = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаПоПериоду.Следующий() Цикл
	
		ТекстПериода = Формат(ВыборкаПоПериоду.ПериодРегистрации, "ДФ = 'ММММ гггг ''г.'''");
		ОбластьОтбивка.Параметры.ТекстОтбивки = ТекстПериода;
		Если ПараметрыОтчета.Группировать и (ЗначениеЗаполнено(ВыборкаПоПериоду.Начисления) или ЗначениеЗаполнено(ВыборкаПоПериоду.Удержания) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
			ТабличныйДокумент.Вывести(ОбластьОтбивка);
			ТабличныйДокумент.НачатьГруппуСтрок(ТекстПериода,);
		КонецЕсли;
	
		ВыборкаПоОрганизации = ВыборкаПоПериоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоОрганизации.Следующий() Цикл

			ПлательщикЕП = Ложь;
			Если ЗначениеЗаполнено(ВыборкаПоОрганизации.Организация) И УчетнаяПолитикаСервер.ПорядокОбложенияДоходовРаботников(ВыборкаПоОрганизации.Организация, ВыборкаПоПериоду.ПериодРегистрации) = Перечисления.ПорядокОбложенияДоходовРаботников.ЕдиныйПлатеж Тогда
				ПлательщикЕП = Истина;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоОрганизации.Организация) И ВыборкаПоОрганизации.Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				ФизЛицоИП = ВыборкаПоОрганизации.Организация.ИндивидуальныйПредприниматель;
			Иначе 
				ФизЛицоИП = Справочники.ФизическиеЛица.ПустаяСсылка();
			КонецЕсли;
			
			ТекстОрганизация = ВыборкаПоОрганизации.ОрганизацияНаименование;
			ОбластьОтбивка.Параметры.ТекстОтбивки = НСтр("ru='Организация: '") + ТекстОрганизация;
			Если ПараметрыОтчета.Группировать и (ЗначениеЗаполнено(ВыборкаПоОрганизации.Начисления) или ЗначениеЗаполнено(ВыборкаПоОрганизации.Удержания) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
				ТабличныйДокумент.Вывести(ОбластьОтбивка);
				ТабличныйДокумент.НачатьГруппуСтрок(ТекстОрганизация,);
			КонецЕсли;
		
			ВыборкаПоПодразделению = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоПодразделению.Следующий() Цикл
			
				ТекстПодразделения = Строка(ВыборкаПоПодразделению.ПодразделениеОрганизации);
				ОбластьОтбивка.Параметры.ТекстОтбивки = НСтр("ru='Подразделение: '") + ТекстПодразделения;
				Если ПараметрыОтчета.Группировать и (ЗначениеЗаполнено(ВыборкаПоПодразделению.Начисления) или ЗначениеЗаполнено(ВыборкаПоПодразделению.Удержания) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
					ТабличныйДокумент.Вывести(ОбластьОтбивка);
					ТабличныйДокумент.НачатьГруппуСтрок(ТекстПодразделения,);
				КонецЕсли;
			
				ВыборкаПоФИО = ВыборкаПоПодразделению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоФИО.Следующий() Цикл
					ВыборкаПоФЛ = ВыборкаПоФИО.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоФЛ.Следующий() Цикл
						Если ВыборкаПоФЛ.ФизЛицо = ФизЛицоИП Тогда 
							Продолжить;
						КонецЕсли;
						
						// Данные для подвала
						СуммаНаНачалоПериода = ВыборкаПоФЛ.СуммаВзаиморасчетовНачальныйОстаток;
						СуммаНаКонецПериода  = ВыборкаПоФЛ.СуммаВзаиморасчетовКонечныйОстаток;
						
						// Если нечего выводить.
						Если НЕ ЗначениеЗаполнено(ВыборкаПоФЛ.Начисления)  
							 И НЕ ЗначениеЗаполнено(ВыборкаПоФЛ.Удержания)
							 И НЕ ЗначениеЗаполнено(СуммаНаНачалоПериода)
							 И НЕ ЗначениеЗаполнено(СуммаНаКонецПериода) Тогда
							Продолжить
						КонецЕсли; 
					
						// Очистим временный табличный документ
						ВременныйТабличныйДокумент.Очистить();
						
						ТекстПериода  	   = Формат(ВыборкаПоФЛ.ПериодРегистрации, "ДФ = 'ММММ гггг'");
						ТекстРаботник 	   = ВыборкаПоФЛ.ФИОФизлица;
						ТекстПодразделения = "";
						ТекстДолжность	   = "";
						ТекстТабНомер	   = "";
						ТекстТарифнаяСтавка= "";
						МестоРаботы 	   = ВыборкаПоФЛ.Выбрать();
						
						Пока МестоРаботы.Следующий() Цикл
							Если МестоРаботы.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
								Если ЗначениеЗаполнено(МестоРаботы.ПодразделениеОрганизации) Тогда
									ТекстПодразделения  = МестоРаботы.ПодразделениеОрганизации;
									ТекстДолжность 	    = МестоРаботы.Должность;
									ТекстТабНомер	    = МестоРаботы.ТабельныйНомер;
									ТекстТарифнаяСтавка = МестоРаботы.Размер;
									Прервать;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла; 
						
						ОбластьШапка.Параметры.Организация	   = НСтр("ru='Организация: '")                        + ВыборкаПоФЛ.Организация;
						ОбластьШапка.Параметры.Заголовок 	   = НСтр("ru='Расчетный листок за '")                 + ТекстПериода + НСтр("ru=' г.'");
						ОбластьШапка.Параметры.Работник 	   = НСтр("ru='Работник: '")                           + ТекстРаботник;
						ОбластьШапка.Параметры.Подразделение   = НСтр("ru='Подразделение: '")                      + ТекстПодразделения;
						ОбластьШапка.Параметры.Должность 	   = НСтр("ru='Должность: '")                          + ТекстДолжность;
						ОбластьШапка.Параметры.ТарифнаяСтавка  = НСтр("ru='Месячная (часовая) тарифная ставка: '") + ТекстТарифнаяСтавка;
						ОбластьШапка.Параметры.ТабНомер 	   = НСтр("ru='Табельный номер: '")                    + ТекстТабНомер;						

						ИмеютсяНачисления 				= ЗначениеЗаполнено(ВыборкаПоФЛ.ИмеютсяНачисления);
						ИмеютсяУдержания 				= ЗначениеЗаполнено(ВыборкаПоФЛ.ИмеютсяУдержания);
						ИмеютсяДоходыВНатуральнойФорме 	= ЗначениеЗаполнено(ВыборкаПоФЛ.ИмеютсяДоходыВНатуральнойФорме);
						ИмеютсяВыплаты 					= ЗначениеЗаполнено(ВыборкаПоФЛ.ИмеютсяВыплаты);
						ИмеютсяВычетИПН					= ЗначениеЗаполнено(ВыборкаПоФЛ.ИмеютсяВычетИПН);
						ИмеетсяКорректировкаИПН			= ЗначениеЗаполнено(ВыборкаПоФЛ.ИмеетсяКорректировкаИПН);
						
						ВременныйТабличныйДокумент.Вывести(ОбластьШапка);
                        
						Если ПараметрыОтчета.ВыводитьНалоги И НЕ ПлательщикЕП Тогда
							ОбластьНалоги.Параметры.Доходы = Формат(ВыборкаПоФЛ.ДоходыСНачалаГода, "ЧЦ=15; ЧДЦ=2");
							ОбластьНалоги.Параметры.ИПН = Формат(ВыборкаПоФЛ.ИПНСНачалаГода, "ЧЦ=15; ЧДЦ=2");
							ОбластьНалоги.Параметры.ОПВ = Формат(ВыборкаПоФЛ.ОПВСНачалаГода, "ЧЦ=15; ЧДЦ=2");
							Если ПараметрыОтчета.НачалоПериода < Дата(2018,1,1) Тогда
								ОбластьНалоги.Параметры.НеОблагаемыеИПНДоходы = Формат(ВыборкаПоФЛ.НеОблагаемыеИПНДоходыСНачалаГода, "ЧЦ=15; ЧДЦ=2");
								ОбластьНалоги.Параметры.Вычеты = Формат(ВыборкаПоФЛ.ВычетСНачалаГода, "ЧЦ=15; ЧДЦ=2"); 
							КонецЕсли;
							
							ВременныйТабличныйДокумент.Вывести(ОбластьНалоги);
						КонецЕсли;
                      						
						Если ВыборкаПоФЛ.ООСМССНачалаГода <> 0 
								ИЛИ ВыборкаПоФЛ.ООСМСЗаМесяц <> 0
								ИЛИ ВыборкаПоФЛ.ВОСМССНачалаГода <> 0 Тогда
							ОбластьОСМС.Параметры.ООСМССНачалаГода = Формат(ВыборкаПоФЛ.ООСМССНачалаГода, "ЧЦ=15; ЧДЦ=2");
							ОбластьОСМС.Параметры.ООСМСЗаМесяц = Формат(ВыборкаПоФЛ.ООСМСЗаМесяц, "ЧЦ=15; ЧДЦ=2");
							ОбластьОСМС.Параметры.ВОСМССНачалаГода = Формат(ВыборкаПоФЛ.ВОСМССНачалаГода, "ЧЦ=15; ЧДЦ=2");
							ВременныйТабличныйДокумент.Вывести(ОбластьОСМС);
						КонецЕсли;
						
						Если ВыборкаПоФЛ.ОППВСНачалаГода <> 0 ИЛИ ВыборкаПоФЛ.ОППВЗаМесяц <> 0 Тогда
							ОПВР_ОППВ.Параметры.ОППВСНачалаГода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОППВ с начала года: %1'"), Формат(ВыборкаПоФЛ.ОППВСНачалаГода, "ЧЦ=15; ЧДЦ=2"));
							ОПВР_ОППВ.Параметры.ОППВЗаМесяц = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОППВ за месяц: %1'"), Формат(ВыборкаПоФЛ.ОППВЗаМесяц, "ЧЦ=15; ЧДЦ=2"));
						Иначе
							ОПВР_ОППВ.Параметры.ОППВСНачалаГода = "";
							ОПВР_ОППВ.Параметры.ОППВЗаМесяц = "";
						КонецЕсли;
						
						Если ВыборкаПоФЛ.ОПВРСНачалаГода <> 0 ИЛИ ВыборкаПоФЛ.ОПВРЗаМесяц <> 0 Тогда
							ОПВР_ОППВ.Параметры.ОПВРСНачалаГода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОПВР с начала года: %1'"),  Формат(ВыборкаПоФЛ.ОПВРСНачалаГода, "ЧЦ=15; ЧДЦ=2"));
							ОПВР_ОППВ.Параметры.ОПВРЗаМесяц = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ОПВР за месяц: : %1'"), Формат(ВыборкаПоФЛ.ОПВРЗаМесяц, "ЧЦ=15; ЧДЦ=2"));
						Иначе
							ОПВР_ОППВ.Параметры.ОПВРСНачалаГода = "";
							ОПВР_ОППВ.Параметры.ОПВРЗаМесяц = "";
						КонецЕсли;
						
						Если ВыборкаПоФЛ.ОППВСНачалаГода <> 0 ИЛИ ВыборкаПоФЛ.ОППВЗаМесяц <> 0
							ИЛИ ВыборкаПоФЛ.ОПВРСНачалаГода <> 0 ИЛИ ВыборкаПоФЛ.ОПВРЗаМесяц <> 0 Тогда
							ВременныйТабличныйДокумент.Вывести(ОПВР_ОППВ);
						КонецЕсли;
						
						Если ВыборкаПоФЛ.ЕПЗаМесяц <> 0 ИЛИ ВыборкаПоФЛ.ЕПЗаСчетРаботника <> 0 ИЛИ ВыборкаПоФЛ.ЕПЗаСчетРаботодателя Тогда
							ОбластьЕП.Параметры.ЕПЗаМесяц = Формат(ВыборкаПоФЛ.ЕПЗаМесяц, "ЧЦ=15; ЧДЦ=2");
							ОбластьЕП.Параметры.ЕПЗаСчетРаботника = Формат(ВыборкаПоФЛ.ЕПЗаСчетРаботника, "ЧЦ=15; ЧДЦ=2");
							ОбластьЕП.Параметры.ЕПЗаСчетРаботодателя = Формат(ВыборкаПоФЛ.ЕПЗаСчетРаботодателя, "ЧЦ=15; ЧДЦ=2");
							ВременныйТабличныйДокумент.Вывести(ОбластьЕП);
						КонецЕсли;						
						
						ВременныйТабличныйДокумент.Вывести(ОбластьЗаголовокТЧ);
						
						ЗаполнитьПараметрыПустымиЗначениями(ОбластьНачисленоУдержано.Параметры);
						НомерСекции = 0;
						ИтогиНачисленийИУдержанийВыведены 	= Ложь;
						ИтогиДоходыВыплатыВыведены 			= Ложь;
						Если ИмеютсяНачисления Или ИмеютсяУдержания Тогда

							Если ИмеютсяНачисления Тогда 
								НомерСекции = НомерСекции + 1;
								ОбластьНачисленоУдержано.Параметры.НачисленоТекст = "" + НомерСекции + НСтр("ru='. Начислено'");
							КонецЕсли;
							
							Если ИмеютсяУдержания Тогда
								НомерСекции = НомерСекции + 1;
								ОбластьНачисленоУдержано.Параметры.УдержаноТекст = "" + НомерСекции + НСтр("ru='. Удержано'");
							КонецЕсли;
							
							ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
							
						ИначеЕсли ИмеютсяДоходыВНатуральнойФорме Тогда
							
							НомерСекции = НомерСекции + 1;
							ОбластьНачисленоУдержано.Параметры.НачисленоТекст = "" + НомерСекции + НСтр("ru='. Доходы в натуральной форме'");
							
							Если ИмеютсяВыплаты Тогда
								НомерСекции = НомерСекции + 1;
								ОбластьНачисленоУдержано.Параметры.УдержаноТекст = "" + НомерСекции + НСтр("ru='. Выплачено'");
							КонецЕсли;
							
							ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
							ИтогиНачисленийИУдержанийВыведены 	= Истина;
						ИначеЕсли ИмеютсяВыплаты Или ИмеютсяВычетИПН Тогда
								
							Если ИмеютсяВычетИПН Тогда
								НомерСекции = НомерСекции + 1;
								ОбластьНачисленоУдержано.Параметры.НачисленоТекст = ПолучитьТекстВычетыКорректировкаДохода(НомерСекции, ИмеютсяВычетИПН, ИмеетсяКорректировкаИПН);
							КонецЕсли;
							
							Если ИмеютсяВыплаты Тогда
								НомерСекции = НомерСекции + 1;
								ОбластьНачисленоУдержано.Параметры.УдержаноТекст = "" + НомерСекции + НСтр("ru='. Выплачено'");
							КонецЕсли;
							
							ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
							ИтогиНачисленийИУдержанийВыведены 	= Истина;
							ИтогиДоходыВыплатыВыведены			= Истина;
						КонецЕсли;
							
							
						
						ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
						
						ВсегоНачисления      = 0;
						ВсегоОтработаноДней	 = 0;
						ВсегоОтработаноЧасов = 0;
						ВсегоУдержания       = 0;
						КоличествоНачислений = 0;
						КоличествоУдержаний  = 0;
						
						ВыборкаСтрокРасчетногоЛистка = ВыборкаПоФЛ.Выбрать();
						Пока ВыборкаСтрокРасчетногоЛистка.Следующий() Цикл
							Если НЕ ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.ПериодДействияКонец) Тогда
								ДатаОкончанияПериода = КонецМесяца(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало);
							Иначе
								ДатаОкончанияПериода = ВыборкаСтрокРасчетногоЛистка.ПериодДействияКонец;
							КонецЕсли; 
							
							Если ВыборкаСтрокРасчетногоЛистка.ВидДвижения = 1 Тогда // начисления

								Если ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.Начисления)
										Или ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.УчитываемыеДни + ВыборкаСтрокРасчетногоЛистка.ОтработаноДней)
										Или ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.УчитываемыеЧасы + ВыборкаСтрокРасчетногоЛистка.ОтработаноЧасов) Тогда
										
									НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 1).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).Текст = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 3).Объединить();
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 4).Текст = ВыборкаСтрокРасчетногоЛистка.УчитываемыеДни;
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 5).Текст = ВыборкаСтрокРасчетногоЛистка.УчитываемыеЧасы;
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Начисления,"ЧЦ=15; ЧДЦ=2");
									ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 7).Объединить();
									
									КоличествоНачислений = КоличествоНачислений + 1;
									ВсегоНачисления = ВсегоНачисления + ВыборкаСтрокРасчетногоЛистка.Начисления;
									ВсегоОтработаноДней = ВсегоОтработаноДней + ВыборкаСтрокРасчетногоЛистка.ОтработаноДней;
									ВсегоОтработаноЧасов = ВсегоОтработаноЧасов + ВыборкаСтрокРасчетногоЛистка.ОтработаноЧасов;
									
								КонецЕсли;
								
							ИначеЕсли ВыборкаСтрокРасчетногоЛистка.ВидДвижения = 2 Тогда // удержания
								
								Если ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.Удержания) Тогда
								
									НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 10).Объединить();
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).Текст = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 12).Объединить();
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Удержания,"ЧЦ=15; ЧДЦ=2");
									ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
									ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 14).Объединить();
									
									КоличествоУдержаний = КоличествоУдержаний + 1;
									ВсегоУдержания = ВсегоУдержания + ВыборкаСтрокРасчетногоЛистка.Удержания;
									
								КонецЕсли;
								
							ИначеЕсли ВыборкаСтрокРасчетногоЛистка.ВидДвижения < 6 Тогда // сальдо выводится отдельно
								
								// подведем итоги раздела начислений и удержаний
								// начнем раздел доходов в натуральной форме и выплат
								Если Не ИтогиНачисленийИУдержанийВыведены Тогда
									
									КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
									
									Если КолвоРасчетов > 0 Тогда
										
										Для Сч = 0 По КолвоРасчетов - 1 Цикл
											
											НомерСтроки = ВысотаТаблицы + Сч;
											
											Для Ссч = 1 По 14 Цикл
												
												Если Ссч = 3 ИЛИ Ссч = 7 ИЛИ Ссч = 9 ИЛИ Ссч = 10 ИЛИ Ссч = 12 ИЛИ Ссч = 14 Тогда
													Продолжить
												КонецЕсли; 
												
												ВременныйТабличныйДокумент.Область(НомерСтроки, Ссч).ГраницаСлева = Линия;
												
											КонецЦикла;
											
											ВременныйТабличныйДокумент.Область(НомерСтроки, 14).ГраницаСправа = Линия;
											ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 14).ГраницаСнизу = Линия;
											
										КонецЦикла; 
										
									КонецЕсли; 
									
									ОбластьВсего.Параметры.ВсегоНачисленоТекст = ?(ИмеютсяНачисления, НСтр("ru='Всего начислено'"), "");
									ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
									ОбластьВсего.Параметры.ВсегоОтработаноДней = ВсегоОтработаноДней;
									ОбластьВсего.Параметры.ВсегоОтработаноЧасов = ВсегоОтработаноЧасов;
									ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяУдержания, НСтр("ru='Всего удержано'"), "");
									ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
									
									ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
									
									ИтогиНачисленийИУдержанийВыведены 	= Не ИтогиНачисленийИУдержанийВыведены;
								    
									ЗаполнитьПараметрыПустымиЗначениями(ОбластьНачисленоУдержано.Параметры);
									Если ИмеютсяДоходыВНатуральнойФорме Тогда
										
										НомерСекции = НомерСекции + 1;
										ОбластьНачисленоУдержано.Параметры.НачисленоТекст = "" + НомерСекции + НСтр("ru='. Доходы в натуральной форме'");
											
										Если ИмеютсяВыплаты Тогда
											НомерСекции = НомерСекции + 1;
											ОбластьНачисленоУдержано.Параметры.УдержаноТекст = "" + НомерСекции + НСтр("ru='. Выплачено'");
										КонецЕсли;
										
										ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
										
									ИначеЕсли ИмеютсяВыплаты Или ИмеютсяВычетИПН Тогда
										
										Если ИмеютсяВычетИПН Тогда
											НомерСекции = НомерСекции + 1;
											ОбластьНачисленоУдержано.Параметры.НачисленоТекст = ПолучитьТекстВычетыКорректировкаДохода(НомерСекции, ИмеютсяВычетИПН, ИмеетсяКорректировкаИПН);
										КонецЕсли;
										
										Если ИмеютсяВыплаты Тогда
											НомерСекции = НомерСекции + 1;
											ОбластьНачисленоУдержано.Параметры.УдержаноТекст = "" + НомерСекции + НСтр("ru='. Выплачено'");
										КонецЕсли;
										ИтогиДоходыВыплатыВыведены = Истина;
										ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
									КонецЕсли;
									
									ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
									ВсегоНачисления = 0; КоличествоНачислений = 0;
									ВсегоУдержания = 0; КоличествоУдержаний  = 0;
									ВсегоОтработаноДней = 0;
									ВсегоОтработаноЧасов = 0;
									ВсегоВычетСНачалаГода = 0;
									ВсегоКорректировкаДохода = 0;
								КонецЕсли;
								
								Если ВыборкаСтрокРасчетногоЛистка.ВидДвижения = 3 Тогда // доп. доходы

									Если ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.Начисления)
											Или ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.УчитываемыеДни + ВыборкаСтрокРасчетногоЛистка.ОтработаноДней)
											Или ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.УчитываемыеЧасы + ВыборкаСтрокРасчетногоЛистка.ОтработаноЧасов) Тогда

										
										НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 1).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).Текст = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
										ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 2).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 3).Объединить();
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 4).Текст = ВыборкаСтрокРасчетногоЛистка.УчитываемыеДни;
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 5).Текст = ВыборкаСтрокРасчетногоЛистка.УчитываемыеЧасы;
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Начисления,"ЧЦ=15; ЧДЦ=2");
										ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 7).Объединить();
										
										КоличествоНачислений = КоличествоНачислений + 1;
										ВсегоНачисления = ВсегоНачисления + ВыборкаСтрокРасчетногоЛистка.Начисления;
										ВсегоОтработаноДней = ВсегоОтработаноДней + ВыборкаСтрокРасчетногоЛистка.ОтработаноДней;
										ВсегоОтработаноЧасов = ВсегоОтработаноЧасов + ВыборкаСтрокРасчетногоЛистка.ОтработаноЧасов;
									
									КонецЕсли;
									
								ИначеЕсли ВыборкаСтрокРасчетногоЛистка.ВидДвижения = 4 Тогда // остались выплаты
									
									Если ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.Удержания) Тогда
									
										Если ПараметрыОтчета.ДетализацияВыплаты Тогда
											ТипДок = ТипЗнч(ВыборкаСтрокРасчетногоЛистка.Регистратор);
											СинонимДокумента = СоответствиеТиповДокументов.Получить(ТипДок);
											Если СинонимДокумента = Неопределено Тогда
												СинонимДокумента = Метаданные.НайтиПоТипу(ТипДок).Синоним;
												СоответствиеТиповДокументов[ТипДок] = СинонимДокумента;
											КонецЕсли;
											ВидРасчетаТекст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета + " (" + СинонимДокумента + " " + СокрЛП(ВыборкаСтрокРасчетногоЛистка.НомерРегистратора) + НСтр("ru=' от '") + Формат(ВыборкаСтрокРасчетногоЛистка.ДатаРегистратора, "ДФ=дд.ММ.гг") + ")";
										Иначе
											ВидРасчетаТекст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
										КонецЕсли;
									
										НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).Текст = ВидРасчетаТекст;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 8).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 8 , НомерСтроки, 10).Объединить();
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).Текст = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ВыборкаСтрокРасчетногоЛистка.ПериодДействияНачало, ДатаОкончанияПериода);
										ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 11).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 11, НомерСтроки, 12).Объединить();
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.Удержания,"ЧЦ=15; ЧДЦ=2");
										ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 13).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 13, НомерСтроки, 14).Объединить();
										
										КоличествоУдержаний = КоличествоУдержаний + 1;
										ВсегоУдержания = ВсегоУдержания + ВыборкаСтрокРасчетногоЛистка.Удержания;
										
									КонецЕсли;
								ИначеЕсли ВыборкаСтрокРасчетногоЛистка.ВидДвижения = 5 Тогда
									
									Если Не ИтогиДоходыВыплатыВыведены Тогда
									
										КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
										
										Если КолвоРасчетов > 0 Тогда
											
											Для Сч = 0 По КолвоРасчетов - 1 Цикл
												
												НомерСтроки = ВысотаТаблицы + Сч;
												
												Для Ссч = 1 По 14 Цикл
													
													Если Ссч = 3 ИЛИ Ссч = 7 ИЛИ Ссч = 9 ИЛИ Ссч = 10 ИЛИ Ссч = 12 ИЛИ Ссч = 14 Тогда
														Продолжить
													КонецЕсли; 
													
													ВременныйТабличныйДокумент.Область(НомерСтроки, Ссч).ГраницаСлева = Линия;
													
												КонецЦикла;
												
												ВременныйТабличныйДокумент.Область(НомерСтроки, 14).ГраницаСправа = Линия;
												ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 14).ГраницаСнизу = Линия;
												
											КонецЦикла; 
											
										КонецЕсли; 
										
										ОбластьВсего.Параметры.ВсегоНачисленоТекст 	= ?(ИмеютсяДоходыВНатуральнойФорме, НСтр("ru='Всего натуральных доходов'"), "");
										ОбластьВсего.Параметры.ВсегоНачисления 		= ВсегоНачисления;
										ОбластьВсего.Параметры.ВсегоОтработаноДней 	= ВсегоОтработаноДней;
										ОбластьВсего.Параметры.ВсегоОтработаноЧасов = ВсегоОтработаноЧасов;
										ОбластьВсего.Параметры.ВсегоУдержаноТекст 	= ?(ИмеютсяВыплаты, НСтр("ru='Всего выплат'"), "");
										ОбластьВсего.Параметры.ВсегоУдержания  		= ВсегоУдержания;
										ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
										
										
										ИтогиДоходыВыплатыВыведены = Не ИтогиДоходыВыплатыВыведены;
										
										НомерСекции = НомерСекции + 1;
										ЗаполнитьПараметрыПустымиЗначениями(ОбластьНачисленоУдержано.Параметры);
										ОбластьНачисленоУдержано.Параметры.НачисленоТекст = ПолучитьТекстВычетыКорректировкаДохода(НомерСекции, ИмеютсяВычетИПН, ИмеетсяКорректировкаИПН);
										ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
										
										ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
										
										ВсегоНачисления = 0; КоличествоНачислений = 0;
										ВсегоУдержания = 0; КоличествоУдержаний  = 0;
										ВсегоОтработаноДней = 0;
										ВсегоОтработаноЧасов = 0;
										ВсегоВычетСНачалаГода = 0;
										ВсегоКорректировкаДохода = 0;
										
									КонецЕсли;	
									
									Если ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.ВычетСНачалаГода) Тогда
										НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
											
										ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 1).Текст = ВыборкаСтрокРасчетногоЛистка.ВидРасчета;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 1).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 1).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 5).Объединить();
										
										ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).Текст = Формат(ВыборкаСтрокРасчетногоЛистка.ВычетСНачалаГода,"ЧЦ=15; ЧДЦ=2");
										ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 6).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
										ВременныйТабличныйДокумент.Область(НомерСтроки, 6, НомерСтроки, 7).Объединить();
										ВсегоВычетСНачалаГода = ВсегоВычетСНачалаГода + ВыборкаСтрокРасчетногоЛистка.ВычетСНачалаГода;
										КоличествоНачислений = КоличествоНачислений + 1;
									КонецЕсли;	
									Если ЗначениеЗаполнено(ВыборкаСтрокРасчетногоЛистка.ПримененнаяКорректировка) Тогда
										ВсегоКорректировкаДохода = ВсегоКорректировкаДохода + ВыборкаСтрокРасчетногоЛистка.ПримененнаяКорректировка;
									КонецЕсли;	
								КонецЕсли; 
							КонецЕсли; 
						КонецЦикла;
						
						// расчертим линиями низ расчетного листками
						КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
						
						Если КолвоРасчетов > 0 Тогда
							
							Для Сч = 0 По КолвоРасчетов - 1 Цикл
								
								НомерСтроки = ВысотаТаблицы + Сч;
								
								Для Ссч = 1 По 14 Цикл
									
									Если Ссч = 3 ИЛИ Ссч = 7 ИЛИ Ссч = 9 ИЛИ Ссч = 10 ИЛИ Ссч = 12 ИЛИ Ссч = 14 Тогда
										Продолжить
									КонецЕсли; 
									
									ВременныйТабличныйДокумент.Область(НомерСтроки, Ссч).ГраницаСлева = Линия;
									
								КонецЦикла;
								
								ВременныйТабличныйДокумент.Область(НомерСтроки, 14).ГраницаСправа = Линия;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 14).ГраницаСнизу = Линия;
								
							КонецЦикла; 
							
						КонецЕсли; 
						
						Если Не ИтогиНачисленийИУдержанийВыведены И ИмеютсяНачисления И ИмеютсяУдержания Тогда // есть только начисления и удержания
							ОбластьВсего.Параметры.ВсегоНачисленоТекст = ?(ИмеютсяНачисления, НСтр("ru='Всего начислено'"), "");
							ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
							ОбластьВсего.Параметры.ВсегоОтработаноДней = ВсегоОтработаноДней;
							ОбластьВсего.Параметры.ВсегоОтработаноЧасов = ВсегоОтработаноЧасов;
							ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяУдержания, НСтр("ru='Всего удержано'"), "");
							ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
							ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
						ИначеЕсли Не ИтогиДоходыВыплатыВыведены и ИмеютсяДоходыВНатуральнойФорме Тогда  // остались итоги по натуральным доходам и выплатам   И Вычетам
							ОбластьВсего.Параметры.ВсегоНачисленоТекст = ?(ИмеютсяДоходыВНатуральнойФорме, НСтр("ru='Всего натуральных доходов'"), "");
							ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
							ОбластьВсего.Параметры.ВсегоОтработаноДней = ВсегоОтработаноДней;
							ОбластьВсего.Параметры.ВсегоОтработаноЧасов = ВсегоОтработаноЧасов;
							ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяВыплаты, НСтр("ru='Всего выплат'"), "");
							ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
							
							ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
						ИначеЕсли ИмеютсяВычетИПН Тогда	
							
							Если НЕ ИмеетсяКорректировкаИПН Тогда
								ОбластьВсего.Параметры.ВсегоНачисленоТекст 	= НСтр("ru='Всего применено вычетов'");
								ОбластьВсего.Параметры.ВсегоНачисления		= ВсегоВычетСНачалаГода;
								ОбластьВсего.Параметры.ВсегоОтработаноДней 	= 0;
								ОбластьВсего.Параметры.ВсегоОтработаноЧасов = 0;
								ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяВыплаты и Не ИмеютсяДоходыВНатуральнойФорме, НСтр("ru='Всего выплат'"), "");
								ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
								ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
								
								НомерСтроки = ВременныйТабличныйДокумент.ВысотаТаблицы;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 5).Объединить();
							Иначе
								ОбластьВсего.Параметры.ВсегоНачисленоТекст 	= НСтр("ru='Всего применено вычетов'");
								ОбластьВсего.Параметры.ВсегоНачисления		= ВсегоВычетСНачалаГода;
								ОбластьВсего.Параметры.ВсегоОтработаноДней 	= 0;
								ОбластьВсего.Параметры.ВсегоОтработаноЧасов = 0;
								ОбластьВсего.Параметры.ВсегоУдержаноТекст   = "";
								ОбластьВсего.Параметры.ВсегоУдержания  		= 0;
								ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
								НомерСтроки = НомерСтроки + 1;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 5).Объединить();
								
								ОбластьВсего.Параметры.ВсегоНачисленоТекст 	= НСтр("ru='Всего корректировка дохода'");
								ОбластьВсего.Параметры.ВсегоНачисления		= ВсегоКорректировкаДохода;
								ОбластьВсего.Параметры.ВсегоОтработаноДней 	= 0;
								ОбластьВсего.Параметры.ВсегоОтработаноЧасов = 0;
								ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяВыплаты и Не ИмеютсяДоходыВНатуральнойФорме, НСтр("ru='Всего выплат'"), "");
								ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
								ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
								
								НомерСтроки = ВременныйТабличныйДокумент.ВысотаТаблицы;
								ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 5).Объединить();
							КонецЕсли;
							
						ИначеЕсли ИмеетсяКорректировкаИПН Тогда	
							ОбластьВсего.Параметры.ВсегоНачисленоТекст 	= НСтр("ru='Всего корректировка дохода'");
							ОбластьВсего.Параметры.ВсегоНачисления		= ВсегоКорректировкаДохода;
							ОбластьВсего.Параметры.ВсегоОтработаноДней 	= 0;
							ОбластьВсего.Параметры.ВсегоОтработаноЧасов = 0;
							ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяВыплаты и Не ИмеютсяДоходыВНатуральнойФорме, НСтр("ru='Всего выплат'"), "");
							ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
							ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
							
							НомерСтроки = ВременныйТабличныйДокумент.ВысотаТаблицы;
							ВременныйТабличныйДокумент.Область(НомерСтроки, 1, НомерСтроки, 5).Объединить();
						ИначеЕсли КолвоРасчетов > 0 Тогда  // остались итоги по натуральным доходам и выплатам
							ОбластьВсего.Параметры.ВсегоНачисленоТекст = ?(ИмеютсяДоходыВНатуральнойФорме, НСтр("ru='Всего натуральных доходов'"), "");
							ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
							ОбластьВсего.Параметры.ВсегоОтработаноДней = ВсегоОтработаноДней;
							ОбластьВсего.Параметры.ВсегоОтработаноЧасов = ВсегоОтработаноЧасов;
							ОбластьВсего.Параметры.ВсегоУдержаноТекст = ?(ИмеютсяВыплаты, НСтр("ru='Всего выплат'"), "");
							ОбластьВсего.Параметры.ВсегоУдержания  = ВсегоУдержания;
							ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
						КонецЕсли; 
						
						Если СуммаНаНачалоПериода = NULL Тогда
							
							ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = НСтр("ru='Долг за организацией на начало месяца: '");
							ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = 0;
							
						Иначе
							
							Если СуммаНаНачалоПериода >= 0  Тогда
								ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = НСтр("ru='Долг за организацией на начало месяца: '");
								ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = СуммаНаНачалоПериода;
							Иначе
								ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = НСтр("ru='Долг за работником на начало месяца: '");
								ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = 0 - СуммаНаНачалоПериода;
							КонецЕсли;
							
						КонецЕсли;
						Если СуммаНаКонецПериода = NULL Тогда
							
							ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = НСтр("ru='Долг за работником на конец месяца: '");
							ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0;
							
						Иначе
							
							Если СуммаНаКонецПериода >= 0  Тогда
								ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = НСтр("ru='Долг за организацией на конец месяца: '");
								ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = СуммаНаКонецПериода;
							Иначе
								ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = НСтр("ru='Долг за работником на конец месяца: '");
								ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0 - СуммаНаКонецПериода;
							КонецЕсли;
							
						КонецЕсли; 
						
						ВременныйТабличныйДокумент.Вывести(ОбластьПодвал);
						
						Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ВременныйТабличныйДокумент) Тогда
							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						КонецЕсли; 
						ТабличныйДокумент.Вывести(ВременныйТабличныйДокумент);
						
						РасчетныйЛистокДляОтправки = Новый ТабличныйДокумент;
						РасчетныйЛистокДляОтправки.Вывести(ВременныйТабличныйДокумент);
						
						РасчетныйЛистокФизЛица = Новый Структура;
	                    РасчетныйЛистокФизЛица.Вставить("ФизЛицо"		     , ВыборкаПоФЛ.ФизЛицо);
						РасчетныйЛистокФизЛица.Вставить("РасчетныйЛисток"    , РасчетныйЛистокДляОтправки);
						РасчетныйЛистокФизЛица.Вставить("ТекстПериода"	     , ТекстПериода);
						РасчетныйЛистокФизЛица.Вставить("ТекстОрганизация"   , ТекстОрганизация);
						РасчетныйЛистокФизЛица.Вставить("ТекстПодразделения" , ТекстПодразделения);
						РасчетныйЛистокФизЛица.Вставить("ТекстДолжность"	 , ТекстДолжность);
						РасчетныйЛистокФизЛица.Вставить("ТекстТарифнаяСтавка", ТекстТарифнаяСтавка);

					КонецЦикла;
						
				КонецЦикла;
				
				Если ПараметрыОтчета.Группировать и (ЗначениеЗаполнено(ВыборкаПоПодразделению.Начисления) или ЗначениеЗаполнено(ВыборкаПоПодразделению.Удержания) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПодразделению.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
				КонецЕсли;
			КонецЦикла;
			
			Если ПараметрыОтчета.Группировать и (ЗначениеЗаполнено(ВыборкаПоОрганизации.Начисления) или ЗначениеЗаполнено(ВыборкаПоОрганизации.Удержания) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоОрганизации.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
				ТабличныйДокумент.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЦикла; 
		
		Если ПараметрыОтчета.Группировать и (ЗначениеЗаполнено(ВыборкаПоПериоду.Начисления) или ЗначениеЗаполнено(ВыборкаПоПериоду.Удержания) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовНачальныйОстаток) или ЗначениеЗаполнено(ВыборкаПоПериоду.СуммаВзаиморасчетовКонечныйОстаток)) Тогда
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекстВычетыКорректировкаДохода(НомерСекции, ИмеютсяВычетИПН, ИмеетсяКорректировкаИПН)
	
	ТекстВычетаКорректировки = "";
	
	Если НЕ ИмеютсяВычетИПН И ИмеетсяКорректировкаИПН Тогда
		ТекстВычетаКорректировки = НСтр("ru='%1. Корректировка дохода'");
	ИначеЕсли ИмеютсяВычетИПН И НЕ ИмеетсяКорректировкаИПН Тогда
		ТекстВычетаКорректировки = НСтр("ru='%1. Примененные вычеты'");
	ИначеЕсли ИмеютсяВычетИПН И ИмеетсяКорректировкаИПН Тогда
		ТекстВычетаКорректировки = НСтр("ru='%1. Примененные вычеты и корректировка дохода'");		
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВычетаКорректировки, НомерСекции);
	
КонецФункции

Процедура ДополнитьТекстКомпонентыЕП(ТекстЗапроса, ОтборОрганизации, ВидСравненияОрганизацииСтрокой, ОтборРаботника, ВидСравненияРаботник)
	
	ТекстаЗапросаКомпонентыЕП = "";
	
	НВОЗаСчетРаботника = Новый Массив;
	НВОЗаСчетРаботника.Добавить("ОПВ"); 
	НВОЗаСчетРаботника.Добавить("ВОСМС");
	НВОЗаСчетРаботника.Добавить("ИПН");
	
	Для Каждого ВидНВО Из НВОЗаСчетработника Цикл
		
		ТекстаЗапросаКомпонентыЕП = ТекстаЗапросаКомпонентыЕП + "
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|       2,
		| 		NULL КАК Регистратор,
		|		ЕПКомпоненты.Организация КАК Организация,
		|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ЕПКомпоненты.ФизЛицо КАК ФизЛицо,
		|		NULL КАК Сотрудник,
		|		""Единый платеж (" + ВидНВО + ")"" КАК ВидРасчета,
		|		""Д"" КАК ПорядокВидаРасчета,
		| 		NULL КАК НомерСтроки,
		|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияНачало,
		|		КОНЕЦПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ) КАК ПериодДействияКонец,
		|		0 КАК ОтработаноДней,
		|		0 КАК ОтработаноЧасов,
		|		0 КАК УчитываемыеДни,
		|		0 КАК УчитываемыеЧасы,
		|		0 КАК Начисления,
		|		СУММА(ЕПКомпоненты.Сумма" + ВидНВО + ") КАК Удержания,
		|		0 КАК ВычетСНачалаГода,
		|		0 КАК ПримененнаяКорректировка,
		|		0 КАК НеОблагаемыеИПНДоходыСНачалаГода,
		|		0 КАК ДоходыСНачалаГода,
		|		0 КАК ИПНСНачалаГода,
		|		0 КАК ОПВСНачалаГода,
		|		0 КАК ОППВСНачалаГода,
		|		0 КАК ОППВЗаМесяц,
		|		0 КАК ОПВРСНачалаГода,
		|		0 КАК ОПВРЗаМесяц,
		|		0 КАК ООСМССНачалаГода,
		|		0 КАК ООСМСЗаМесяц,
		|		0 КАК ВОСМССНачалаГода,
		|		0 КАК ЕПЗаМесяц,
		|		0 КАК ЕПЗаСчетРаботодателя,
		|		0 КАК ЕПЗаСчетРаботника,
		|		0 КАК СуммаВзаиморасчетовНачальныйОстаток,
		|		0 КАК СуммаВзаиморасчетовКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ЕПКомпоненты КАК ЕПКомпоненты
		|		
		|	ГДЕ
		|		ЕПКомпоненты.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации И
		|		ЕПКомпоненты.ВидПлатежа = &парамНалогВзнос";
		
		Если ОтборОрганизации Тогда
			ТекстаЗапросаКомпонентыЕП = ТекстаЗапросаКомпонентыЕП + " И ЕПКомпоненты.Организация " + ВидСравненияОрганизацииСтрокой + " (&Организация)";
		КонецЕсли;
		
		Если ОтборРаботника Тогда
			ТекстаЗапросаКомпонентыЕП = ТекстаЗапросаКомпонентыЕП + " И ЕПКомпоненты.ФизЛицо " + ВидСравненияРаботник + "(&РаботникиОрганизации)";
		КонецЕсли;
		
		ТекстаЗапросаКомпонентыЕП = ТекстаЗапросаКомпонентыЕП	+
		"		
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.Период, МЕСЯЦ),
		|		НАЧАЛОПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ЕПКомпоненты.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ЕПКомпоненты.Организация,
		|		ЕПКомпоненты.ФизЛицо
		|";
		
	КонецЦикла;
		
	ТекстЗапроса = ТекстЗапроса + ТекстаЗапросаКомпонентыЕП;
	
КонецПроцедуры

#КонецЕсли