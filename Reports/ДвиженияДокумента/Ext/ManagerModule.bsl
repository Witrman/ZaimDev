#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	// Проверить документ на проведение
	
	Отказ = Ложь;
	
	ПодготовитьСхему(ПараметрыОтчета);
	
	КомпоновщикНастроекОтчета = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	ПередКомпоновкойМакета(ПараметрыОтчета, КомпоновщикНастроекОтчета);
	
	ДанныеРасшифровкиОбъект = Неопределено;
	
	Результат = Новый ТабличныйДокумент;
	
	НастройкиДляКомпоновкиМакета = КомпоновщикНастроекОтчета.ПолучитьНастройки();
		
	//Сгенерируем макет компоновки данных при помощи компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
	Попытка
		//В качестве схемы компоновки будет выступать схема самого отчета
		//В качестве настроек отчета - текущие настройки отчета
		МакетКомпоновки = КомпоновщикМакета.Выполнить(ПараметрыОтчета.СхемаКомпоновкиДанных, НастройкиДляКомпоновкиМакета, , Неопределено);
		
		//Создадим и инициализируем процессор компоновки
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровкиОбъект, Истина);
		
		//Создадим и инициализируем процессор вывода результата
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(Результат);
		
		//Обозначим начало вывода
		ПроцессорВывода.НачатьВывод();
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
		
	Исключение
		// Запись в журнал регистрации не требуется
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Пока ИнформацияОбОшибке.Причина <> Неопределено Цикл
			ИнформацияОбОшибке = ИнформацияОбОшибке.Причина;
		КонецЦикла;
		ТекстСообщения = НСтр("ru = 'Отчет не сформирован!'") + Символы.ПС + ИнформацияОбОшибке.Описание;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
	КонецПопытки;
		
	Если Не Отказ Тогда
		БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
		Результат.ФиксацияСверху = 0;
		Результат.ФиксацияСлева  = 0;
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Новый Структура("Результат, ДанныеРасшифровки", Результат, Неопределено), АдресХранилища);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПодготовитьСхему(ПараметрыОтчета)
	
	Схема = Отчеты.ДвиженияДокумента.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	Документ = ПараметрыОтчета.Документ;
	
	ИсточникДанных = Схема.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных1";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	МассивГруппировок = Новый Массив;
	
	НомерРегистра = -1;
	КоличествоРегистров = Документ.Метаданные().Движения.Количество();
	
	Для Каждого СвойстваОбъекта из Документ.Метаданные().Движения Цикл
		
		Если НЕ ПравоДоступа("Чтение", СвойстваОбъекта) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерРегистра = НомерРегистра + 1;
		ИмяРегистра = "Р" + НомерРегистра;
		
		НаборДанных = Схема.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		НаборДанных.Имя = ИмяРегистра;
		НаборДанных.ИсточникДанных = ИсточникДанных.Имя;
		
		ТекстРесурсы   = "";
		ТекстРеквизиты = "";
		ТекстИзмерения = ", НомерСтроки КАК НомерСтроки" + ИмяРегистра;
		
		СтруктураПредставлениеПолей      = Новый Структура;
		СтруктураПредставлениеРесурсов   = Новый Структура;
		СтруктураПредставлениеИзмерений  = Новый Структура;
		СтруктураПредставлениеРеквизитов = Новый Структура;
		МассивИтогов = Новый Массив;
		
		СтруктураПредставлениеИзмерений.Вставить("ИмяРегистра", ИмяРегистра);
		
		Если (Метаданные.РегистрыНакопления.Индекс(СвойстваОбъекта)>=0) ИЛИ (Метаданные.РегистрыСведений.Индекс(СвойстваОбъекта)>=0) Тогда
			
			ВидРегистра = ?(Метаданные.РегистрыНакопления.Индекс(СвойстваОбъекта)>=0, "Накопления", "Сведений");
			
			Если ВидРегистра+"."+СвойстваОбъекта.Имя = "Сведений.СписанныеТовары" Тогда
				Продолжить;
			КонецЕсли;
			
			ПредставлениеРегистра = ?(СвойстваОбъекта.Синоним = "", """" + СвойстваОбъекта.Имя + """", """" + СвойстваОбъекта.Синоним + """");
			Если ВидРегистра = "Накопления" Тогда
				Заголовок = "Регистр накопления " + ПредставлениеРегистра;
				ПредставлениеРегистра = """Регистр накопления """ + ПредставлениеРегистра + """""";
			Иначе
				Заголовок = "Регистр сведений " + ПредставлениеРегистра;
				ПредставлениеРегистра = """Регистр сведений """ + ПредставлениеРегистра + """""";
			КонецЕсли;
			СтруктураПредставлениеИзмерений.Вставить("ПредставлениеРегистра", Заголовок);
			ПредставлениеРегистра = ПредставлениеРегистра + " КАК ПредставлениеРегистра" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("ПредставлениеРегистра" + ИмяРегистра, " ");

			СтрокаПриходРасход = "";
			Если ВидРегистра = "Накопления" Тогда
				Если СвойстваОбъекта.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
					СтрокаПриходРасход = СтрокаПриходРасход + ", ВидДвижения КАК ВидДвижения" + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("ВидДвижения" + ИмяРегистра, "Вид движения");
					СтруктураПредставлениеИзмерений.Вставить("ВидДвижения" + ИмяРегистра, "Вид движения");
				КонецЕсли;
			КонецЕсли;
			Для Каждого Ресурс из СвойстваОбъекта.Ресурсы Цикл
				ТекстРесурсы = ТекстРесурсы + ", "+ Ресурс.Имя + " КАК " + Ресурс.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Ресурс.Имя + ИмяРегистра, Ресурс.Синоним);
				СтруктураПредставлениеРесурсов.Вставить("" + Ресурс.Имя + ИмяРегистра, Ресурс.Синоним);
				Если ВидРегистра = "Сведений" Тогда
					Если Ресурс.Тип.СодержитТип(Тип("Число")) Тогда
						МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + ИмяРегистра, "Сумма(" + Ресурс.Имя + ИмяРегистра + ")"));
					Иначе
						МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + ИмяРегистра, "Максимум(" + Ресурс.Имя + ИмяРегистра + ")"));
					КонецЕсли;
				Иначе
					МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + ИмяРегистра, "Сумма(" + Ресурс.Имя + ИмяРегистра + ")"));
				КонецЕсли;
			КонецЦикла;
			СтруктураПредставлениеПолей.Вставить("НомерСтроки" + ИмяРегистра, "Номер строки");
			СтруктураПредставлениеИзмерений.Вставить("НомерСтроки" + ИмяРегистра, "Номер строки");
			Для Каждого Измерение из СвойстваОбъекта.Измерения Цикл
				ТекстИзмерения = ТекстИзмерения + ", "+ Измерение.Имя + " КАК " + Измерение.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Измерение.Имя + ИмяРегистра, Измерение.Синоним);
				СтруктураПредставлениеИзмерений.Вставить("" + Измерение.Имя + ИмяРегистра, Измерение.Синоним);
			КонецЦикла;
			Для Каждого Реквизит из СвойстваОбъекта.Реквизиты Цикл
				ТекстРеквизиты = ТекстРеквизиты + ", "+ Реквизит.Имя + " КАК " + Реквизит.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Реквизит.Имя + ИмяРегистра, Реквизит.Синоним);
				СтруктураПредставлениеРеквизитов.Вставить("" + Реквизит.Имя + ИмяРегистра, Реквизит.Синоним);
			КонецЦикла;
			НаборДанных.Запрос = "ВЫБРАТЬ РАЗРЕШЕННЫЕ " + ПредставлениеРегистра + СтрокаПриходРасход + ТекстИзмерения + ТекстРесурсы + ТекстРеквизиты + "
			|ИЗ Регистр"+ВидРегистра+"."+СвойстваОбъекта.Имя +" КАК Рег
			|ГДЕ Рег.Регистратор = &ДокументОтчета И Рег.Активность";

			Для Каждого ПолеНабора Из СтруктураПредставлениеПолей Цикл
			    ДобавитьПолеНабораДанных(НаборДанных, ПолеНабора.Ключ, ПолеНабора.Значение);
			КонецЦикла;
			Для Каждого ПолеРесурса Из МассивИтогов Цикл
				ДобавитьПолеИтога(Схема, ПолеРесурса.ИмяРесурса, ПолеРесурса.Выражение);
			КонецЦикла;
			
		ИначеЕсли Метаданные.РегистрыБухгалтерии.Индекс(СвойстваОбъекта)>=0 Тогда
			
			ВидРегистра = "Бухгалтерии";
			
			Если СвойстваОбъекта.ПланСчетов.Имя = "Налоговый" Тогда
				ИмяРегистра = "НУ";
			ИначеЕсли СвойстваОбъекта.ПланСчетов.Имя = "Типовой" Тогда
				ИмяРегистра = "БУ";
			КонецЕсли;
			
			СтруктураПредставлениеИзмерений.Вставить("ИмяРегистра", ИмяРегистра);
			
			ПредставлениеРегистра = ?(СвойстваОбъекта.Синоним = "", """" + СвойстваОбъекта.Имя + """", """" + СвойстваОбъекта.Синоним + """");
			Заголовок = "Регистр бухгалтерии "+ ПредставлениеРегистра;
			ПредставлениеРегистра = """Регистр бухгалтерии """ + ПредставлениеРегистра + """""";
			СтруктураПредставлениеИзмерений.Вставить("ПредставлениеРегистра", Заголовок);
			ПредставлениеРегистра = ПредставлениеРегистра + " КАК ПредставлениеРегистра" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("ПредставлениеРегистра" + ИмяРегистра, " ");
		
			ТекстресурсыДт = "";
			ТекстресурсыКт = "";
			
			Для Каждого Ресурс из СвойстваОбъекта.Ресурсы Цикл
				Если Ресурс.Балансовый Тогда
					Текстресурсы = Текстресурсы + ", "+ Ресурс.Имя + " КАК " + Ресурс.Имя + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("" + Ресурс.Имя + ИмяРегистра, Ресурс.Синоним);
					СтруктураПредставлениеРесурсов.Вставить("" + Ресурс.Имя + ИмяРегистра, Ресурс.Синоним);
					МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + ИмяРегистра, "Сумма(" + Ресурс.Имя + ИмяРегистра + ")"));
				Иначе
					ТекстресурсыДт = ТекстресурсыДт + ", "+ Ресурс.Имя + "Дт" + " КАК " + Ресурс.Имя + "Дт" + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("" + Ресурс.Имя + "Дт" + ИмяРегистра, Ресурс.Синоним + " Дт");
					СтруктураПредставлениеРесурсов.Вставить("" + Ресурс.Имя + "Дт" + ИмяРегистра, Ресурс.Синоним + " Дт");
					МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + "Дт" + ИмяРегистра, "Сумма(" + Ресурс.Имя + "Дт" + ИмяРегистра + ")"));
					
					ТекстресурсыКт = ТекстресурсыКт + ", "+ Ресурс.Имя + "Кт" + " КАК " + Ресурс.Имя + "Кт" + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("" + Ресурс.Имя + "Кт" + ИмяРегистра, Ресурс.Синоним + " Кт");
					СтруктураПредставлениеРесурсов.Вставить("" + Ресурс.Имя + "Кт" + ИмяРегистра, Ресурс.Синоним + " Кт");
					МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + "Кт" + ИмяРегистра, "Сумма(" + Ресурс.Имя + "Кт" + ИмяРегистра + ")"));
				КонецЕсли;
			КонецЦикла;
			
			ТекстИзмерения = ", НомерСтроки КАК НомерСтроки" + ИмяРегистра;
			ТекстИзмеренияДт = "";
			ТекстИзмеренияКт = "";
			
			СтруктураПредставлениеПолей.Вставить("НомерСтроки" + ИмяРегистра, "Номер строки");
			СтруктураПредставлениеИзмерений.Вставить("НомерСтроки" + ИмяРегистра, "Номер строки");
			Для Каждого Измерение из СвойстваОбъекта.Измерения Цикл
				Если Измерение.Балансовый Тогда
					ТекстИзмерения = ТекстИзмерения + ", "+ Измерение.Имя + " КАК " + Измерение.Имя + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("" + Измерение.Имя + ИмяРегистра, Измерение.Синоним);
					СтруктураПредставлениеИзмерений.Вставить("" + Измерение.Имя + ИмяРегистра, Измерение.Синоним);
				Иначе
					ТекстИзмеренияДт = ТекстИзмеренияДт + ", "+ Измерение.Имя + "Дт" + " КАК " + Измерение.Имя + "Дт" + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("" + Измерение.Имя + "Дт" + ИмяРегистра, Измерение.Синоним + " Дт");
					СтруктураПредставлениеИзмерений.Вставить("" + Измерение.Имя + "Дт" + ИмяРегистра, Измерение.Синоним + " Дт");
					
					ТекстИзмеренияКт = ТекстИзмеренияКт + ", "+ Измерение.Имя + "Кт" + " КАК " + Измерение.Имя + "Кт" + ИмяРегистра;
					СтруктураПредставлениеПолей.Вставить("" + Измерение.Имя + "Кт" + ИмяРегистра, Измерение.Синоним + " Кт");
					СтруктураПредставлениеИзмерений.Вставить("" + Измерение.Имя + "Кт" + ИмяРегистра, Измерение.Синоним + " Кт");
				КонецЕсли;
			КонецЦикла;
			
			ТекстИзмеренияДт = ТекстИзмеренияДт + ", СчетДт КАК СчетДт" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("СчетДт" + ИмяРегистра, "Счет Дт");
			СтруктураПредставлениеИзмерений.Вставить("СчетДт" + ИмяРегистра, "Счет Дт");
			
			ТекстИзмеренияКт = ТекстИзмеренияКт + ", СчетКт КАК СчетКт" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("СчетКт" + ИмяРегистра, "Счет Кт");
			СтруктураПредставлениеИзмерений.Вставить("СчетКт" + ИмяРегистра, "Счет Кт");
			
			ТекстСубконтоДт = "";
			ТекстВидСубконтоДт = "";

			Для Инд = 1 по Свойстваобъекта.ПланСчетов.МаксКоличествоСубконто Цикл
				ТекстСубконтоДт = ТекстСубконтоДт + ", СубконтоДт" + Инд + " КАК СубконтоДт" + Инд + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("СубконтоДт" + Инд + ИмяРегистра, "Субконто Дт " + Инд);
				СтруктураПредставлениеИзмерений.Вставить("СубконтоДт" + Инд + ИмяРегистра, "Субконто Дт " + Инд);
			КонецЦикла;
			
			ТекстСубконтоКт = "";
			ТекстВидСубконтоКт = "";

			Для Инд = 1 по Свойстваобъекта.ПланСчетов.МаксКоличествоСубконто Цикл
				ТекстСубконтоКт = ТекстСубконтоКт + ", СубконтоКт" + Инд + " КАК СубконтоКт" + Инд + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("СубконтоКт" + Инд + ИмяРегистра, "Субконто Кт " + Инд);
				СтруктураПредставлениеИзмерений.Вставить("СубконтоКт" + Инд + ИмяРегистра, "Субконто Кт " + Инд);
			КонецЦикла;
			
			Для Каждого Реквизит из СвойстваОбъекта.Реквизиты Цикл
				ТекстРеквизиты = ТекстРеквизиты + ", "+ Реквизит.Имя + " КАК " + Реквизит.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Реквизит.Имя + ИмяРегистра, Реквизит.Синоним);
				СтруктураПредставлениеРеквизитов.Вставить("" + Реквизит.Имя + ИмяРегистра, Реквизит.Синоним);
			КонецЦикла;
			
			НаборДанных.Запрос = "ВЫБРАТЬ РАЗРЕШЕННЫЕ " + ПредставлениеРегистра + ТекстИзмерения + Текстресурсы + 
							ТекстИзмеренияДт + ТекстВидСубконтоДт + ТекстСубконтоДт + ТекстРесурсыДт + 
							ТекстИзмеренияКт + ТекстВидСубконтоКт + ТекстСубконтоКт + ТекстРесурсыКт + ТекстРеквизиты + "
			|ИЗ РегистрБухгалтерии."+СвойстваОбъекта.Имя +".ДвиженияССубконто(,,Регистратор = &ДокументОтчета)
			|ГДЕ (РегистрБухгалтерии."+СвойстваОбъекта.Имя +".ДвиженияССубконто.Регистратор = &ДокументОтчета)";
			
			Для Каждого ПолеНабора Из СтруктураПредставлениеПолей Цикл
			    ДобавитьПолеНабораДанных(НаборДанных, ПолеНабора.Ключ, ПолеНабора.Значение);
			КонецЦикла;
			Для Каждого ПолеРесурса Из МассивИтогов Цикл
				ДобавитьПолеИтога(Схема, ПолеРесурса.ИмяРесурса, ПолеРесурса.Выражение);
			КонецЦикла;
			
		ИначеЕсли Метаданные.РегистрыРасчета.Индекс(СвойстваОбъекта)>=0 Тогда
			
			ВидРегистра = "Расчета";
			
			ТекстДанныеРасчета = "";
			СтруктураПредставлениеДанныхРасчета = Новый Структура;

			ПредставлениеРегистра = ?(СвойстваОбъекта.Синоним = "", """" + СвойстваОбъекта.Имя + """", """" + СвойстваОбъекта.Синоним + """");
			Заголовок = "Регистр расчета "+ ПредставлениеРегистра;
			ПредставлениеРегистра = """Регистр расчета """ + ПредставлениеРегистра + """""";
			СтруктураПредставлениеИзмерений.Вставить("ПредставлениеРегистра", Заголовок);
			ПредставлениеРегистра = ПредставлениеРегистра + " КАК ПредставлениеРегистра" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("ПредставлениеРегистра" + ИмяРегистра, " ");
			
			Для Каждого Ресурс из СвойстваОбъекта.Ресурсы Цикл
				ТекстРесурсы = ТекстРесурсы + ", "+ Ресурс.Имя + " КАК " + Ресурс.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Ресурс.Имя + ИмяРегистра, Ресурс.Синоним);
				СтруктураПредставлениеРесурсов.Вставить("" + Ресурс.Имя + ИмяРегистра, Ресурс.Синоним);
				МассивИтогов.Добавить(Новый Структура("ИмяРесурса, Выражение", "" + Ресурс.Имя + ИмяРегистра, "Сумма(" + Ресурс.Имя + ИмяРегистра + ")"));
			КонецЦикла;
			
			СтруктураПредставлениеПолей.Вставить("НомерСтроки" + ИмяРегистра, "Номер строки");
			СтруктураПредставлениеИзмерений.Вставить("НомерСтроки" + ИмяРегистра, "Номер строки");
			Для Каждого Измерение из СвойстваОбъекта.Измерения Цикл
				ТекстИзмерения = ТекстИзмерения + ", "+ Измерение.Имя + " КАК " + Измерение.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Измерение.Имя + ИмяРегистра, Измерение.Синоним);
				СтруктураПредставлениеИзмерений.Вставить("" + Измерение.Имя + ИмяРегистра, Измерение.Синоним);
			КонецЦикла;
			
			Для Каждого Реквизит из СвойстваОбъекта.Реквизиты Цикл
				ТекстРеквизиты = ТекстРеквизиты + ", "+ Реквизит.Имя + " КАК " + Реквизит.Имя + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("" + Реквизит.Имя + ИмяРегистра, Реквизит.Синоним);
				СтруктураПредставлениеРеквизитов.Вставить("" + Реквизит.Имя + ИмяРегистра, Реквизит.Синоним);
			КонецЦикла;
			
			// Специфические данные регистров расчета
			ТекстДанныеРасчета = ", ВидРасчета КАК ВидРасчета" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("ВидРасчета" + ИмяРегистра, "Вид расчета");
			СтруктураПредставлениеДанныхРасчета.Вставить("ВидРасчета" + ИмяРегистра, "Вид расчета");
			
			ТекстДанныеРасчета = ТекстДанныеРасчета + ", ПериодРегистрации КАК ПериодРегистрации" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("ПериодРегистрации" + ИмяРегистра, "Период регистрации");
			СтруктураПредставлениеДанныхРасчета.Вставить("ПериодРегистрации" + ИмяРегистра, "Период регистрации");
			
			ТекстДанныеРасчета = ТекстДанныеРасчета + ", Сторно КАК Сторно" + ИмяРегистра;
			СтруктураПредставлениеПолей.Вставить("Сторно" + ИмяРегистра, "Сторно");
			СтруктураПредставлениеДанныхРасчета.Вставить("Сторно" + ИмяРегистра, "Сторно");
			
			Если СвойстваОбъекта.БазовыйПериод Тогда
				ТекстДанныеРасчета = ТекстДанныеРасчета + ", БазовыйПериодНачало КАК БазовыйПериодНачало" + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("БазовыйПериодНачало" + ИмяРегистра, "Начало базового периода");
				СтруктураПредставлениеДанныхРасчета.Вставить("БазовыйПериодНачало" + ИмяРегистра, "Начало базового периода");
				
				ТекстДанныеРасчета = ТекстДанныеРасчета + ", БазовыйПериодКонец КАК БазовыйПериодКонец" + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("БазовыйПериодКонец" + ИмяРегистра, "Конец базового периода");
				СтруктураПредставлениеДанныхРасчета.Вставить("БазовыйПериодКонец" + ИмяРегистра, "Конец базового периода");
			КонецЕсли;
			Если СвойстваОбъекта.ПериодДействия Тогда
				ТекстДанныеРасчета = ТекстДанныеРасчета + ", ПериодДействияНачало КАК ПериодДействияНачало" + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("ПериодДействияНачало" + ИмяРегистра, "Начало периода действия");
				СтруктураПредставлениеДанныхРасчета.Вставить("ПериодДействияНачало" + ИмяРегистра, "Начало периода действия");
				
				ТекстДанныеРасчета = ТекстДанныеРасчета + ", ПериодДействияКонец КАК ПериодДействияКонец" + ИмяРегистра;
				СтруктураПредставлениеПолей.Вставить("ПериодДействияКонец" + ИмяРегистра, "Конец периода действия");
				СтруктураПредставлениеДанныхРасчета.Вставить("ПериодДействияКонец" + ИмяРегистра, "Конец периода действия");
			КонецЕсли;
			НаборДанных.Запрос = "ВЫБРАТЬ РАЗРЕШЕННЫЕ " + ПредставлениеРегистра + ТекстДанныеРасчета + ТекстИзмерения + ТекстРесурсы + ТекстРеквизиты + "
			|ИЗ РегистрРасчета." + СвойстваОбъекта.Имя + " КАК Рег
			|ГДЕ Рег.Регистратор = &ДокументОтчета И Рег.Активность";
			
			Для Каждого ПолеНабора Из СтруктураПредставлениеПолей Цикл
			    ДобавитьПолеНабораДанных(НаборДанных, ПолеНабора.Ключ, ПолеНабора.Значение);
			КонецЦикла;
			Для Каждого ПолеРесурса Из МассивИтогов Цикл
				ДобавитьПолеИтога(Схема, ПолеРесурса.ИмяРесурса, ПолеРесурса.Выражение);
			КонецЦикла;
			
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если НаборДанных.Запрос = "" Тогда
			Схема.НаборыДанных.Удалить(НаборДанных);
		КонецЕсли;
		
		СтруктураДанныхГруппировок = Новый Структура("СтруктураПредставлениеИзмерений, СтруктураПредставлениеРесурсов, СтруктураПредставлениеРеквизитов",
	                                                  СтруктураПредставлениеИзмерений, СтруктураПредставлениеРесурсов, СтруктураПредставлениеРеквизитов);
		Если ВидРегистра = "Расчета" Тогда
			СтруктураДанныхГруппировок.Вставить("СтруктураПредставлениеДанныхРасчета", СтруктураПредставлениеДанныхРасчета);
		КонецЕсли;
		
		МассивГруппировок.Добавить(СтруктураДанныхГруппировок);
		
	КонецЦикла;
												
	ПараметрыОтчета.Вставить("СхемаКомпоновкиДанных"  , Схема);											
	ПараметрыОтчета.Вставить("ДанныеГруппировокОтчета", МассивГруппировок);											
	
КонецФункции

Процедура ПередКомпоновкойМакета(ПараметрыОтчета, КомпоновщикНастроекОтчета)
	
	Схема = ПараметрыОтчета.СхемаКомпоновкиДанных;
	МассивГруппировок = ПараметрыОтчета.ДанныеГруппировокОтчета;
	
	КомпоновщикНастроекОтчета.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	
	ГруппировкаДокумент = КомпоновщикНастроекОтчета.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ДобавитьПолеГруппировки(ГруппировкаДокумент.ПоляГруппировки.Элементы, "ДокументОтчета");
	ГруппировкаДокумент.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ГруппировкаДокумент.ПараметрыВывода.УстановитьЗначениеПараметра("ТипМакета", ТипМакетаГруппировкиКомпоновкиДанных.Вертикальный);
	ГруппировкаДокумент.Имя = "ДокументОтчета";
	
	ГруппировкаРазделитель = ГруппировкаДокумент.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ДобавитьПолеГруппировки(ГруппировкаРазделитель.ПоляГруппировки.Элементы, "Разделитель");
	ГруппировкаРазделитель.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ГруппировкаРазделитель.ПараметрыВывода.УстановитьЗначениеПараметра("ТипМакета", ТипМакетаГруппировкиКомпоновкиДанных.Вертикальный);
	ГруппировкаРазделитель.Имя = "Разделитель";
	
	ТаблицаРазделитель = ГруппировкаРазделитель.Структура.Добавить(Тип("ТаблицаКомпоновкиДанных"));
	ТаблицаРазделитель.ПараметрыВывода.УстановитьЗначениеПараметра("АвтоПозицияРесурсов", АвтоПозицияРесурсовКомпоновкиДанных.НеИспользовать);
	
	Для Каждого Группировка Из МассивГруппировок Цикл
				
		СтруктураПредставлениеИзмерений     = Группировка.СтруктураПредставлениеИзмерений;
		СтруктураПредставлениеРесурсов      = Группировка.СтруктураПредставлениеРесурсов;
		СтруктураПредставлениеРеквизитов    = Группировка.СтруктураПредставлениеРеквизитов;
		
		СтруктураПредставлениеДанныхРасчета = Неопределено;
		Группировка.Свойство("СтруктураПредставлениеДанныхРасчета", СтруктураПредставлениеДанныхРасчета);
		
		Если СтруктураПредставлениеИзмерений.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ СтруктураПредставлениеИзмерений.Свойство("ПредставлениеРегистра") Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРегистра = СтруктураПредставлениеИзмерений.ИмяРегистра;
		СтруктураПредставлениеИзмерений.Удалить("ИмяРегистра");
		
		ЭтоРегистрБухгалтерии = ИмяРегистра = "БУ" ИЛИ ИмяРегистра = "НУ";
		
		ГруппировкаЗаголовокРегистра = ГруппировкаДокумент.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ДобавитьПолеГруппировки(ГруппировкаЗаголовокРегистра.ПоляГруппировки.Элементы, "ПредставлениеРегистра" + ИмяРегистра);
		
		Таблица = ГруппировкаЗаголовокРегистра.Структура.Добавить(Тип("ТаблицаКомпоновкиДанных"));
		Таблица.ПараметрыВывода.УстановитьЗначениеПараметра("АвтоПозицияРесурсов", АвтоПозицияРесурсовКомпоновкиДанных.НеИспользовать);
		
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(Таблица, "Заголовок", СтруктураПредставлениеИзмерений.ПредставлениеРегистра);
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(Таблица, "ВыводитьЗаголовок", ТипВыводаТекстаКомпоновкиДанных.Выводить);
		
		СтруктураПредставлениеИзмерений.Удалить("ПредставлениеРегистра");
		
		Структура = Таблица.Строки.Добавить();
		
		Если СтруктураПредставлениеДанныхРасчета <> Неопределено И СтруктураПредставлениеДанныхРасчета.Количество() <> 0 Тогда
			ПодгруппаДанныеРасчета = Структура.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
			ПодгруппаДанныеРасчета.Расположение = РасположениеПоляКомпоновкиДанных.Вертикально;
			ПодгруппаДанныеРасчета.Заголовок = "Данные расчета";
			Для Каждого ПолеРасчета Из СтруктураПредставлениеДанныхРасчета Цикл
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(ПодгруппаДанныеРасчета, ПолеРасчета.Ключ);
			КонецЦикла;
		КонецЕсли;
		
		Если СтруктураПредставлениеИзмерений.Свойство("ВидДвижения" + ИмяРегистра) Тогда
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(Структура.Выбор, "ВидДвижения" + ИмяРегистра);
			СтруктураПредставлениеИзмерений.Удалить("ВидДвижения" + ИмяРегистра);
		КонецЕсли;
		
		ПодгруппаИзмерения = Структура.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
		Если НЕ ЭтоРегистрБухгалтерии Тогда
			ПодгруппаИзмерения.Расположение = РасположениеПоляКомпоновкиДанных.Вертикально;
		КонецЕсли;
		ПодгруппаИзмерения.Заголовок = "Измерения";
		Для Каждого ПолеИзмерения Из СтруктураПредставлениеИзмерений Цикл
			Если ПолеИзмерения.Ключ = "НомерСтроки" + ИмяРегистра Тогда
				Продолжить;
			КонецЕсли;
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(ПодгруппаИзмерения, ПолеИзмерения.Ключ);
		КонецЦикла;
		
		Если СтруктураПредставлениеРесурсов.Количество() <> 0 Тогда
			ПодгруппаРесурсы = Структура.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
			Если НЕ ЭтоРегистрБухгалтерии Тогда
				ПодгруппаРесурсы.Расположение = РасположениеПоляКомпоновкиДанных.Вертикально;
			КонецЕсли;
			ПодгруппаРесурсы.Заголовок = "Ресурсы";
			Для Каждого ПолеРесурса Из СтруктураПредставлениеРесурсов Цикл
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(ПодгруппаРесурсы, ПолеРесурса.Ключ);
			КонецЦикла;
		КонецЕсли;
		
		Если СтруктураПредставлениеРеквизитов.Количество() <> 0 Тогда
			ПодгруппаРеквизиты = Структура.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
			Если НЕ ЭтоРегистрБухгалтерии Тогда
				ПодгруппаРеквизиты.Расположение = РасположениеПоляКомпоновкиДанных.Вертикально;
			КонецЕсли;
			ПодгруппаРеквизиты.Заголовок = "Реквизиты";
			Для Каждого ПолеРеквизита Из СтруктураПредставлениеРеквизитов Цикл
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(ПодгруппаРеквизиты, ПолеРеквизита.Ключ);
			КонецЦикла;
		КонецЕсли;
		
		Если ИмяРегистра = "БУ" Тогда
			Структура.Имя = "РегистрБухгалтерииТиповой";
		ИначеЕсли ИмяРегистра = "НУ" Тогда
			Структура.Имя = "РегистрБухгалтерииНалоговый";
		КонецЕсли;
		
	КонецЦикла;
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекОтчета, "ДокументОтчета", ПараметрыОтчета.Документ);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроекОтчета, "ПС", Символы.ПС);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекОтчета.Настройки, "МакетОформления", "МакетОформленияОтчетов");
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекОтчета.Настройки, "АвтоПозицияРесурсов", АвтоПозицияРесурсовКомпоновкиДанных.НеИспользовать);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекОтчета.Настройки, "ВыводитьПараметрыДанных", ТипВыводаТекстаКомпоновкиДанных.НеВыводить);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметрВывода(КомпоновщикНастроекОтчета.Настройки, "ВыводитьОтбор", ТипВыводаТекстаКомпоновкиДанных.НеВыводить);
	
КонецПроцедуры

Процедура ДобавитьПолеГруппировки(Группировка, Наименование)
	
	ГруппировкаСтр      = Группировка.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ГруппировкаСтр.Поле = Новый ПолеКомпоновкиДанных(Наименование);
	ГруппировкаСтр.Использование = Истина;
	
КонецПроцедуры

// Добавляет в набор данных поле набора данных
Функция ДобавитьПолеНабораДанных(НаборДанных, Поле, Заголовок, ПутьКДанным = Неопределено)
	
	Если ПутьКДанным = Неопределено Тогда
		ПутьКДанным = Поле;
	КонецЕсли;
	
	ПолеНабораДанных = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
	ПолеНабораДанных.Поле        = Поле;
	ПолеНабораДанных.Заголовок   = Заголовок;
	ПолеНабораДанных.ПутьКДанным = ПутьКДанным;
	Возврат ПолеНабораДанных;
	
КонецФункции

// Функция добавляет поле итога в схему компоновки данных. Если параметр Выражение не указан, используется Сумма(ПутьКДанным)
Функция ДобавитьПолеИтога(СхемаКомпоновкиДанных, ПутьКДанным, Выражение = Неопределено)
	
	Если Выражение = Неопределено Тогда
		Выражение = "Сумма(" + ПутьКДанным + ")";
	КонецЕсли;
	
	ПолеИтога = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
	ПолеИтога.ПутьКДанным = ПутьКДанным;
	ПолеИтога.Выражение = Выражение;
	Возврат ПолеИтога;
	
КонецФункции


#КонецЕсли