#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Возврат Новый Структура("ИспользоватьПередКомпоновкойМакета,
							|ИспользоватьПослеКомпоновкиМакета,
							|ИспользоватьПослеВыводаРезультата,
							|ИспользоватьДанныеРасшифровки",
							Истина, Истина, Истина, Истина);
							
КонецФункции

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале = Истина) Экспорт
	
	ЗаголовокОтчета = НСтр("ru = 'Шахматная ведомость %1'");
	ЗаголовокОтчета = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ЗаголовокОтчета, БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода));
	
	Возврат ЗаголовокОтчета;
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
	Иначе
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	Иначе
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	Если Не ПараметрыОтчета.ПоСубсчетам Тогда 
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Отбор, "СчетДт.Родитель", ПланыСчетов.Типовой.ПустаяСсылка(),ВидСравненияКомпоновкиДанных.Равно, Истина, , ТипПримененияОтбораКомпоновкиДанных.Иерархия);
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроек.Настройки.Структура[0].Колонки[0].Отбор, "СчетКт.Родитель", ПланыСчетов.Типовой.ПустаяСсылка(),ВидСравненияКомпоновкиДанных.Равно, Истина, , ТипПримененияОтбораКомпоновкиДанных.Иерархия);
	КонецЕсли;
	
	Если Не ПараметрыОтчета.ПоЗабалансовымСчетам Тогда 
		НовыйОтбор = БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроек, "СчетДт.Забалансовый", Ложь);
		НовыйОтбор = БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(КомпоновщикНастроек, "СчетКт.Забалансовый", Ложь);	
	КонецЕсли;
	
	Если ПараметрыОтчета.ДанныеПоПодразделам Тогда		
		КомпоновщикНастроек.Настройки.Структура[0].Колонки[0].ПоляГруппировки.Элементы[0].ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Иерархия;
		КомпоновщикНастроек.Настройки.Структура[0].Строки[0].ПоляГруппировки.Элементы[0].ТипГруппировки  = ТипГруппировкиКомпоновкиДанных.Иерархия;		
	КонецЕсли;
	
	Если ПараметрыОтчета.ПоВалютам Тогда		
		КомпоновщикНастроек.Настройки.Структура[0].Колонки[0].Структура[0].Использование = Истина;
		КомпоновщикНастроек.Настройки.Структура[0].Строки[0].Структура[0].Использование  = Истина;		
	КонецЕсли;
	
	БухгалтерскиеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, ПараметрыОтчета);
	
КонецПроцедуры

Процедура ПослеКомпоновкиМакета(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	Если Не ПараметрыОтчета.ПоВалютам Тогда 
		Для Каждого Макет Из МакетКомпоновки.Макеты Цикл
			Если Макет.Макет.Количество() > 1 Тогда 
				Макет.Макет.Удалить(Макет.Макет[1]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);

	Если Результат.Области.Найти("Заголовок") = Неопределено Тогда
		Результат.ФиксацияСверху = ?(ПараметрыОтчета.ПоВалютам, 3, 1);
	Иначе
		Результат.ФиксацияСверху = Результат.Области.Заголовок.Низ + ?(ПараметрыОтчета.ПоВалютам, 3, 1);
	КонецЕсли;
	
	Результат.ФиксацияСлева = 1;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


#КонецЕсли