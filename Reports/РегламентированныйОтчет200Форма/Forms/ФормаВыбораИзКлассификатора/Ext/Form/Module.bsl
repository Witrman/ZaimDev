////////////////////////////////////////////////////////////////////////////////
// Описание формы
// Параметры фомры:
//  ИмяМакета - Строка - передается имя макета.
//  ИмяСекции - Строка - передается имя секции макета.
//  ПолучатьПолныеДанные - Булево - признак возврата полных данных. Если Истина то возвращается структура "Код" и "Наименование" если Ложь то возвращается только "Код".
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоГрупп = 2;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ИмяМакета) ИЛИ НЕ ЗначениеЗаполнено(Параметры.ИмяСекции) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ЗаголовокФормы = "";
	
	Если Параметры.Свойство("Заголовок", ЗаголовокФормы) И ЗначениеЗаполнено(ЗаголовокФормы) Тогда
		ЭтаФорма.АвтоЗаголовок = Ложь;
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	ИмяМакета 		 = Параметры.ИмяМакета;
	ИмяСекции 		 = Параметры.ИмяСекции;
	ТекущийКодСтроки = Параметры.ТекущийКодСтроки;
	
	ПолучатьПолныеДанные = Параметры.ПолучатьПолныеДанные;
	
	Дерево = РеквизитФормыВЗначение("Таблица",Тип("ДеревоЗначений"));
	Дерево.Строки.Очистить();
	
	Макет = РеквизитФормыВЗначение("ОтчетОбъект").ПолучитьМакет("КодыВидов");
	
	Если Параметры.ИмяМакета = "КодыТНВЭД" Тогда
		МакетТНВЭД = Макет;
		СписокТНВЭДПереченьИзъятий = РегистрыСведений.ТоварыСПониженнойСтавкойПошлин.ЗаполнитьСписокПереченьИзъятий();
		ЗаполнениеТаблицыТНВЭД(Параметры.ИмяСекции, МакетТНВЭД, Дерево);
		УправлениеФормой(ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Макет) = Тип("ТабличныйДокумент") Тогда
		
		ТекстШапки = Макет.ПолучитьОбласть("Шапка|Наименование").ТекущаяОбласть.Текст;
		Элементы.ДекорацияНадписьЗаголовка.Заголовок = СокрЛП(ТекстШапки);
		
		Область = Макет.Области[Параметры.ИмяСекции];
		
		Для Ном = Область.Верх По Область.Низ Цикл
			Если НЕ СокрЛП(Макет.Область(Ном, 5).Текст) = "" Тогда
				Если НЕ СокрЛП(Макет.Область(Ном, 1).Текст) = "" Тогда
					НоваяСтрока = Дерево.Строки.Добавить();
					НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
					НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
					НоваяСтрока.Группа = 0;
				ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "" Тогда
					Подстрока = НоваяСтрока.Строки.Добавить();
					Подстрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 2).Текст);
					Подстрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
					Подстрока.Группа = 1;
				ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" Тогда
					ПодстрокаПодстроки = Подстрока.Строки.Добавить();
					ПодстрокаПодстроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 3).Текст);
					ПодстрокаПодстроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
					ПодстрокаПодстроки.Группа = 2;
				ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 4).Текст) = "" Тогда
					ПодстрокаПодстрокиСтроки = ПодстрокаПодстроки.Строки.Добавить();
					ПодстрокаПодстрокиСтроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 4).Текст);
					ПодстрокаПодстрокиСтроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
					ПодстрокаПодстрокиСтроки.Группа = 3;
					Группировать = Истина; 
				КонецЕсли;
				КоличествоГрупп = 3;
				
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 4).Текст) = "" Тогда
				Если НЕ СокрЛП(Макет.Область(Ном, 1).Текст) = "" Тогда
					НоваяСтрока = Дерево.Строки.Добавить();
					НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
					НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 4).Текст);
					НоваяСтрока.Группа = 0;
				ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "" Тогда
					Подстрока = НоваяСтрока.Строки.Добавить();
					Подстрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 2).Текст);
					Подстрока.Наименование = СокрЛП(Макет.Область(Ном, 4).Текст);
					Подстрока.Группа = 1;
				ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" Тогда
					ПодстрокаПодстроки = Подстрока.Строки.Добавить();
					ПодстрокаПодстроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 3).Текст);
					ПодстрокаПодстроки.Наименование = СокрЛП(Макет.Область(Ном, 4).Текст);
					ПодстрокаПодстроки.Группа = 2;
					Группировать = Истина;
				КонецЕсли;
				КоличествоГрупп = 2;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" Тогда 
				НоваяСтрока = Дерево.Строки.Добавить();
				НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
				НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 2).Текст);
				НоваяСтрока.Группа = 1;
				ОбластьПодстроки = Макет.Области[Параметры.ИмяСекции + "_" + СтрЗаменить(НоваяСтрока.КодСтроки,".","_")];
				Для НомПодСекции = ОбластьПодстроки.Верх По ОбластьПодстроки.Низ Цикл
					Подстрока = НоваяСтрока.Строки.Добавить();
					Подстрока.КодСтроки    = СокрЛП(Макет.Область(НомПодСекции, 1).Текст);
					Подстрока.Наименование = СокрЛП(Макет.Область(НомПодСекции, 2).Текст);
					Подстрока.КодПодстроки = НоваяСтрока.КодСтроки + "." + СокрЛП(Макет.Область(НомПодСекции, 1).Текст);
					Подстрока.Группа = 0;
				КонецЦикла;	
			Иначе	
				Строка = Дерево.Строки.Добавить();
				Строка.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
				Строка.Наименование = СокрЛП(Макет.Область(Ном, 2).Текст);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Макет) = Тип("ТекстовыйДокумент") Тогда
		
		КлассификаторXML = Макет.ПолучитьТекст();
		ТаблицаПоказателей = ОбщегоНазначения.ЗначениеИзСтрокиXML(КлассификаторXML);
		
		Если НЕ Тип(ТаблицаПоказателей) =  Тип("ТаблицаЗначений") Тогда
			Возврат;
		КонецЕсли;
		
		Если ТаблицаПоказателей.Колонки.Найти("КодТНВЭД") = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для Каждого СтрокаПоказателя Из ТаблицаПоказателей Цикл
			НоваяСтрока = Дерево.Строки.Добавить();
			НоваяСтрока.КодСтроки    = СокрЛП(СтрокаПоказателя.КодТНВЭД);
			НоваяСтрока.Наименование = СокрЛП(СтрокаПоказателя.НаименованиеСтроки);
		КонецЦикла;
	КонецЕсли;
     
   Если ЭтаФорма.ИмяСекции = "КатегорииФизическихЛиц2021" ИЛИ ЭтаФорма.ИмяСекции = "КатегорииФизическихЛиц2023" Тогда
       
       Если Параметры.СтруктураДляПоиска.Свойство("Код") Тогда
           
           Если ТипЗнч(Параметры.СтруктураДляПоиска.Код) = Тип("СписокЗначений") Тогда
               
               Для Каждого СтрокаСписка Из Параметры.СтруктураДляПоиска.Код Цикл
                   
                   // сохраним текущие отмеченные структурные единицы
                   Если Дерево.Строки.Количество() <> 0 Тогда
                       СохраненныйСписок = Новый СписокЗначений;
                       
                       СтруктураПоиска = Новый Структура();
                       СтруктураПоиска.Вставить("КодСтроки", СтрокаСписка.Значение);
                       
                       НайденныеСтроки = Дерево.Строки.НайтиСтроки(СтруктураПоиска, Истина);
                       Если НайденныеСтроки.Количество() > 0 Тогда
                           СтрокаДерева = НайденныеСтроки[0];
                           СтрокаДерева.ОтметкаЗаполнения = 1;                          
                       КонецЕсли;
                   КонецЕсли;
               КонецЦикла;
           КонецЕсли;
       КонецЕсли;
       Элементы.ГруппаПроизвольноеЗначение.Видимость = Ложь;
   КонецЕсли; 

    ЗначениеВРеквизитФормы(Дерево,"Таблица");

	Если ТекущийКодСтроки <> Неопределено И ТекущийКодСтроки <> "" Тогда
		ТекущийКодСтроки = ?(Прав(СокрЛП(ТекущийКодСтроки),1) = ".", Лев(ТекущийКодСтроки, СтрДлина(СокрЛП(ТекущийКодСтроки)) -1), СокрЛП(ТекущийКодСтроки));	
		
		МассивНайденныхСтрок = Новый Массив;
		НайтиСтрокиВДанныхФормыДерево(Таблица.ПолучитьЭлементы(), "КодСтроки", ТекущийКодСтроки, МассивНайденныхСтрок);
		Если МассивНайденныхСтрок.Количество() <> 0 Тогда
			Элементы.Таблица.ТекущаяСтрока = МассивНайденныхСтрок[0].ПолучитьИдентификатор();
        Иначе
            ПроизвольноеЗначение = ТекущийКодСтроки;
            ИспользуетсяПроизвольноеЗначение = ЗначениеЗаполнено(ПроизвольноеЗначение);
        КонецЕсли;
        
    КонецЕсли;
    	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Не Форма.ИмяМакета = "КодыТНВЭД" Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Неопределено;
	ТекущаяСтрока = Элементы.Таблица.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Форма.Таблица.НайтиПоИдентификатору(ТекущаяСтрока);
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.КодСтроки <> "" Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ВходитВПереченьИзъятия) Тогда
			Элементы.НадписьВходитВПереченьИзъятий.Видимость = Истина;
		Иначе
			Элементы.НадписьВходитВПереченьИзъятий.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиСтрокиВДанныхФормыДерево(ЭлементыДанныхФормыДерево, ИмяКолонки, ИскомоеЗначение, МассивНайденныхСтрок)
	
	Для Каждого ЭлементДерева Из ЭлементыДанныхФормыДерево Цикл
		
		ЗначенияСовпадают = Истина;
		
		Если ЭлементДерева[ИмяКолонки] <> ИскомоеЗначение  Тогда
			ЗначенияСовпадают = Ложь;
		КонецЕсли;
		
		Если ЗначенияСовпадают Тогда
			МассивНайденныхСтрок.Добавить(ЭлементДерева);
		КонецЕсли;
		
		НайтиСтрокиВДанныхФормыДерево(ЭлементДерева.ПолучитьЭлементы(), "КодПодстроки", ИскомоеЗначение, МассивНайденныхСтрок);
	КонецЦикла;
	
	Возврат МассивНайденныхСтрок;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПроизвольноеЗначениеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПроизвольноеЗначение) И НЕ ИспользуетсяПроизвольноеЗначение Тогда
		ИспользуетсяПроизвольноеЗначение = Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(ПроизвольноеЗначение) И ИспользуетсяПроизвольноеЗначение Тогда
		ИспользуетсяПроизвольноеЗначение = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ТАБЛИЦА"

&НаКлиенте
Процедура ТаблицаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеВозврата = Неопределено;
    
    Если ЭтаФорма.ИмяСекции = "КатегорииФизическихЛиц2021" Тогда
        
        СписокОтмеченныхКодовСтрок = Новый СписокЗначений;
        
        СписокВыбранныхЭлементов(Таблица, СписокОтмеченныхКодовСтрок);
        
        ОповеститьОВыборе(СписокОтмеченныхКодовСтрок);
        
        Возврат;
        
    КонецЕсли; 

	Если НЕ ПустаяСтрока(Элемент.ТекущиеДанные.КодПодстроки) Тогда
		КодСтроки = Элемент.ТекущиеДанные.КодПодстроки;
		ИмяКолонки = "КодПодстроки";
	Иначе
		КодСтроки = Элемент.ТекущиеДанные.КодСтроки;
		ИмяКолонки = "КодСтроки";
 	КонецЕсли;
	
	Выбор(КодСтроки, ЗначениеВозврата, ИмяКолонки);
	
	Если ЗначениеВозврата = Неопределено Тогда 
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеВозврата) = Тип("Структура")
			И ЗначениеВозврата.Свойство("Развернуть") Тогда
		СтрокаДерева = Элементы.Таблица.ТекущаяСтрока;
		
		Если Элементы.Таблица.Развернут(СтрокаДерева) Тогда
			Элементы.Таблица.Свернуть(СтрокаДерева);
		Иначе	
			Элементы.Таблица.Развернуть(СтрокаДерева, Истина);
		КонецЕсли;	
		Возврат
	КонецЕсли;
	
	ОповеститьОВыборе(ЗначениеВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтметкаЗаполненияПриИзменении(Элемент)
    
    СтрокаТабличнойЧасти = Элементы.Таблица.ТекущиеДанные;
    Если СтрокаТабличнойЧасти.ОтметкаЗаполнения = Ложь Тогда
        СтрокаТабличнойЧасти.Сумма = 0;     
    КонецЕсли;
    ИтогиНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ИтогиНаСервере()
    
	Дерево = РеквизитФормыВЗначение("Таблица",Тип("ДеревоЗначений"));
    
    СуммаПоСтроке = 0;
    Для каждого СтрокаТаблицы Из Дерево.Строки Цикл
    
    	СуммаПоСтроке = СуммаПоСтроке + СтрокаТаблицы.Сумма;
    
    КонецЦикла; 
    
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСуммаПриИзменении(Элемент)
    
    ИтогиНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбранныхЭлементов(РодительскаяСтрока, СписокВыбранных)

	Для Каждого СтрокаДерева Из РодительскаяСтрока.ПолучитьЭлементы() Цикл
		
		Если СтрокаДерева.ОтметкаЗаполнения = 1 Тогда
			СписокВыбранных.Добавить(СтрокаДерева.КодСтроки);	
		КонецЕсли;
		
		Если СтрокаДерева.ПолучитьЭлементы().Количество() > 0 Тогда
			СписокВыбранныхЭлементов(СтрокаДерева, СписокВыбранных);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура МассивВыбранныхЭлементов(РодительскаяСтрока, СписокВыбранных)

	Для Каждого СтрокаДерева Из РодительскаяСтрока.ПолучитьЭлементы() Цикл
		
		СписокВыбранных.Добавить(СтрокаДерева);	
		
		Если СтрокаДерева.ПолучитьЭлементы().Количество() > 0 Тогда
			МассивВыбранныхЭлементов(СтрокаДерева, СписокВыбранных);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриАктивизацииСтроки(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	
	ЗначениеВозврата = Неопределено;
    
    Если ЭтаФорма.ИмяСекции = "КатегорииФизическихЛиц2021" ИЛИ ЭтаФорма.ИмяСекции = "КатегорииФизическихЛиц2023" Тогда
        
        СписокОтмеченныхКодовСтрок = Новый СписокЗначений;
        
        СписокВыбранныхЭлементов(Таблица, СписокОтмеченныхКодовСтрок);
        
        ОповеститьОВыборе(СписокОтмеченныхКодовСтрок);
        
        Возврат;
        
    КонецЕсли; 

	Если НЕ ПустаяСтрока(Элементы.Таблица.ТекущиеДанные.КодПодстроки) Тогда
		КодСтроки = Элементы.Таблица.ТекущиеДанные.КодПодстроки;
		ИмяКолонки = "КодПодстроки";
	Иначе
		КодСтроки = Элементы.Таблица.ТекущиеДанные.КодСтроки;
		ИмяКолонки = "КодСтроки";
 	КонецЕсли;
	
	Выбор(КодСтроки, ЗначениеВозврата, ИмяКолонки);
	
	Если ЗначениеВозврата = Неопределено Тогда 
		Возврат
	КонецЕсли;
	
    ЗначениеВозврата.КодСтроки = ?(ИспользуетсяПроизвольноеЗначение, ПроизвольноеЗначение, ЗначениеВозврата.КодСтроки);
	
	ОповеститьОВыборе(ЗначениеВозврата);
    
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура Выбор(КодСтроки, ЗначениеВозврата, ИмяКолонки)
	
	Дерево = РеквизитФормыВЗначение("Таблица");
	
	ВыбраннаяСтрока = Дерево.Строки.Найти(КодСтроки, "КодСтроки", Истина);
	
	Если Группировать = Истина Тогда
		Если ИмяМакета = "КодыТНВЭД" Тогда
			ВыборТНВЭД(ВыбраннаяСтрока, ЗначениеВозврата);
			Возврат
		КонецЕсли;
		Если Не ВыбраннаяСтрока.Родитель = Неопределено И ВыбраннаяСтрока.Группа = КоличествоГрупп Тогда
			Если ПолучатьПолныеДанные Тогда
				ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", ВыбраннаяСтрока.КодСтроки, ВыбраннаяСтрока.Наименование);
			Иначе
				ЗначениеВозврата = ВыбраннаяСтрока.КодСтроки;
			КонецЕсли;
		Иначе
			Возврат;
		КонецЕсли;
	Иначе	
		СтандартнаяОбработка = Ложь;
		Если ПолучатьПолныеДанные Тогда
			ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", ВыбраннаяСтрока.КодСтроки, ВыбраннаяСтрока.Наименование);
		Иначе
			ЗначениеВозврата = ВыбраннаяСтрока.КодСтроки;
		КонецЕсли;
    КонецЕсли;
	
	Если ВозвращатьСтруктуруДополнительныхПараметров Тогда
		ЗначениеВозврата = Новый Структура("ЗначениеВыбора, Команда, СтруктураДопПараметров",ЗначениеВозврата, "ПодборИзКлассификатора", СтруктураДополнительныхПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыборТНВЭД(ВыбраннаяСтрока, ЗначениеВозврата)

	Если Группировать = Истина Тогда
		Если Не ВыбраннаяСтрока.Родитель = Неопределено И ВыбраннаяСтрока.Группа = КоличествоГрупп Тогда 
			Если ПолучатьПолныеДанные Тогда
				ЗначениеВозврата = Новый Структура("КодСтроки, Наименование,ВходитВПереченьИзъятия", ВыбраннаяСтрока.КодСтроки, ВыбраннаяСтрока.Наименование, ВыбраннаяСтрока.ВходитВПереченьИзъятия);
			Иначе
				ЗначениеВозврата = ВыбраннаяСтрока.КодСтроки;
			КонецЕсли;
		Иначе	
			Если СтрДлина(ВыбраннаяСтрока.КодСтроки) = 2 Тогда 
				ИмяСекции = "Область"+ВыбраннаяСтрока.КодСтроки;
				
				ДоЗаписьТаблицыТНВЭД(ИмяСекции, Неопределено);
				
				МассивНайденныхСтрок = Новый Массив;
				НайтиСтрокиВДанныхФормыДерево(Таблица.ПолучитьЭлементы(), "КодСтроки", ВыбраннаяСтрока.КодСтроки, МассивНайденныхСтрок);
				Если МассивНайденныхСтрок.Количество() <> 0 Тогда
					Элементы.Таблица.ТекущаяСтрока = МассивНайденныхСтрок[0].ПолучитьИдентификатор();
				КонецЕсли;
			КонецЕсли;
			
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ВозвращатьСтруктуруДополнительныхПараметров Тогда
		ЗначениеВозврата = Новый Структура("ЗначениеВыбора, Команда, СтруктураДопПараметров",ЗначениеВозврата, "ПодборИзКлассификатора", СтруктураДополнительныхПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеТаблицыТНВЭД(ИмяСекции, Макет, Дерево)
	
	ТекстШапки = Макет.ПолучитьОбласть("Шапка|Наименование").ТекущаяОбласть.Текст;
	Элементы.ДекорацияНадписьЗаголовка.Заголовок = СокрЛП(ТекстШапки);
	
	Область = Макет.Области["Область00"];
	
	АктуальнаяВетка = Неопределено;
	ТекСтрока = Неопределено;
	Для Ном = Область.Верх По Область.Низ Цикл
		Если НЕ СокрЛП(Макет.Область(Ном, 5).Текст) = "" Тогда
			Если НЕ СокрЛП(Макет.Область(Ном, 1).Текст) = "" Тогда
				НоваяСтрока = Дерево.Строки.Добавить();
				НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
				НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				НоваяСтрока.Группа = 0;
				
				АктуальнаяВетка = НоваяСтрока;
				// Обнуляем последующие
				Подстрока = Неопределено;
				ПодстрокаПодстроки = Неопределено;
				
				ТекСтрока = НоваяСтрока;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "" И НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "#" Тогда
				Если НоваяСтрока <> Неопределено Тогда
					// в пределах стандартной иерархии
					РодительскаяВетка = НоваяСтрока;
				Иначе
					//родитель не определен. Включаем в последнюю актуальную группу
					РодительскаяВетка = АктуальнаяВетка;
				КонецЕсли;		
				Подстрока = РодительскаяВетка.Строки.Добавить();
				Подстрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 2).Текст);
				Подстрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				Подстрока.Группа = 1;
				ТекСтрока = Подстрока;
				
				АктуальнаяВетка = Подстрока;
				// Обнуляем последующие
				ПодстрокаПодстроки = Неопределено;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" И НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "#" Тогда
				Если Подстрока <> Неопределено Тогда
					// в пределах стандартной иерархии
					РодительскаяВетка = Подстрока;
				Иначе
					//родитель не определен. Включаем в последнюю актуальную группу
					РодительскаяВетка = АктуальнаяВетка;
				КонецЕсли;
				ПодстрокаПодстроки = РодительскаяВетка.Строки.Добавить();
				ПодстрокаПодстроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 3).Текст);
				ПодстрокаПодстроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				ПодстрокаПодстроки.Группа = 2;
				
				ТекСтрока = ПодстрокаПодстроки;
				АктуальнаяВетка = ПодстрокаПодстроки;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 4).Текст) = "" Тогда
				Если ПодстрокаПодстроки <> Неопределено Тогда
					// в пределах стандартной иерархии
					Если СокрЛП(Макет.Область(Ном, 2).Текст) = "#" Тогда
						РодительскаяВетка = НоваяСтрока;
					ИначеЕсли СокрЛП(Макет.Область(Ном, 3).Текст) = "#" Тогда
						РодительскаяВетка = Подстрока;
					Иначе
						РодительскаяВетка = ПодстрокаПодстроки;
					КонецЕсли;
				Иначе
					//родитель не определен. Включаем в последнюю актуальную группу
					Если СокрЛП(Макет.Область(Ном, 2).Текст) = "#" Тогда
						РодительскаяВетка = НоваяСтрока;
					ИначеЕсли СокрЛП(Макет.Область(Ном, 3).Текст) = "#" Тогда
						РодительскаяВетка = Подстрока;
					Иначе
						РодительскаяВетка = АктуальнаяВетка;
					КонецЕсли;
				КонецЕсли;
				ПодстрокаПодстрокиСтроки = РодительскаяВетка.Строки.Добавить();
				ПодстрокаПодстрокиСтроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 4).Текст);
				ПодстрокаПодстрокиСтроки.КодПодстроки = СокрЛП(Макет.Область(Ном, 4).Текст);
				ПодстрокаПодстрокиСтроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				ПодстрокаПодстрокиСтроки.Группа = 3;
				ТекСтрока = ПодстрокаПодстрокиСтроки;
				Группировать = Истина;
			
			КонецЕсли;
			КоличествоГрупп = 3;
		
		Иначе 
			Строка = Дерево.Строки.Добавить();
			Строка.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
			Строка.Наименование = СокрЛП(Макет.Область(Ном, 2).Текст);
			ТекСтрока = Строка;
			
		КонецЕсли;
		
		Если ТекСтрока <>Неопределено И СписокТНВЭДПереченьИзъятий.НайтиПоЗначению(ТекСтрока.КодСтроки) <>Неопределено Тогда
			ТекСтрока.ВходитВПереченьИзъятия = НСтр("ru ='Товар входит в перечень изъятий'");
		Иначе
			ТекСтрока.ВходитВПереченьИзъятия = "";
		КонецЕсли;
	КонецЦикла;
	
	Группировать = Истина;
	
	ЗначениеВРеквизитФормы(Дерево, "Таблица");
	
	//инициализируемся на строке, если было уже выбрано значение из классификатора
	Если ТекущийКодСтроки <> Неопределено И ТекущийКодСтроки <> "" Тогда
		ТекущийКодСтроки = ?(Прав(СокрЛП(ТекущийКодСтроки),1) = ".", Лев(ТекущийКодСтроки, СтрДлина(СокрЛП(ТекущийКодСтроки)) -1), СокрЛП(ТекущийКодСтроки));
		ИмяСекции = "Область"+Лев(ТекущийКодСтроки,2);
		ДоЗаписьТаблицыТНВЭД(ИмяСекции, Дерево);
		
		МассивНайденныхСтрок = Новый Массив;
		НайтиСтрокиВДанныхФормыДерево(Таблица.ПолучитьЭлементы(), "КодСтроки", ТекущийКодСтроки, МассивНайденныхСтрок);
		Если МассивНайденныхСтрок.Количество() <> 0 Тогда
			Элементы.Таблица.ТекущаяСтрока = МассивНайденныхСтрок[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДоЗаписьТаблицыТНВЭД(ИмяСекции, Дерево)
	
	Если Дерево = Неопределено Тогда
		Дерево = РеквизитФормыВЗначение("Таблица");
	КонецЕсли;
	
	Макет = МакетТНВЭД;
	ТекстШапки = Макет.ПолучитьОбласть("Шапка|Наименование").ТекущаяОбласть.Текст;
	Элементы.ДекорацияНадписьЗаголовка.Заголовок = СокрЛП(ТекстШапки);
	Если Макет.Области.Найти(ИмяСекции) = Неопределено Тогда
		Возврат;
	Иначе
		Область = Макет.Области[ИмяСекции];
	КонецЕсли;
	
	АктуальнаяВетка = Неопределено;
	ТекСтрока = Неопределено;
	Для Ном = Область.Верх По Область.Низ Цикл
		Если НЕ СокрЛП(Макет.Область(Ном, 5).Текст) = "" Тогда 
			Если НЕ СокрЛП(Макет.Область(Ном, 1).Текст) = "" Тогда
				НоваяСтрока = Дерево.Строки.Найти(СокрЛП(Макет.Область(Ном, 1).Текст),"КодСтроки");
				Если НоваяСтрока = Неопределено Тогда
					// в макете нет такой родительской области
					Возврат
				КонецЕсли;
				
				Если НоваяСтрока.Загружен Тогда 
					АктуальнаяВетка = НоваяСтрока;
					Возврат
				КонецЕсли;
				
				НоваяСтрока.Загружен = Истина;
				АктуальнаяВетка = НоваяСтрока;
				// Обнуляем последующие
				Подстрока = Неопределено;
				ПодстрокаПодстроки = Неопределено;
				ТекСтрока = НоваяСтрока;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "" И НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "#" Тогда 
				Если НоваяСтрока <> Неопределено Тогда
					// в пределах стандартной иерархии
					РодительскаяВетка = НоваяСтрока;
				Иначе
					//родитель не определен. Включаем в последнюю актуальную группу
					РодительскаяВетка = АктуальнаяВетка;
				КонецЕсли;
				Подстрока = РодительскаяВетка.Строки.Добавить();
				Подстрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 2).Текст);
				Подстрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				Подстрока.Группа = 1;
				
				АктуальнаяВетка = Подстрока;
				// Обнуляем последующие
				ПодстрокаПодстроки = Неопределено;
				ТекСтрока = Подстрока;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" И НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "#" Тогда 
				Если Подстрока <> Неопределено Тогда
					// в пределах стандартной иерархии
					РодительскаяВетка = Подстрока;
				Иначе
					//родитель не определен. Включаем в последнюю актуальную группу
					РодительскаяВетка = АктуальнаяВетка;
				КонецЕсли;
				ПодстрокаПодстроки = РодительскаяВетка.Строки.Добавить();
				ПодстрокаПодстроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 3).Текст);
				ПодстрокаПодстроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				ПодстрокаПодстроки.Группа = 2;
				
				АктуальнаяВетка = ПодстрокаПодстроки;
				ТекСтрока = ПодстрокаПодстроки;
				
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 4).Текст) = "" Тогда 
				Если ПодстрокаПодстроки <> Неопределено Тогда
					// в пределах стандартной иерархии
					Если СокрЛП(Макет.Область(Ном, 2).Текст) = "#" Тогда
						РодительскаяВетка = НоваяСтрока;
					ИначеЕсли СокрЛП(Макет.Область(Ном, 3).Текст) = "#" Тогда
						РодительскаяВетка = Подстрока;
					Иначе
						РодительскаяВетка = ПодстрокаПодстроки;
					КонецЕсли;
				Иначе
					//родитель не определен. Включаем в последнюю актуальную группу
					Если СокрЛП(Макет.Область(Ном, 2).Текст) = "#" Тогда
						РодительскаяВетка = НоваяСтрока;
					ИначеЕсли СокрЛП(Макет.Область(Ном, 3).Текст) = "#" Тогда
						РодительскаяВетка = Подстрока;
					Иначе
						РодительскаяВетка = АктуальнаяВетка;
					КонецЕсли;
				КонецЕсли;
				ПодстрокаПодстрокиСтроки = РодительскаяВетка.Строки.Добавить();
				ПодстрокаПодстрокиСтроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 4).Текст);
				ПодстрокаПодстрокиСтроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				ПодстрокаПодстрокиСтроки.Группа = 3;	
				
				ТекСтрока = ПодстрокаПодстрокиСтроки;

				Группировать = Истина;
			КонецЕсли;
			КоличествоГрупп = 3;
			
		Иначе 
			Строка = Дерево.Строки.Добавить();
			Строка.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
			Строка.Наименование = СокрЛП(Макет.Область(Ном, 2).Текст);
			ТекСтрока = Строка;
		КонецЕсли;
		
		Если ТекСтрока <>Неопределено И СписокТНВЭДПереченьИзъятий.НайтиПоЗначению(ТекСтрока.КодСтроки) <>Неопределено Тогда
			ТекСтрока.ВходитВПереченьИзъятия = НСтр("ru ='Товар входит в перечень изъятий'");
		Иначе
			ТекСтрока.ВходитВПереченьИзъятия = "";
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево,"Таблица");
	
КонецПроцедуры


