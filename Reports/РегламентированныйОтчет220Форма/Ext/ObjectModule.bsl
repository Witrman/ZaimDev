#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	Функция ТаблицаФормОтчета() Экспорт
		
		ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Дата"));
		ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
		
		ТаблицаФормОтчета = Новый ТаблицаЗначений;
		ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
		ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
		ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
		ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
		
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202008Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу. Форма адаптирована к версии ЭФНО 1.6.1.47 от 01.04.2009г.";
		НоваяФорма.ДатаНачалоДействия = '20080101';
		НоваяФорма.ДатаКонецДействия  = '20081231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202009Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу. Версия шаблона ФНО для ИС СОНО: 220.00.v23.r27 от 19.03.2010г.";
		НоваяФорма.ДатаНачалоДействия = '20090101';
		НоваяФорма.ДатаКонецДействия  = '20091231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202010Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу. Версия шаблона ФНО для ИС СОНО: 220.00.v24.r33 от 25.08.2010 г.";
		НоваяФорма.ДатаНачалоДействия = '20100101';
		НоваяФорма.ДатаКонецДействия  = '20101231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202011Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v25.r44 от 08.04.2011 г.";
		НоваяФорма.ДатаНачалоДействия = '20110101';
		НоваяФорма.ДатаКонецДействия  = '20111231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202012Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v26.r54 от 29.12.2011 г.";
		НоваяФорма.ДатаНачалоДействия = '20120101';
		НоваяФорма.ДатаКонецДействия  = '20121231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202013Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v27.r63 от 31.12.2013 г.";
		НоваяФорма.ДатаНачалоДействия = '20130101';
		НоваяФорма.ДатаКонецДействия  = '20131231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202014Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v28.r67 от 31.12.2013 г.";
		НоваяФорма.ДатаНачалоДействия = '20140101';
		НоваяФорма.ДатаКонецДействия  = '20141231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202015Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v29.r69 от 12.05.2015 г.";
		НоваяФорма.ДатаНачалоДействия = '20150101';
		НоваяФорма.ДатаКонецДействия  = '20151231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202016Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v31.r71 от 13.08.2016 г.";
		НоваяФорма.ДатаНачалоДействия = '20160101';
		НоваяФорма.ДатаКонецДействия  = '20161231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202017Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v31.r72 от 25.12.2016 г.";
		НоваяФорма.ДатаНачалоДействия = '20170101';
		НоваяФорма.ДатаКонецДействия  = '20171231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202018Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v33.r74 от 31.05.2018 г.";
		НоваяФорма.ДатаНачалоДействия = '20180101';
		НоваяФорма.ДатаКонецДействия  = '20181231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202019Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v33.r79 от 27.04.2020 г.";
		НоваяФорма.ДатаНачалоДействия = '20190101';
		НоваяФорма.ДатаКонецДействия  = '20191231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202020Кв4";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v33.r81 от 05.01.2021 г.";
		НоваяФорма.ДатаНачалоДействия = '20200101';
		НоваяФорма.ДатаКонецДействия  = '20201231';
		
		//НоваяФорма = ТаблицаФормОтчета.Добавить();
		//НоваяФорма.ФормаОтчета        = "Форма2202021Кв4";
		//НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v35.r85 от 23.12.2021 г.";
		//НоваяФорма.ДатаНачалоДействия = '20210101';
		//НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202022Кв1";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v37.r89 от 22.12.2022 г.";
		НоваяФорма.ДатаНачалоДействия = '20210101';
		НоваяФорма.ДатаКонецДействия  = '20221231';
		
		НоваяФорма = ТаблицаФормОтчета.Добавить();
		НоваяФорма.ФормаОтчета        = "Форма2202023Кв1";
		НоваяФорма.ОписаниеОтчета     = "Декларация по индивидуальному подоходному налогу.  Версия шаблона ФНО для ИС СОНО: 220.00.v38.r92 от 26.12.2023 г.";
		НоваяФорма.ДатаНачалоДействия = '20230101';
		НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
		
		Возврат ТаблицаФормОтчета;
		
	КонецФункции
	
	Процедура ЗаполнитьАвто(ИДРедакцииОтчета, ПараметрыОтчета) Экспорт
		
		КодФормы = ПараметрыОтчета.КодФормы ;
		
		Если КодФормы = "Форма220" Тогда 		
			Выполнить(ИДРедакцииОтчета + "_Форма220ЗаполнитьАвто(ПараметрыОтчета)");		 
		ИначеЕсли КодФормы = "Форма220_01" Тогда
			Выполнить(ИДРедакцииОтчета + "_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)");
		ИначеЕсли КодФормы = "Форма220_02" Тогда  
			Выполнить(ИДРедакцииОтчета + "_Форма220_02ЗаполнитьАвто(ПараметрыОтчета)");
		ИначеЕсли КодФормы = "Форма220_04" Тогда  
			Выполнить(ИДРедакцииОтчета + "_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)");
		КонецЕсли;
		
	КонецПроцедуры
	
	#КонецОбласти
	
	
	/////////////////////////////////////////////////////////////
	// Общие процедуры и функции для расчета(заполнения) форм 
	#Область СлужебныеПроцедурыИФункции
	
	Функция Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы) Экспорт
		
		Запрос = Новый Запрос();
		
		ТекстЗапросаПоМесяцам = "";
		Для Счетчик = 1 по 12 Цикл
			Дата = ?(Счетчик = 1, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, Счетчик - 1));
			Если Не ТекстЗапросаПоМесяцам = "" Тогда
				ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
				| ОБЪЕДИНИТЬ ВСЕ
				| ";
			КонецЕсли;
			ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
			|	ВЫБРАТЬ
			|	&Дата" + СокрЛП(Счетчик) + " КАК Период		                        
			| ";
			Запрос.УстановитьПараметр("Дата" + СокрЛП(Счетчик), Дата); 	
		КонецЦикла;	
		
		Запрос.УстановитьПараметр("Организация", Налогоплательщик);
		Запрос.Текст = "ВЫБРАТЬ
		|	ВложенныйЗапрос.ПериодГода КАК ПериодГода,
		|	ВложенныйЗапрос.ПериодЗаписи КАК ПериодЗаписи,
		|	УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомНДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК ПериодГода,
		|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодЗаписи
		|	ИЗ
		|		(" + ТекстЗапросаПоМесяцам + ") КАК Периоды
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО (НАЧАЛОПЕРИОДА(УчетнаяПолитикаНалоговыйУчет.Период, ДЕНЬ) <= Периоды.Период)
		|	ГДЕ
		|		УчетнаяПолитикаНалоговыйУчет.Организация = &Организация
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО ВложенныйЗапрос.ПериодЗаписи = УчетнаяПолитикаНалоговыйУчет.Период
		|ГДЕ
		|	УчетнаяПолитикаНалоговыйУчет.Организация = &Организация
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.ПериодГода";
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда 
			Возврат Ложь;
		КонецЕсли;
		
		Результат = Результат.Выгрузить();
		
		Периоды = Новый СписокЗначений;
		СчетчикПериодов = 0;
		НачалоПериода = Истина;
		КонецПериода = Ложь;
		ПериодПрошедший = '00010101';
		Для Каждого Строка Из Результат Цикл 
			ПлательщикНДС = Строка.ОрганизацияЯвляетсяПлательщикомНДС;
			Если Не ПлательщикНДС Тогда 
				Если НачалоПериода Тогда 
					Периоды.Добавить(Строка.ПериодГода, "ПериодНач" + СчетчикПериодов);
					НачалоПериода = Ложь;
					КонецПериода  = Истина;
				КонецЕсли;
				ПериодПрошедший = Строка.ПериодГода;
			Иначе 	
				Если КонецПериода Тогда 
					Периоды.Добавить(КонецМесяца(ПериодПрошедший), "ПериодКон" + СчетчикПериодов);
					СчетчикПериодов = СчетчикПериодов + 1;
					КонецПериода  = Ложь;
					НачалоПериода = Истина;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Кол 	 = Периоды.Количество();
		
		Если Кол = 0 Тогда 
			Возврат Неопределено;
		КонецЕсли;
		
		ПоследняяСтрока 	 = Периоды.Количество() - 1;
		ПредставлениеПериода =  Периоды[ПоследняяСтрока].Представление;
		Если ПредставлениеПериода = "ПериодНач" + СчетчикПериодов Тогда 
			Периоды.Добавить(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, "ПериодКон" + СчетчикПериодов);
		КонецЕсли;
		
		Возврат Периоды;
		
	КонецФункции
	
	Процедура Форма220ЗаполнитьАвто(ПараметрыОтчета, ИДРедакцииОтчета = "Форма2202013Кв4")
		
		ТекИмяФормы = "Форма220";
		
		ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
		КодФормы = ФормаСтруктура.КодФормы;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Если ПараметрыОтчета.Перезаполнить Тогда	
			ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		Если ИДРедакцииОтчета = "Форма2202013Кв4" Тогда
			Форма2202013Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета); 
		ИначеЕсли ИДРедакцииОтчета = "Форма2202014Кв4" Тогда
			Форма2202014Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		ИначеЕсли ИДРедакцииОтчета = "Форма2202015Кв4" Тогда
			Форма2202015Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета); 
		ИначеЕсли ИДРедакцииОтчета = "Форма2202016Кв4" Тогда
			Форма2202016Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		ИначеЕсли ИДРедакцииОтчета = "Форма2202017Кв4" Тогда
			Форма2202017Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		КонецЕсли;
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);  
		
		//////////////////////////////////////////
		// Раздел. Расчетные показатели        	
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура).Выбрать();
		Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
			Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.009.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
			ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.009.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаРезультата = Форма220РассчитатьДанныеФормы(ФормаСтруктура);
		
		ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОтчета.Следующий() Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
			
			ВыборкаДохРас = ВыборкаОтчета.Выбрать();
			
			Пока ВыборкаДохРас.Следующий() Цикл
				ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
				Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
					| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
					
				ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
					| определен код строки <%2>, который относится к вычетам <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
					
				КонецЕсли;								 
			КонецЦикла;
			
			Если ОбластьНачало = "s_220_00_001" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_007" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIA" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIB" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIC" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIID" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIE" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIF" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIG" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IIIH" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.V" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.VI" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.VII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.VIII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.009.IX" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_011" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_016" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_019"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_023" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_024" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.026.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_026_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.026.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_026_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			ИначеЕсли ОбластьНачало = "s_220_00_027" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_028" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_030" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.030.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_031" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_031", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.034.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_034_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.034.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_034_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			Иначе
				ВыборкаДохРас.Сбросить();
				Пока ВыборкаДохРас.Следующий() Цикл
					ДР = ВыборкаДохРас.ДоходРасход;
					Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
						
					ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
						
					КонецЕсли;								 
				КонецЦикла;			
			КонецЕсли;			
		КонецЦикла;
		
		ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_038", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		Ячейка220_00_030 = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_220_00_030");
		
		СписокФормДерева = ФормаСтруктура.СписокФормДерева;
		мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
		мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
		Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
		
		// заполним значения в структуре для последующего правильного авторасчета ячеек, которые входят в основную строку
		// 100.00.030 включает 220.00.030.I
		мСтруктураЗначений.Вставить("s_220_00_030", Ячейка220_00_030);	
		
		ИтогЗначение = Ячейка220_00_030 + РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, "s_220_00_030_1");
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(ИтогЗначение));
		
		// Заполняем поле "Представленные приложения"
		Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
			ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
			Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
				Строка = мСписокФормБезИерархии.Строки.Найти(ТекИмяФормы, "КодФормы");
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры // Форма220ЗаполнитьАвто()
	
	Функция Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
		Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
		ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
		Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
		Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
		Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
		Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
		
		Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
		
		// параметры по курсовым 
		Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		КодСтрокиКурсовойРазницы = Новый СписокЗначений;
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
		
		Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
		
		СписокСчетовНал = Новый СписокЗначений;	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
		
		Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
		
		СписокСчетовАктивов = Новый СписокЗначений;
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
		
		Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
		Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
		
		СписокСчетовРасходов = Новый СписокЗначений;
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
		
		СписокСчетовСтрокиA = Новый СписокЗначений;
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
		
		Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
		
		Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.009.IV");
		Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.009.IIIA");
		Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.009%");
		
		Запрос.УстановитьПараметр("Топливо",);
		
		КодыСтрок = Новый СписокЗначений;
		КодыСтрок.Добавить("220.00.009.IIIA"); 
		КодыСтрок.Добавить("220.00.009.IIIB"); 					
		КодыСтрок.Добавить("220.00.009.IIIC"); 					
		КодыСтрок.Добавить("220.00.009.IIID"); 					
		КодыСтрок.Добавить("220.00.009.IIIE"); 					
		КодыСтрок.Добавить("220.00.009.IIIF"); 					
		КодыСтрок.Добавить("220.00.009.IIIG"); 					
		КодыСтрок.Добавить("220.00.009.IIIH"); 					
		
		Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
		
		СписокДохКодовСтрок = Новый СписокЗначений;
		СписокДохКодовСтрок = Новый СписокЗначений;
		Для Н = 1 По 8 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокДохКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокДохКодовСтрок.Добавить("220.00.026.I");
		СписокДохКодовСтрок.Добавить("220.00.027");
		СписокДохКодовСтрок.Добавить("220.00.030");
		СписокДохКодовСтрок.Добавить("220.00.030.I");
		СписокДохКодовСтрок.Добавить("220.00.031");
		
		СписокРасКодовСтрок = Новый СписокЗначений;
		Для Н = 10 По 24 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокРасКодовСтрок.Добавить("220.00.028");
		СписокРасКодовСтрок.Добавить("220.00.026.II");
		СписокРасКодовСтрок.Добавить("220.00.034.I");
		
		Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
		Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
		
		КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIA"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIB"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIC"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIID"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIE"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIF"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIG"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IIIH");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IV");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.V");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.VI");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.VII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.VIII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009.IX");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.009%");
		
		Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
		
		СписокДохНеподлежащихНалог = Новый СписокЗначений;
		СписокДохНеподлежащихНалог.Добавить("220.00.007");
		
		Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
		
		Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.026.I");
		Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.026.II");
		
		Запрос.Текст="ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет,
		|	Доход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоходРасходКурсовых,
		|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
		|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	&КодСтрокиРасходыПоКурсовойРазнице
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДохода.Доход КАК ДоходРасход,
		|	ВЫБОР
		|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
		|			ТОГДА ДанныеОКодахДекларации.КодСтроки
		|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
		|	КОНЕЦ КАК КодСтроки
		|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДохода.Доход КАК Доход,
		|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|	ИЗ
		|		ВТ_Приоритет КАК ТаблицаДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДохода.Доход) КАК ТаблицаДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
		|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДоходРасход,
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""220.00.009.IIIA"" КАК КодСтроки,
		|	0 КАК ДоходРасход,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
		|	0 КАК ВыдСообщение,
		|	НалоговыйОбороты.ВидУчета КАК ВидУчета
		|ПОМЕСТИТЬ ВТ_СтрокаIIIA
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.009.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA)
		|				И НЕ Счет = &Счет7410,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.009.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
		|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
		|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
		|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
		|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
		|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
		|	ЗапросПо30Строкам.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СтрокиIII
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
		|		0 КАК Поле2,
		|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
		|		НалоговыйОбороты.Счет КАК Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет = &Счет7900Н
		|					И НЕ Счет = &Счет7410,
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&Счет7900Н)
		|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	0 КАК ПоложительнаяКР,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
		|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
		|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
		|				И НЕ ОсновнойЗапрос.КурсоваяРазница
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						ТОГДА ""СтатьяЗатратДох""
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|						И НЕ ОсновнойЗапрос.КурсоваяРазница
		|					ТОГДА ""ДоходРасх""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
		|		НалоговыйОбороты.Сумма КАК Сумма,
		|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
		|		ЛОЖЬ КАК КурсоваяРазница
		|	ИЗ
		|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
		|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
		|	ГДЕ
		|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА ""220.00.024""
		|			ИНАЧЕ ""220.00.003""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
		|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
		|		КОНЕЦ,
		|		0,
		|		ИСТИНА
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
		|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотКт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ПоложительнаяКР,
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотДт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ОтрицательнаяКР
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&НачПериода,
		|						&КонПериода,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетаДоходов)
		|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
		|								И НЕ Счет = &Счет7900Н
		|								И НЕ Счет = &Счет7410,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|						) КАК НалоговыйОбороты
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
		|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойЗапрос.КурсоваяРазница,
		|	ОсновнойЗапрос.ДоходРасход,
		|	ОсновнойЗапрос.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокаIIIA.КодСтроки,
		|	ВТ_СтрокаIIIA.ДоходРасход,
		|	ВТ_СтрокаIIIA.Сумма,
		|	ВТ_СтрокаIIIA.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокиIII.КодСтроки,
		|	ВТ_СтрокиIII.ДоходРасход,
		|	ВТ_СтрокиIII.Сумма,
		|	ВТ_СтрокиIII.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.009.IV"",
		|	ВложенныйЗапрос.ДоходРасход,
		|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|	ВЫБОР
		|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаДохода.Доход КАК ДоходРасход,
		|			ТаблицаДохода.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК Доход,
		|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаДохода
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаДохода.Доход) КАК ТаблицаДохода
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ГДЕ
		|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
		|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеV.КодСтроки,
		|	ДанныеV.ДоходРасход,
		|	ДанныеV.Сумма,
		|	ДанныеV.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.009.V"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&НачГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.009"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		(НалоговыйОбороты.СуммаОборотДт = 0
		|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.ДоходРасход,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.009.VIII"" КАК КодСтроки,
		|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
		|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
		|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
		|		NULL КАК Счет
		|	ИЗ
		|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|	ГДЕ
		|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.009.VIII"",
		|		ВТ_СтрокиIII.ДоходРасход,
		|		ВТ_СтрокиIII.Сумма,
		|		ВТ_СтрокиIII.ВыдСообщение,
		|		ВТ_СтрокиIII.Счет
		|	ИЗ
		|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|	ГДЕ
		|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.009.VIII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|		0,
		|		NULL
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
		|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
		|	ГДЕ
		|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.009.VII""
		|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.009.VIII"")) КАК КонечныеИтоговыеДанные
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VI.КодСтроки,
		|	ЗапросПоСтроке49VI.ДоходРасход,
		|	ЗапросПоСтроке49VI.Сумма,
		|	ЗапросПоСтроке49VI.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.009.VI"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.009.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.009.VI"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки = ""220.00.009.VI"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеIX.КодСтроки,
		|	ДанныеIX.ДоходРасход,
		|	ДанныеIX.Сумма,
		|	ДанныеIX.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.009.IX"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		ВЫБОР
		|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
		|				ТОГДА НалоговыйОбороты.СуммаОборотДт
		|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
		|		КОНЕЦ КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1,
		|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&КонГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.009"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VII.КодСтроки,
		|	ЗапросПоСтроке49VII.ДоходРасход,
		|	ЗапросПоСтроке49VII.Сумма,
		|	ЗапросПоСтроке49VII.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.009.VII"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет2400Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.009.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.009.VII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	КодСтроки";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;		 
		
	КонецФункции // Форма220РассчитатьДанныеФормы()
	
	Функция Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура, ВыдаватьСообщения = Ложь, ИДРедакцииОтчета = "Форма2202013Кв4")
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая));	
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);	
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		
		ВедениеУчетаВременныхРазницБалансовымМетодом = УчетнаяПолитикаСервер.ВедетсяУчетВременныхРазницБалансовымМетодом(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		Если ВедениеУчетаВременныхРазницБалансовымМетодом Тогда
			// собираем по нал.
			ИмяРегистраБУ 		= "Налоговый";
			ОтборПоВидуУчета 	= " И ВидУчета = Значение(Справочник.ВидыУчетаНУ.НУ)";
			// собираем по бух.
			СписокСчетовТМЗ = Новый СписокЗначений;
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
			
			Запрос.УстановитьПараметр("СписокСчетовТМЗ", СписокСчетовТМЗ);
			
			СписокСчетовА = Новый СписокЗначений;
			СписокСчетовА.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы); 		 		  	//счет 1310
			СписокСчетовА.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   		//счет 1350		
			
			СписокСчетовB = Новый СписокЗначений;
			СписокСчетовB.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство);        //счет 1340
			
			Запрос.УстановитьПараметр("Счет1353", );
			
		Иначе
			// собираем по бух.
			СписокСчетовТМЗ = Новый СписокЗначений;
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.СырьеИМатериалы); 		  		  	//счет 1310
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.ГотоваяПродукция); 		  		//счет 1320
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.Товары);  				   		  	//счет 1330
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.НезавершенноеПроизводство); 		//счет 1340
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.ПрочиеЗапасы); 			  		//счет 1350
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.РезервПоСписаниюЗапасов);          //счет 1360
			СписокСчетовТМЗ.Добавить(ПланыСчетов.Типовой.МонтажОборудования);            	//счет 2932
			
			Запрос.УстановитьПараметр("СписокСчетовТМЗ", СписокСчетовТМЗ);
			
			СписокСчетовА = Новый СписокЗначений;
			СписокСчетовА.Добавить(ПланыСчетов.Типовой.СырьеИМатериалы); 		 		  	//счет 1310
			СписокСчетовА.Добавить(ПланыСчетов.Типовой.ПрочиеЗапасы); 			   		  	//счет 1350
			СписокСчетовА.Добавить(ПланыСчетов.Типовой.РезервПоСписаниюСырьяИМатериалов); 	//счет 1361
			СписокСчетовА.Добавить(ПланыСчетов.Типовой.МонтажОборудования);            	  	//счет 2932
			
			СписокСчетовB = Новый СписокЗначений;
			СписокСчетовB.Добавить(ПланыСчетов.Типовой.НезавершенноеПроизводство);        	//счет 1340
			
			ИмяРегистраБУ     = "Типовой";	
			ОтборПоВидуУчета  = ""; 
			
			МетаданныеОбъекта = Метаданные.ПланыСчетов.Типовой;
			НаименованиеСчета = "ТоварыПереданныеНаКомиссию";
			
			СчетТоварыПереданныеНаКомиссию = ОбщегоНазначенияБК.ЕстьПредопределенныйЭлемент(НаименованиеСчета, МетаданныеОбъекта);
			
			Если СчетТоварыПереданныеНаКомиссию Тогда 
				Запрос.УстановитьПараметр("Счет1353", Вычислить("ПланыСчетов.Типовой.ТоварыПереданныеНаКомиссию"));
			Иначе 
				Запрос.УстановитьПараметр("Счет1353", );
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИДРедакцииОтчета = "Форма2202018Кв4" ИЛИ ИДРедакцииОтчета = "Форма2202019Кв4" ИЛИ ИДРедакцииОтчета = "Форма2202020Кв4" Тогда
			ОбластьНачОстаток = "220.00.011.I";
			ОбластьКонОстаток = "220.00.011.II";
		ИначеЕсли ИДРедакцииОтчета = "Форма2202021Кв4" ИЛИ ИДРедакцииОтчета = "Форма2202022Кв1" ИЛИ ИДРедакцииОтчета = "Форма2202023Кв1" Тогда
			ОбластьНачОстаток = "220.00.016.I";
			ОбластьКонОстаток = "220.00.016.II";
		Иначе
			ОбластьНачОстаток = "220.00.009.I";
			ОбластьКонОстаток = "220.00.009.II";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("СписокСчетовТМЗ", СписокСчетовТМЗ);	
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ДанныеНачОстаток.НазваниеОбласти КАК КодСтроки,               
		|	СУММА(ДанныеНачОстаток.СуммаОстаток) КАК Сумма               
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиНаНачало.СуммаОстатокДт - ОстаткиНаНачало.СуммаОстатокКт КАК СуммаОстаток,
		|		""" + ОбластьНачОстаток + """ КАК НазваниеОбласти
		|	ИЗ
		|		РегистрБухгалтерии." + ИмяРегистраБУ + ".Остатки(&НачПериода, Счет В ИЕРАРХИИ (&СписокСчетовТМЗ), , Организация В (&СписокОрганизаций)" + ОтборПоВидуУчета + ") КАК ОстаткиНаНачало) КАК ДанныеНачОстаток
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеНачОстаток.НазваниеОбласти
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеКонОстаток.НазваниеОбласти,               
		|	СУММА(ДанныеКонОстаток.СуммаОстаток)               
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиНаКонец.СуммаОстатокДт - ОстаткиНаКонец.СуммаОстатокКт КАК СуммаОстаток,
		|		""" + ОбластьКонОстаток + """ КАК НазваниеОбласти
		|	ИЗ
		|		РегистрБухгалтерии." + ИмяРегистраБУ + ".Остатки(&КонПериода, Счет В ИЕРАРХИИ (&СписокСчетовТМЗ), , Организация В (&СписокОрганизаций)" + ОтборПоВидуУчета + ") КАК ОстаткиНаКонец) КАК ДанныеКонОстаток
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеКонОстаток.НазваниеОбласти";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;				   
		
	КонецФункции   // Форма220РассчитатьОстаткиТМЗ
	
	Функция Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|  
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800, Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты); 
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		
		Запрос.УстановитьПараметр("Организация", 			ФормаСтруктура.Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", 	Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустаяДата", 			'00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
		|ПОМЕСТИТЬ ВТ_ДанныеОКодахСтрок
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Значение,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.ПризнакСтатьи) КАК ПризнакСтатьи
		|ИЗ
		|	(ВЫБРАТЬ
		|		НалоговыйОбороты.Субконто1 КАК Значение,
		|		ИСТИНА КАК ПризнакСтатьи
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет В ИЕРАРХИИ (&СписокСчетов),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустаяСтатьяЗатрат,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОКодахСтрок КАК ВТ_ДанныеОКодахСтрок
		|			ПО НалоговыйОбороты.Субконто1 = ВТ_ДанныеОКодахСтрок.ВидДоходаРасхода
		|	ГДЕ
		|		ВТ_ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
		| 	" + ТекстЗапросаПоМесяцам + "
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		ЛОЖЬ
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет В ИЕРАРХИИ (&СписокСчетов),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 = &ПустаяСтатьяЗатрат,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОКодахСтрок КАК ВТ_ДанныеОКодахСтрок
		|			ПО НалоговыйОбороты.Субконто1 = ВТ_ДанныеОКодахСтрок.ВидДоходаРасхода
		|	ГДЕ
		|		ВТ_ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
		| 	" + ТекстЗапросаПоМесяцам + ") КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Значение";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
		
		Возврат ТаблицаРезультата; 
		
	КонецФункции // Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_04";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ТаблицаДанныхФорма220_04 = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, ТекИмяФормы);
		
		ТаблицаОтчета = Форма220_04РассчитатьДанныеФормы(ФормаСтруктура, Истина);
		
		ДоходОтВыбытияФА = 0;
		Для Каждого Строка Из ТаблицаОтчета Цикл
			Попытка
				Если СокрЛП(Строка.НомерГруппы) = "I" Тогда
					Номер = 1;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "II" Тогда
					Номер = 2;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "III" Тогда
					Номер = 3;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "IV" Тогда
					Номер = 4;
				Иначе
					Номер = Число(Строка.НомерГруппы);
				КонецЕсли;
			Исключение
				
				ТекстСообщения = НСтр("ru = 'Не правильно указан кода для группы ФА в справочнике ""Группы налогового учета ФА
				|Код для группы может быть указан как римскими цифрами например ""I"",""II"",""III"",""IV"" либо арабскими ""1"",""2"",""3"",""4"".
				|Расчет приложения 220.04 не произведен'");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 	
				Возврат;		 
			КонецПопытки;
			
			НачальныйОстаток = Окр(Строка.НачальныйОстаток);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_001_" + Номер, НачальныйОстаток);			
			ЗначениеПоступления = Окр(Строка.Поступление);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_002_" + Номер, ЗначениеПоступления);			
			ЗначениеВыбытие = Окр(Строка.Выбытие);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_003_" + Номер, ЗначениеВыбытие);			
			УвеличениеСтоимостиЗаСчетРемонта = Окр(Строка.УвеличениеСтоимостиЗаСчетРемонта);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_004_" + Номер, УвеличениеСтоимостиЗаСчетРемонта);			
			ЗначениеАмортизация = Окр(Строка.АмортизацияНачисленная);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_006_" + Номер, ЗначениеАмортизация);			
			
			ЗначениеСписаниеБалансаВыбывших = Окр(Строка.СписаниеБалансаВыбывших);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_008_" + Номер, ЗначениеСписаниеБалансаВыбывших);
			ЗначениеСписаниеБалансаМененееМинимума = Окр(Строка.СписаниеБалансаМененееМинимума);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_009_" + Номер, ЗначениеСписаниеБалансаМененееМинимума);
			ЗначениеРасходыНаТекущийРемонт = Окр(Строка.РасходыНаТекущийРемонт);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_010_" + Номер, ЗначениеРасходыНаТекущийРемонт);
			
			КонечныйОстаток = Окр(?(Строка.КонечныйОстаток <> Null, Строка.КонечныйОстаток, 0));
			
			Если КонечныйОстаток < 0 Тогда 
				КонечныйОстаток  = - КонечныйОстаток;
				ДоходОтВыбытияФА = ДоходОтВыбытияФА + КонечныйОстаток;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаОтчета = Форма220_04ДвойнаяАмортизацияРассчитатьДанныеФормы(ФормаСтруктура, Истина);
		ЗначенияЯчеек = Новый Массив(4);
		
		Для Каждого Строка Из ТаблицаОтчета Цикл
			Попытка
				Если СокрЛП(Строка.НомерГруппы) = "I" Тогда
					Номер = 1;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "II" Тогда
					Номер = 2;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "III" Тогда
					Номер = 3;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "IV" Тогда
					Номер = 4;
				Иначе
					Номер = Число(Строка.НомерГруппы);
					
					ТекстСообщения = НСтр("ru = 'Не правильно указан кода для группы ФА в справочнике ""Группы налогового учета ФА
					|Код для группы может быть указан как римскими цифрами например ""I"",""II"",""III"",""IV"" либо арабскими ""1"",""2"",""3"",""4"".
					|Расчет приложения 220.04 не произведен'");
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 				
					Возврат;		 
				КонецЕсли;
			Исключение 		
				ТекстСообщения = НСтр("ru = 'Не правильно указан кода для группы ФА в справочнике ""Группы налогового учета ФА
				|Код для группы может быть указан как римскими цифрами например ""I"",""II"",""III"",""IV"" либо арабскими ""1"",""2"",""3"",""4"".
				|Расчет приложения 220.04 не произведен'");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 		
				Возврат;		 
			КонецПопытки;
			
			Если Строка.ВыводитьДанные Тогда 
				
				ПредЗначение = ЗначенияЯчеек.Получить(Номер - 1); 
				
				Если ПредЗначение = Неопределено Тогда 
					ПредЗначение = 0;
				КонецЕсли;
				
				ЗначениеАмортизацияНачисленная = 0;
				
				ЗначениеАмортизацияНачисленная = ПредЗначение + Строка.АмортизацияНачисленная;
				ЗначенияЯчеек.Установить(Номер - 1, ЗначениеАмортизацияНачисленная);
				
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_04_007_" + Номер, ЗначениеАмортизацияНачисленная);			
				
			Иначе 
				ЗначениеАмортизацияНачисленная = 0;
			КонецЕсли;
		КонецЦикла;
		
		//РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма, ТекИмяФормы, Ложь);
		
	КонецПроцедуры // Форма220_04ЗаполнитьАвто()
	
	Функция Форма220_04РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		СостоянияФА = Новый СписокЗначений();	
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);
		
		МассивСубконтоЗатратНаРемонт = Новый Массив;
		МассивСубконтоЗатратНаРемонт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ВнеоборотныеАктивы);
		МассивСубконтоЗатратНаРемонт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ВидыРемонтаВА);
		МассивСубконтоЗатратНаРемонт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		
		Запрос.УстановитьПараметр("ДатаНачала", 				СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("ДатаОкончания", 				СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		Запрос.УстановитьПараметр("ПустаяГруппаНУ",				Справочники.ГруппыНалоговогоУчетаФА.ПустаяСсылка());	
		Запрос.УстановитьПараметр("ПустаяОрганизация",			Справочники.Организации.ПустаяСсылка());	
		Запрос.УстановитьПараметр("СписокОрганизаций", 			ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		
		Запрос.УстановитьПараметр("УчетПоОбъектам",				Перечисления.ВидыНалоговогоУчетаВГруппахФА.ПоОбъектам);
		Запрос.УстановитьПараметр("СостоянияФА", 				СостоянияФА);
		Запрос.УстановитьПараметр("СчетУчетаВА",				ПланыСчетов.Налоговый.ВАВключенныеВСтоимостнойБаланс);		//Счет Н311
		Запрос.УстановитьПараметр("СчетРемонтаВА",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);	    //Счет Н860
		Запрос.УстановитьПараметр("ВидУчетаНУ",					Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидРемонтаВА_Капитальный",	Перечисления.ВидыРемонтаВА.Капитальный);
		Запрос.УстановитьПараметр("ВидРемонтаВА_Текущий",		Перечисления.ВидыРемонтаВА.Текущий);
		Запрос.УстановитьПараметр("СписокСубконтоСчетаРемонта",	МассивСубконтоЗатратНаРемонт);
		
		Запрос.УстановитьПараметр("УчитываетсяОтдельноОтСтоимостногоБаланса",	Перечисления.СобытияФАУчитываемыхОтдельно.ПринятиеКУчету);	
		Запрос.УстановитьПараметр("ДвижениеПоступления", 						Перечисления.ВидыДвиженияСтоимостиФА.Поступление);
		Запрос.УстановитьПараметр("ДвижениеВыбытия", 							Перечисления.ВидыДвиженияСтоимостиФА.Выбытие);
		Запрос.УстановитьПараметр("ДвижениеАмортизации", 						Перечисления.ВидыДвиженияСтоимостиФА.Амортизация);
		Запрос.УстановитьПараметр("ДвижениеСписаниеБалансаМенееМинимума", 		Перечисления.ВидыДвиженияСтоимостиФА.СписаниеСтоимостногоБалансаГруппыМенееМинимума);
		Запрос.УстановитьПараметр("ДвижениеСписаниеБалансаВыбывших", 			Перечисления.ВидыДвиженияСтоимостиФА.СписаниеПриВыбытииВсехАктивовГруппы);
		Запрос.УстановитьПараметр("ДвижениеУвеличениеСтоимостиЗаСчетРемонта", 	Перечисления.ВидыДвиженияСтоимостиФА.УвеличениеСтоимостиЗаСчетРемонта);
		Запрос.УстановитьПараметр("Счет7900Н", 									ПланыСчетов.Налоговый.РасходыНаРемонтВА); //Н860
		Запрос.УстановитьПараметр("Счет000",									ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|				И СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 1
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 2
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|				И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|			ТОГДА 3
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|			ТОГДА 4
		|		ИНАЧЕ 5
		|	КОНЕЦ КАК Приоритет,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ КАК ГруппаНУ,
		|	ОбъектыНалоговогоУчетаФА.Организация КАК Организация,
		|	ОбъектыНалоговогоУчетаФА.ФиксированныйАктив КАК ФиксированныйАктив,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПредельнаяНормаАмортизации КАК ПредельнаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ВычетНаРемонт КАК ВычетНаРемонт,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ.Код
		|ПОМЕСТИТЬ ФиксированныеАктивыИСведения
		|ИЗ
		|	РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|			&ДатаОкончания,
		|			Организация В (&СписокОрганизаций)
		|				И СостояниеФиксированногоАктива В (&СостоянияФА)) КАК ОбъектыНалоговогоУчетаФА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОГруппахФиксированныхАктивов.СрезПоследних(
		|				&ДатаОкончания,
		|				Организация В (&СписокОрганизаций)
		|					ИЛИ Организация = &ПустаяОрганизация) КАК СведенияОГруппахФиксированныхАктивовСрезПоследних
		|		ПО (ОбъектыНалоговогоУчетаФА.Организация = СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация)
		|			И (ОбъектыНалоговогоУчетаФА.ГруппаНУ = СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА
		|					И СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив = НЕОПРЕДЕЛЕНО
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА.ВидУчетаВГруппеФА = &УчетПоОБъектам
		|					И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив)
		|ГДЕ
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ <> &ПустаяГруппаНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГруппыФА.ГруппаНУ,
		|	ГруппыФА.НомерГруппы,
		|	ЕСТЬNULL(ГруппыФА.НачальныйОстаток, 0) КАК НачальныйОстаток,
		|	ЕСТЬNULL(ГруппыФА.Поступление, 0) КАК Поступление,
		|	ЕСТЬNULL(ГруппыФА.Выбытие, 0) КАК Выбытие,
		|	ЕСТЬNULL(ГруппыФА.КонечныйОстаток, 0) КАК КонечныйОстаток,
		|	ЕСТЬNULL(ГруппыФА.АмортизацияНачисленная, 0) КАК АмортизацияНачисленная,
		|	ЕСТЬNULL(ГруппыФА.АмортизацияРасчетная, 0) КАК АмортизацияРасчетная,
		|	ЕСТЬNULL(ГруппыФА.РасходыНаТекущийРемонт, 0) КАК РасходыНаТекущийРемонт,
		|	ЕСТЬNULL(ГруппыФА.РасходыНаКапитальныйРемонт, 0) КАК РасходыНаКапитальныйРемонт,
		|	ЕСТЬNULL(ГруппыФА.РасходыНаРемонтОтнНаВычеты, 0) КАК РасходыНаРемонтОтнНаВычеты,
		|	ЕСТЬNULL(ГруппыФА.УвеличениеСтоимостиЗаСчетРемонта, 0) КАК УвеличениеСтоимостиЗаСчетРемонта,
		|	ЕСТЬNULL(ГруппыФА.СписаниеБалансаМененееМинимума, 0) КАК СписаниеБалансаМененееМинимума,
		|	ЕСТЬNULL(ГруппыФА.СписаниеБалансаВыбывших, 0) КАК СписаниеБалансаВыбывших,
		|	ЕСТЬNULL(ГруппыФА.ИтоговаяСтоимость, 0) КАК ИтоговаяСтоимость,
		|	ЕСТЬNULL(ГруппыФА.ИтоговаяСтоимостьРасчетная, 0) КАК ИтоговаяСтоимостьРасчетная,
		|	ЕСТЬNULL(ПоследующиеПреференции.СуммаПсоледующихПреференций, 0) КАК СуммаПсоледующихПреференций
		|ИЗ
		|	(ВЫБРАТЬ
		|		ФАПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|		ФАПоГруппам.ГруппаНУКод КАК НомерГруппы,
		|		СУММА(СтоимостьВА.НачальныйОстаток) КАК НачальныйОстаток,
		|		СУММА(СтоимостьВА.Поступление) КАК Поступление,
		|		СУММА(СтоимостьВА.Выбытие) КАК Выбытие,
		|		СУММА(ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0)) КАК КонечныйОстаток,
		|		СУММА(СтоимостьВА.АмортизацияНачисленная) КАК АмортизацияНачисленная,
		|		СУММА((ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0)) * ЕСТЬNULL(ФАПоГруппам.ПрименяемаяНормаАмортизации, 0) / 100) КАК АмортизацияРасчетная,
		|		СУММА(РасходыНаРемонт.РасходыНаТекущийРемонт) КАК РасходыНаТекущийРемонт,
		|		СУММА(РасходыНаРемонт.РасходыНаКапитальныйРемонт) КАК РасходыНаКапитальныйРемонт,
		|		СУММА(РасходыНаРемонт.РасходыНаРемонтОтнНаВычеты) КАК РасходыНаРемонтОтнНаВычеты,
		|		СУММА(СтоимостьВА.УвеличениеСтоимостиЗаСчетРемонта) КАК УвеличениеСтоимостиЗаСчетРемонта,
		|		СУММА(СтоимостьВА.СписаниеБалансаМененееМинимума) КАК СписаниеБалансаМененееМинимума,
		|		СУММА(СтоимостьВА.СписаниеБалансаВыбывших) КАК СписаниеБалансаВыбывших,
		|		СУММА(СтоимостьВА.КонечныйОстаток) КАК ИтоговаяСтоимость,
		|		СУММА(ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0) - (ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0)) * ЕСТЬNULL(ФАПоГруппам.ПрименяемаяНормаАмортизации, 0) / 100 + ЕСТЬNULL(СтоимостьВА.УвеличениеСтоимостиЗаСчетРемонта, 0) - ЕСТЬNULL(СтоимостьВА.СписаниеБалансаМененееМинимума, 0) - ЕСТЬNULL(СтоимостьВА.СписаниеБалансаВыбывших, 0)) КАК ИтоговаяСтоимостьРасчетная
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ФАПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|			ФАПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|			ФАПоГруппам.Организация КАК Организация,
		|			ФАПоГруппам.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|			ФАПоГруппам.ГруппаНУКод КАК ГруппаНУКод
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|				ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|				ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|				ДанныеПоГруппамФА.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|				ФиксированныеАктивыПоГруппам.ГруппаНУКод КАК ГруппаНУКод
		|			ИЗ
		|				(ВЫБРАТЬ
		|					МИНИМУМ(ФиксированныеАктивыПоГруппам.Приоритет) КАК Приоритет,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|					ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|					ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУКод КАК ГруппаНУКод
		|				ИЗ
		|					ФиксированныеАктивыИСведения КАК ФиксированныеАктивыПоГруппам
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФиксированныеАктивыПоГруппам.Организация,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУ,
		|					ФиксированныеАктивыПоГруппам.ФиксированныйАктив,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУКод) КАК ФиксированныеАктивыПоГруппам
		|					ЛЕВОЕ СОЕДИНЕНИЕ ФиксированныеАктивыИСведения КАК ДанныеПоГруппамФА
		|					ПО ФиксированныеАктивыПоГруппам.Приоритет = ДанныеПоГруппамФА.Приоритет
		|						И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ДанныеПоГруппамФА.ФиксированныйАктив
		|						И ФиксированныеАктивыПоГруппам.Организация = ДанныеПоГруппамФА.Организация
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив,
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Организация КАК Организация
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие = &УчитываетсяОтдельноОтСтоимостногоБаланса) КАК ФАУчитываемыеОтдельно
		|					ПО ФиксированныеАктивыПоГруппам.Организация = ФАУчитываемыеОтдельно.Организация
		|						И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ФАУчитываемыеОтдельно.ФиксированныйАктив
		|			ГДЕ
		|				ФАУчитываемыеОтдельно.ФиксированныйАктив ЕСТЬ NULL ) КАК ФАПоГруппам
		|		ГДЕ
		|			ФАПоГруппам.Организация В(&СписокОрганизаций)) КАК ФАПоГруппам
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				СтоимостьВА_НУ.Организация КАК Организация,
		|				СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.НачальныйОстаток, 0)) КАК НачальныйОстаток,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.КонечныйОстаток, 0)) КАК КонечныйОстаток,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Выбытие, 0)) КАК Выбытие,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.АмортизацияУчетная, 0)) КАК АмортизацияНачисленная,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.СписаниеБалансаМененееМинимума, 0)) КАК СписаниеБалансаМененееМинимума,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.СписаниеБалансаВыбывших, 0)) КАК СписаниеБалансаВыбывших,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.УвеличениеСтоимостиЗаСчетРемонта, 0)) КАК УвеличениеСтоимостиЗаСчетРемонта,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Поступление, 0)) КАК Поступление
		|			ИЗ
		|				(ВЫБРАТЬ
		|					СтоимостьВА_НУ.Организация КАК Организация,
		|					СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|					МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаНачальныйОстатокДт, 0)) КАК НачальныйОстаток,
		|					МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаКонечныйОстатокДт, 0)) КАК КонечныйОстаток,
		|					0 КАК Выбытие,
		|					0 КАК АмортизацияУчетная,
		|					0 КАК СписаниеБалансаМененееМинимума,
		|					0 КАК СписаниеБалансаВыбывших,
		|					0 КАК УвеличениеСтоимостиЗаСчетРемонта,
		|					0 КАК Поступление
		|				ИЗ
		|					РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|							&ДатаНачала,
		|							&ДатаОкончания,
		|							,
		|							,
		|							Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|							,
		|							Организация В (&СписокОрганизаций)
		|								И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СтоимостьВА_НУ.Организация,
		|					СтоимостьВА_НУ.Субконто1
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					СтоимостьВА_НУ_Движения.Организация,
		|					СтоимостьВА_НУ_Движения.Субконто1,
		|					0,
		|					0,
		|					СтоимостьВА_НУ_Движения.Выбытие,
		|					СтоимостьВА_НУ_Движения.АмортизацияУчетная,
		|					СтоимостьВА_НУ_Движения.СписаниеБалансаМененееМинимума,
		|					СтоимостьВА_НУ_Движения.СписаниеБалансаВыбывших,
		|					СтоимостьВА_НУ_Движения.УвеличениеСтоимостиЗаСчетРемонта,
		|					СтоимостьВА_НУ_Движения.Поступление
		|				ИЗ
		|					(ВЫБРАТЬ
		|						СтоимостьВА_НУ.Организация КАК Организация,
		|						СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеПоступления
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотДт - СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК Поступление,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеВыбытия
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт - СтоимостьВА_НУ.СуммаОборотДт
		|							КОНЕЦ) КАК Выбытие,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеАмортизации
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК АмортизацияУчетная,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеСписаниеБалансаМенееМинимума
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК СписаниеБалансаМененееМинимума,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеСписаниеБалансаВыбывших
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК СписаниеБалансаВыбывших,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеУвеличениеСтоимостиЗаСчетРемонта
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотДт
		|							КОНЕЦ) КАК УвеличениеСтоимостиЗаСчетРемонта
		|					ИЗ
		|						РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|								&ДатаНачала,
		|								&ДатаОкончания,
		|								,
		|								,
		|								Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|								,
		|								Организация В (&СписокОрганизаций)
		|									И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СтоимостьВА_НУ.Организация,
		|						СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА_НУ_Движения) КАК СтоимостьВА_НУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СтоимостьВА_НУ.Организация,
		|				СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА
		|			ПО ФАПоГруппам.Организация = СтоимостьВА.Организация
		|				И ФАПоГруппам.ФиксированныйАктив = СтоимостьВА.Субконто1
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ЗатратыНаРемонтВА_НУ.Субконто1 КАК Субконто1,
		|				ЗатратыНаРемонтВА_НУ.Организация КАК Организация,
		|				СУММА(ВЫБОР
		|						КОГДА ЗатратыНаРемонтВА_НУ.Субконто2 = &ВидРемонтаВА_Текущий
		|							ТОГДА ЗатратыНаРемонтВА_НУ.СуммаОборотДт
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК РасходыНаТекущийРемонт,
		|				СУММА(ВЫБОР
		|						КОГДА ЗатратыНаРемонтВА_НУ.Субконто2 = &ВидРемонтаВА_Капитальный
		|							ТОГДА ЗатратыНаРемонтВА_НУ.СуммаОборотДт
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК РасходыНаКапитальныйРемонт,
		|				СУММА(ВЫБОР
		|						КОГДА ЗатратыНаРемонтВА_НУ.Субконто2 = &ВидРемонтаВА_Капитальный
		|							ТОГДА ЗатратыНаРемонтВА_НУ.СуммаОборотДт - ЗатратыНаРемонтВА_НУ.СуммаОборотКт
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК РасходыНаРемонтОтнНаВычеты
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&ДатаНачала,
		|						&ДатаОкончания,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетРемонтаВА),
		|						&СписокСубконтоСчетаРемонта,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						,
		|						) КАК ЗатратыНаРемонтВА_НУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ЗатратыНаРемонтВА_НУ.Субконто1,
		|				ЗатратыНаРемонтВА_НУ.Организация) КАК РасходыНаРемонт
		|			ПО ФАПоГруппам.Организация = РасходыНаРемонт.Организация
		|				И ФАПоГруппам.ФиксированныйАктив = РасходыНаРемонт.Субконто1
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ФАПоГруппам.ГруппаНУ,
		|		ФАПоГруппам.ГруппаНУКод) КАК ГруппыФА
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(НалоговыйОбороты.СуммаОборот) КАК СуммаПсоледующихПреференций,
		|			НалоговыйОбороты.Организация КАК Организация,
		|			ФиксированныеАктивыИСведения.ГруппаНУ КАК ГруппаНУ
		|		ИЗ
		|			ФиксированныеАктивыИСведения КАК ФиксированныеАктивыИСведения
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Обороты(
		|						&ДатаНачала,
		|						&ДатаОкончания,
		|						,
		|						Счет = &Счет7900Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|						) КАК НалоговыйОбороты
		|				ПО ФиксированныеАктивыИСведения.ФиксированныйАктив = НалоговыйОбороты.Субконто2
		|					И ФиксированныеАктивыИСведения.Организация = НалоговыйОбороты.Организация
		|		ГДЕ
		|			НалоговыйОбороты.Субконто3 = ЗНАЧЕНИЕ(Перечисление.ВидыРемонтаВА.Преференции)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.Организация,
		|			ФиксированныеАктивыИСведения.ГруппаНУ) КАК ПоследующиеПреференции
		|		ПО ГруппыФА.ГруппаНУ = ПоследующиеПреференции.ГруппаНУ";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для для Приложения 220.04 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);   		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма220_04РассчитатьДанныеФормы()
	
	Функция Форма220_04ДвойнаяАмортизацияРассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		СостоянияФА = Новый СписокЗначений();	
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);
		
		Запрос.УстановитьПараметр("ДатаНачала", 				СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("ДатаОкончания", 				СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		Запрос.УстановитьПараметр("ДатаОкончания1ГодНазад", 	ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета,-12));
		Запрос.УстановитьПараметр("ДатаОкончания2ГодаНазад", 	ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета,-24));
		Запрос.УстановитьПараметр("ПустаяГруппаНУ",				Справочники.ГруппыНалоговогоУчетаФА.ПустаяСсылка());	
		Запрос.УстановитьПараметр("ПустаяОрганизация",			Справочники.Организации.ПустаяСсылка());	
		Запрос.УстановитьПараметр("СписокОрганизаций", 			ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		
		Запрос.УстановитьПараметр("УчетПоОбъектам",				Перечисления.ВидыНалоговогоУчетаВГруппахФА.ПоОбъектам);
		Запрос.УстановитьПараметр("СостоянияФА", 				СостоянияФА);
		Запрос.УстановитьПараметр("СчетУчетаВА",				ПланыСчетов.Налоговый.ВнеоборотныеАктивы);		//Счет Н300
		Запрос.УстановитьПараметр("ВключенВСоставГруппы",		Перечисления.СобытияФАУчитываемыхОтдельно.ВключениеВСоставГруппы);	    
		Запрос.УстановитьПараметр("Выбыл",						Перечисления.ВидыСостоянийФА.Выбыл);
		Запрос.УстановитьПараметр("ПринятКУчету",				Перечисления.ВидыСостоянийФА.ПринятКУчету);
		Запрос.УстановитьПараметр("ВидУчетаНУ",					Справочники.ВидыУчетаНУ.НУ);
		
		Запрос.УстановитьПараметр("ДвижениеПоступления", 		Перечисления.ВидыДвиженияСтоимостиФА.Поступление);
		Запрос.УстановитьПараметр("ДвижениеВыбытия", 			Перечисления.ВидыДвиженияСтоимостиФА.Выбытие);
		Запрос.УстановитьПараметр("ДвижениеАмортизации", 		Перечисления.ВидыДвиженияСтоимостиФА.Амортизация);
		
		ТекстЗапроса="ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|				И СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 1
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 2
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|				И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|			ТОГДА 3
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|			ТОГДА 4
		|		ИНАЧЕ 5
		|	КОНЕЦ КАК Приоритет,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ КАК ГруппаНУ,
		|	ОбъектыНалоговогоУчетаФА.Организация КАК Организация,
		|	ОбъектыНалоговогоУчетаФА.ФиксированныйАктив КАК ФиксированныйАктив,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПредельнаяНормаАмортизации КАК ПредельнаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ВычетНаРемонт КАК ВычетНаРемонт
		|ПОМЕСТИТЬ ФиксированныеАктивыИСведения
		|ИЗ
		|	РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|			&ДатаОкончания,
		|			СостояниеФиксированногоАктива В (&СостоянияФА)
		|				И Организация В (&СписокОрганизаций)) КАК ОбъектыНалоговогоУчетаФА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОГруппахФиксированныхАктивов.СрезПоследних(
		|				&ДатаОкончания,
		|				Организация В (&СписокОрганизаций)
		|					ИЛИ Организация = &ПустаяОрганизация) КАК СведенияОГруппахФиксированныхАктивовСрезПоследних
		|		ПО (ОбъектыНалоговогоУчетаФА.Организация = СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация)
		|			И (ОбъектыНалоговогоУчетаФА.ГруппаНУ = СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА
		|					И СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив = НЕОПРЕДЕЛЕНО
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА.ВидУчетаВГруппеФА = &УчетПоОБъектам
		|					И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив)
		|ГДЕ
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ <> &ПустаяГруппаНУ
		|	И ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиФА.ПреференцияЕдиновременноеОтнесениеНаВычеты)
		|	И ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиФА.ПреференцияОтнесениеНаВычетыРавнымиДолями)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФАПоГруппам.ГруппаНУ.Код КАК НомерГруппы,
		|	ЕСТЬNULL(СтоимостьВА.АмортизацияНачисленная, 0) КАК АмортизацияНачисленная,
		|	ЕСТЬNULL(СтоимостьВА.Поступление, 0) * ЕСТЬNULL(ФАПоГруппам.ПрименяемаяНормаАмортизации, 0) * 2 / 100 КАК АмортизацияРасчетная,
		|	ВЫБОР
		|		КОГДА ФАПоГруппам.Событие = &ВключенВСоставГруппы
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВыводитьДанные
		|ИЗ
		|	(ВЫБРАТЬ
		|		ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|		ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|		ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|		ДанныеПоГруппамФА.ПредельнаяНормаАмортизации КАК ПредельнаяНормаАмортизации,
		|		ДанныеПоГруппамФА.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|		ФАУчитываемыеОтдельно.Событие КАК Событие,
		|		Принятие.Период КАК ДатаВвода,
		|		Выбытие.Период КАК ДатаВыбытия
		|	ИЗ
		|		(ВЫБРАТЬ
		|			МИНИМУМ(ФиксированныеАктивыПоГруппам.Приоритет) КАК Приоритет,
		|			ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|			ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|			ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив
		|		ИЗ
		|			ФиксированныеАктивыИСведения КАК ФиксированныеАктивыПоГруппам
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФиксированныеАктивыПоГруппам.Организация,
		|			ФиксированныеАктивыПоГруппам.ГруппаНУ,
		|			ФиксированныеАктивыПоГруппам.ФиксированныйАктив) КАК ФиксированныеАктивыПоГруппам
		|			ЛЕВОЕ СОЕДИНЕНИЕ ФиксированныеАктивыИСведения КАК ДанныеПоГруппамФА
		|			ПО ФиксированныеАктивыПоГруппам.Приоритет = ДанныеПоГруппамФА.Приоритет
		|				И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ДанныеПоГруппамФА.ФиксированныйАктив
		|				И ФиксированныеАктивыПоГруппам.Организация = ДанныеПоГруппамФА.Организация
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ФАУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив,
		|				ФАУчитываемыеОтдельноСрезПоследних.Организация КАК Организация,
		|				ФАУчитываемыеОтдельноСрезПоследних.Событие КАК Событие
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ФАИтог.ФиксированныйАктив КАК ФиксированныйАктив
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания2ГодаНазад, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие <> &ВключенВСоставГруппы
		|					
		|					ОБЪЕДИНИТЬ ВСЕ
		|					
		|					ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания1ГодНазад, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие <> &ВключенВСоставГруппы
		|					
		|					ОБЪЕДИНИТЬ ВСЕ
		|					
		|					ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие <> &ВключенВСоставГруппы) КАК ФАИтог
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФАИтог.ФиксированныйАктив) КАК ФАОбщие
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания, Организация В (&СписокОрганизаций)) КАК ФАУчитываемыеОтдельноСрезПоследних
		|					ПО (ФАУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив = ФАОбщие.ФиксированныйАктив)) КАК ФАУчитываемыеОтдельно
		|			ПО ФиксированныеАктивыПоГруппам.Организация = ФАУчитываемыеОтдельно.Организация
		|				И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ФАУчитываемыеОтдельно.ФиксированныйАктив
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|					&ДатаОкончания,
		|					Организация В (&СписокОрганизаций)
		|						И СостояниеФиксированногоАктива = &ПринятКУчету) КАК Принятие
		|			ПО ФиксированныеАктивыПоГруппам.ФиксированныйАктив = Принятие.ФиксированныйАктив
		|				И ФиксированныеАктивыПоГруппам.Организация = Принятие.Организация
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|					&ДатаОкончания,
		|					Организация В (&СписокОрганизаций)
		|						И СостояниеФиксированногоАктива = &Выбыл) КАК Выбытие
		|			ПО ФиксированныеАктивыПоГруппам.ФиксированныйАктив = Выбытие.ФиксированныйАктив
		|				И ФиксированныеАктивыПоГруппам.Организация = Выбытие.Организация
		|	ГДЕ
		|		(НЕ ФАУчитываемыеОтдельно.ФиксированныйАктив ЕСТЬ NULL )) КАК ФАПоГруппам
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтоимостьВА_НУ.Организация КАК Организация,
		|			СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.НачальныйОстаток, 0)) КАК НачальныйОстаток,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.КонечныйОстаток, 0)) КАК КонечныйОстаток,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Выбытие, 0)) КАК Выбытие,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.АмортизацияУчетная, 0)) КАК АмортизацияНачисленная,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Поступление, 0)) КАК Поступление
		|		ИЗ
		|			(ВЫБРАТЬ
		|				СтоимостьВА_НУ.Организация КАК Организация,
		|				СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|				МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаНачальныйОстатокДт, 0)) КАК НачальныйОстаток,
		|				МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаКонечныйОстатокДт, 0)) КАК КонечныйОстаток,
		|				0 КАК Выбытие,
		|				0 КАК АмортизацияУчетная,
		|				0 КАК Поступление
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|						&ДатаНачала,
		|						&ДатаОкончания,
		|						,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СтоимостьВА_НУ.Организация,
		|				СтоимостьВА_НУ.Субконто1
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				СтоимостьВА_НУ_Движения.Организация,
		|				СтоимостьВА_НУ_Движения.Субконто1,
		|				0,
		|				0,
		|				СтоимостьВА_НУ_Движения.Выбытие,
		|				СтоимостьВА_НУ_Движения.АмортизацияУчетная,
		|				СтоимостьВА_НУ_Движения.Поступление
		|			ИЗ
		|				(ВЫБРАТЬ
		|					СтоимостьВА_НУ.Организация КАК Организация,
		|					СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|					СУММА(ВЫБОР
		|							КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеПоступления
		|								ТОГДА СтоимостьВА_НУ.СуммаОборотДт - СтоимостьВА_НУ.СуммаОборотКт
		|						КОНЕЦ) КАК Поступление,
		|					СУММА(ВЫБОР
		|							КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеВыбытия
		|								ТОГДА СтоимостьВА_НУ.СуммаОборотКт - СтоимостьВА_НУ.СуммаОборотДт
		|						КОНЕЦ) КАК Выбытие,
		|					СУММА(ВЫБОР
		|							КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеАмортизации
		|								ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|						КОНЕЦ) КАК АмортизацияУчетная
		|				ИЗ
		|					РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|							&ДатаНачала,
		|							&ДатаОкончания,
		|							,
		|							,
		|							Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|							,
		|							Организация В (&СписокОрганизаций)
		|								И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СтоимостьВА_НУ.Организация,
		|					СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА_НУ_Движения) КАК СтоимостьВА_НУ
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтоимостьВА_НУ.Организация,
		|			СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА
		|		ПО ФАПоГруппам.Организация = СтоимостьВА.Организация
		|			И ФАПоГруппам.ФиксированныйАктив = СтоимостьВА.Субконто1";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма220_04ДвойнаяАмортизацияРассчитатьДанныеФормы()
	
	
	Функция ПолучитьБИНАппаратаАкимовГородов(Налогоплательщик)
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.ИдентификационныйКодЛичности КАК БИН
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО Организации.МестныйБюджет = Контрагенты.Ссылка
		|ГДЕ
		|	Организации.УчетПоМестнымБюджетам
		|	И Организации.Ссылка = &Налогоплательщик";
		
		Запрос.УстановитьПараметр("Налогоплательщик", Налогоплательщик);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.БИН;
			
		Иначе Возврат ""
			
		КонецЕсли;
		
	КонецФункции
	
	Функция ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, НачПериода, КонПериода)
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			НачПериода);
		Запрос.УстановитьПараметр("КонПериода", 			КонПериода);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		
		ВидыВычетов = Новый Массив;
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"));
		
		Запрос.УстановитьПараметр("ВидыВычетов", ВидыВычетов);
		
		Запрос.Текст =  "ВЫБРАТЬ
		|	Организации.ИндивидуальныйПредприниматель КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ФизЛицо
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|	И Организации.ИндивидуальныйПредприниматель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВычетыФизическихЛицИПН.Период < &НачПериода
		|			ТОГДА НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВычетыФизическихЛицИПН.Период, МЕСЯЦ)
		|	КОНЕЦ КАК Период,
		|	ВычетыФизическихЛицИПН.ВидВычета КАК ВидВычета,
		|	ВЫБОР
		|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо > &КонПериода
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ВычетыФизическихЛицИПН.ДействуетПо, МЕСЯЦ)
		|	КОНЕЦ КАК ДействуетПо
		|ПОМЕСТИТЬ ВТ_ВычетыИПН
		|ИЗ
		|	РегистрСведений.ВычетыФизическихЛицИПН КАК ВычетыФизическихЛицИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛицо КАК ВТ_ФизЛицо
		|		ПО ВычетыФизическихЛицИПН.ФизическоеЛицо = ВТ_ФизЛицо.Ссылка
		|ГДЕ
		|	ВычетыФизическихЛицИПН.Активность
		|	И ВычетыФизическихЛицИПН.ПредоставлятьВычет
		|	И ВычетыФизическихЛицИПН.ВидВычета В(&ВидыВычетов)
		|	И ВычетыФизическихЛицИПН.Период < &КонПериода
		|	И (ВычетыФизическихЛицИПН.ДействуетПо > &НачПериода
		|			ИЛИ ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 0) КАК Месяц
		|ПОМЕСТИТЬ ВТ_МесяцыГода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 2)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 3)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 4)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 5)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 6)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 7)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 8)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 9)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 10)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 11)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 12)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|			ТОГДА 75
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоМЗП
		|ПОМЕСТИТЬ ВТ_Вычеты
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|ГДЕ
		|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|			ТОГДА 75
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|ГДЕ
		|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПРодители)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_МесяцыГода.Месяц)
		|ИЗ
		|	ВТ_МесяцыГода КАК ВТ_МесяцыГода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|		ПО ВТ_МесяцыГода.Месяц >= ВТ_ВычетыИПН.Период
		|			И ВТ_МесяцыГода.Месяц <= ВТ_ВычетыИПН.ДействуетПо
		|			И (ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_Вычеты.КоличествоМЗП) КАК КоличествоМЗП
		|ИЗ
		|	ВТ_Вычеты КАК ВТ_Вычеты"
		;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Выборка.КоличествоМЗП;
		Иначе Возврат 0
		КонецЕсли;
		
	КонецФункции
	
	Функция ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, НачПериода, КонПериода)
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			НачПериода);
		Запрос.УстановитьПараметр("КонПериода", 			КонПериода);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		
		ВидыВычетов = Новый Массив;
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг"));
		
		Запрос.УстановитьПараметр("ВидыВычетов", ВидыВычетов);
		
		Запрос.Текст =  "ВЫБРАТЬ
		|	Организации.ИндивидуальныйПредприниматель КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ФизЛицо
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|	И Организации.ИндивидуальныйПредприниматель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегламентированныеРасчетныеПоказатели.РазмерМЗП КАК РазмерМЗП,
		|	РегламентированныеРасчетныеПоказатели.РазмерМРП КАК РазмерМРП
		|ПОМЕСТИТЬ ВТ_РазмерМЗП
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&НачПериода, ) КАК РегламентированныеРасчетныеПоказатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ПрочиеВычетыФизическихЛицИПН.ДействуетС < &НачПериода
		|			ТОГДА НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПрочиеВычетыФизическихЛицИПН.ДействуетС, МЕСЯЦ)
		|	КОНЕЦ КАК ДействуетС,
		|	ПрочиеВычетыФизическихЛицИПН.ВидВычета КАК ВидВычета,
		|	ВЫБОР
		|		КОГДА ПрочиеВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		КОГДА ПрочиеВычетыФизическихЛицИПН.ДействуетПо > &КонПериода
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ПрочиеВычетыФизическихЛицИПН.ДействуетПо, МЕСЯЦ)
		|	КОНЕЦ КАК ДействуетПо,
		|	ПрочиеВычетыФизическихЛицИПН.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ПрочиеВычетыФизическихЛицИПН.Размер КАК Размер
		|ПОМЕСТИТЬ ВТ_ВычетыИПН
		|ИЗ
		|	РегистрСведений.ПрочиеВычетыФизическихЛицИПН КАК ПрочиеВычетыФизическихЛицИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛицо КАК ВТ_ФизЛицо
		|		ПО ПрочиеВычетыФизическихЛицИПН.ФизическоеЛицо = ВТ_ФизЛицо.Ссылка
		|ГДЕ
		|	ПрочиеВычетыФизическихЛицИПН.Активность
		|	И ПрочиеВычетыФизическихЛицИПН.ВидВычета В(&ВидыВычетов)
		|	И ПрочиеВычетыФизическихЛицИПН.ДействуетС < &КонПериода
		|	И (ПрочиеВычетыФизическихЛицИПН.ДействуетПо > &НачПериода
		|			ИЛИ ПрочиеВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_ВычетыИПН.Размер * (РАЗНОСТЬДАТ(ВТ_ВычетыИПН.ДействуетС, ВТ_ВычетыИПН.ДействуетПо, МЕСЯЦ) + 1)) КАК СуммаВычета,
		|	ВТ_ВычетыИПН.ВидВычета КАК ВидВычета
		|ПОМЕСТИТЬ ВТ_СуммыВычетов
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВычетыИПН.ВидВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_СуммыВычетов.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
		|				И ВТ_СуммыВычетов.СуммаВычета > 8 * ВТ_РазмерМЗП.РазмерМЗП
		|			ТОГДА 8 * ВТ_РазмерМЗП.РазмерМЗП
		|		ИНАЧЕ ВТ_СуммыВычетов.СуммаВычета
		|	КОНЕЦ КАК СуммаВычета,
		|	ВЫБОР
		|		КОГДА ВТ_СуммыВычетов.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
		|				И ВТ_СуммыВычетов.СуммаВычета > 94 * ВТ_РазмерМЗП.РазмерМРП
		|			ТОГДА 94 * ВТ_РазмерМЗП.РазмерМРП
		|		ИНАЧЕ ВТ_СуммыВычетов.СуммаВычета
		|	КОНЕЦ КАК СуммаВычета2019,
		|	ВТ_СуммыВычетов.ВидВычета КАК ВидВычета
		|ИЗ
		|	ВТ_СуммыВычетов КАК ВТ_СуммыВычетов,
		|	ВТ_РазмерМЗП КАК ВТ_РазмерМЗП"
		;
		
		Выборка = Запрос.Выполнить().Выбрать();
		СоответствиеВычетов = Новый Соответствие;
		
		Пока Выборка.Следующий() Цикл
			Если НачПериода < Дата('20220101') Тогда 
				СоответствиеВычетов.Вставить(Выборка.ВидВычета, Выборка.СуммаВычета);
			Иначе
				СоответствиеВычетов.Вставить(Выборка.ВидВычета, Выборка.СуммаВычета2019);
			КонецЕсли;
		КонецЦикла;	
		Возврат СоответствиеВычетов;
		
	КонецФункции
	
	#КонецОбласти
	
	
	///////////////////////////////
	// Форма 220.00 за 2013 год
	#Область Форма2202013Кв4
	
	Процедура Форма2202013Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220ЗаполнитьАвто(ПараметрыОтчета, "Форма2202013Кв4");
		
	КонецПроцедуры // Форма2202013Кв4_Форма220ЗаполнитьАвто()
	
	Процедура Форма2202013Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка <> Неопределено Тогда 
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		Иначе 
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется так как организация %1 является плательщиком НДС'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202013Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					Если НЕ Лев(СтрокаОтчета.КБЕ,1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.РНН) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'РНН контрагента %1 не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент); 
								
							КонецЕсли;
							СтрокаРННКонтрагента = "";                                                                             						
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.РНН)  ТОгда
							// В РНН имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В РНН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент); 
								
							КонецЕсли;
							СтрокаРННКонтрагента = "";						
						Иначе
							СтрокаРННКонтрагента = СтрокаОтчета.РНН;
							НомерНалоговойРегистрации = "";
						КонецЕсли; 
					Иначе
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					СтрокаБИНКонтрагента	 = СтрокаОтчета.ИдентификационныйКодЛичности;
					Элемент.Ф220_01_B		 = СтрокаРННКонтрагента;
					Элемент.Ф220_01_C		 = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_D		 = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы,Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено,СтрокаОтчета.Контрагент));					 
				ИначеЕсли ИмяГруппы = "Страница2" Тогда		 
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ,1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент); 
								
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент); 
								
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_E = НомерНалоговойРегистрации;
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_F = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_F = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_F = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_F = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_F = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_F = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_G = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202013Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202013Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если НЕ Лев(СтрокаОтчета.КБЕ,1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.РНН) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'РНН контрагента %1 не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент);
							КонецЕсли;
							СтрокаРННКонтрагента = "";                                                                             						
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.РНН)  ТОгда
							// В РНН имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В РНН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент);
								
							КонецЕсли;
							СтрокаРННКонтрагента = "";						
						Иначе
							СтрокаРННКонтрагента = СтрокаОтчета.РНН;
						КонецЕсли; 
					Иначе
						Если СокрЛП(СтрокаОтчета.РНН) = "" ТОгда
							Если СтрокаОтчета.Контрагент <> Справочники.Контрагенты.ПустаяСсылка() Тогда
								
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'РНН контрагента %1 не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент);						
								
							КонецЕсли;
							СтрокаРННКонтрагента = "";                                                                             						
						ИначеЕсли  НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.Контрагент.РНН)  ТОгда
							// В РНН имеются символы, отличные от цифр (0..9)
							Если СтрокаОтчета.Контрагент <> Справочники.Контрагенты.ПустаяСсылка() Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В РНН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент);					
							КонецЕсли;
							СтрокаРННКонтрагента = "";						
						Иначе
							СтрокаРННКонтрагента = СтрокаОтчета.РНН;
						КонецЕсли; 
						НомерНалоговойРегистрации = "";
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
						
					КонецЕсли;
					
					СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					Элемент.Ф220_01_B    = СтрокаРННКонтрагента;
					СтрокаРННКонтрагента = "";
					Элемент.Ф220_01_C    = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_D    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы,Элемент, "Ф220_01_B", ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда		 
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ,1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_E 			= НомерНалоговойРегистрации;
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_F			= 7;
					Элемент.Ф220_01_G 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;  	     		
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
		//РегламентированнаяОтчетность.ОбновитьМногострочнуюСтруктуру(ЭтотОбъект, ТекИмяФормы, СтруктураФормы); 	 
		//РегламентированнаяОтчетность.ПередатьДанныеИзСтруктурыВТабличноеПоле(ЭтаФорма, ТекИмяФормы);			
		//РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма, ТекИмяФормы, Перезаполнить);   	
		//
		//Если Перезаполнить Тогда
		//	РегламентированнаяОтчетность.СформироватьПризнакиФормыИПередатьИтоги(ЭтотОбъект, ТекИмяФормы);
		//КонецЕсли;
		//
		//РегламентированнаяОтчетность.ПоказатьСтраницыМногострочнойФормы(ЭтаФорма);
		
	КонецПроцедуры // Форма2202013Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202013Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	И НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB");
		СписокКодовСтрок.Добавить("220.00.009.IIIC");
		СписокКодовСтрок.Добавить("220.00.009.IIID");
		СписокКодовСтрок.Добавить("220.00.009.IIIE");
		СписокКодовСтрок.Добавить("220.00.009.IIIF");
		СписокКодовСтрок.Добавить("220.00.009.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.РНН,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.РНН КАК РНН,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.РНН,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.РНН";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202013Кв4_Форма220_01РассчитатьДанныеФормы()
	
	Функция Форма2202013Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	И НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл;
		КонецЕсли;
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.РНН,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.РНН КАК РНН,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.РНН,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.РНН";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202013Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202013Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202013Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202013Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
	
	///////////////////////////////
	// Форма 220.00 за 2014 год 
	#Область Форма2202014Кв4
	
	Процедура Форма2202014Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220ЗаполнитьАвто(ПараметрыОтчета, "Форма2202014Кв4");
		
	КонецПроцедуры // Форма2202014Кв4_Форма220ЗаполнитьАвто()
	
	Процедура Форма2202014Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202014Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202014Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202014Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202014Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202014Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	И НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB");
		СписокКодовСтрок.Добавить("220.00.009.IIIC");
		СписокКодовСтрок.Добавить("220.00.009.IIID");
		СписокКодовСтрок.Добавить("220.00.009.IIIE");
		СписокКодовСтрок.Добавить("220.00.009.IIIF");
		СписокКодовСтрок.Добавить("220.00.009.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма220_01РассчитатьДанныеФормы()
	
	Функция Форма2202014Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	И НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл;
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма220_01РассчитатьДанныеФормы()
	
	Функция Форма2202014Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202014Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202014Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
	
	///////////////////////////////
	// Форма 220.00 за 2015 год 
	#Область Форма2202015Кв4
	
	Процедура Форма2202015Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220ЗаполнитьАвто(ПараметрыОтчета, "Форма2202015Кв4");
		
	КонецПроцедуры // Форма2202015Кв4_Форма220ЗаполнитьАвто()
	
	Процедура Форма2202015Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202015Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202015Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202015Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202015Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202015Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	И НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB");
		СписокКодовСтрок.Добавить("220.00.009.IIIC");
		СписокКодовСтрок.Добавить("220.00.009.IIID");
		СписокКодовСтрок.Добавить("220.00.009.IIIE");
		СписокКодовСтрок.Добавить("220.00.009.IIIF");
		СписокКодовСтрок.Добавить("220.00.009.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202015Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202015Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	И НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл;
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202015Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202015Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202015Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202015Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202015Кв4_Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
	
	///////////////////////////////
	// Форма 220.00 за 2016 год 
	#Область Форма2202016Кв4
	
	Процедура Форма2202016Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220ЗаполнитьАвто(ПараметрыОтчета, "Форма2202016Кв4");
		
	КонецПроцедуры // Форма2202016Кв4_Форма220ЗаполнитьАвто()
	
	Процедура Форма2202016Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202016Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202016Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202016Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202016Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202016Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB");
		СписокКодовСтрок.Добавить("220.00.009.IIIC");
		СписокКодовСтрок.Добавить("220.00.009.IIID");
		СписокКодовСтрок.Добавить("220.00.009.IIIE");
		СписокКодовСтрок.Добавить("220.00.009.IIIF");
		СписокКодовСтрок.Добавить("220.00.009.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202016Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202016Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			//| " + ТекстДобУсл;
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202016Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202016Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202016Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202016Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202016Кв4_Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
	
	///////////////////////////////
	// Форма 220.00 за 2017 год 
	#Область Форма2202017Кв4
	
	Процедура Форма2202017Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220ЗаполнитьАвто(ПараметрыОтчета, "Форма2202017Кв4");
		
	КонецПроцедуры // Форма2202016Кв4_Форма220ЗаполнитьАвто()
	
	Процедура Форма2202017Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202017Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202017Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202017Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202017Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202017Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB");
		СписокКодовСтрок.Добавить("220.00.009.IIIC");
		СписокКодовСтрок.Добавить("220.00.009.IIID");
		СписокКодовСтрок.Добавить("220.00.009.IIIE");
		СписокКодовСтрок.Добавить("220.00.009.IIIF");
		СписокКодовСтрок.Добавить("220.00.009.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202016Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202017Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.009.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.009.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202017Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202017Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202017Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202017Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202017Кв4_Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
	
	///////////////////////////////
	// Форма 220.00 за 2018 год 
	#Область Форма2202018Кв4
	
	Процедура Форма2202018Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220";
		
		ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
		КодФормы = ФормаСтруктура.КодФормы;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Если ПараметрыОтчета.Перезаполнить Тогда	
			ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		
		Форма2202018Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);  
		
		//////////////////////////////////////////
		// Раздел. Расчетные показатели        	
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура,, "Форма2202018Кв4").Выбрать();
		Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
			Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.011.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
			ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.011.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаРезультата = Форма2202018Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура);
		
		ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОтчета.Следующий() Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
			
			ВыборкаДохРас = ВыборкаОтчета.Выбрать();
			
			Пока ВыборкаДохРас.Следующий() Цикл
				ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
				Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
					| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
					
				ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
					| определен код строки <%2>, который относится к вычетам <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
					
				КонецЕсли;								 
			КонецЦикла;
			
			Если ОбластьНачало = "s_220_00_001" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_038" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.007.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.007.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
				
			ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_009" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIA" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIB" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIC" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIID" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIE" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIF" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIG" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIH" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.V" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VI" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VIII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IX" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_016" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_019"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_023" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_024" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.III" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_3", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
				
			ИначеЕсли ОбластьНачало = "s_220_00_027" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_028" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_030" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ОбластьНачало = "s_220_00_035" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_038" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_038", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.033.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.033.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			Иначе
				ВыборкаДохРас.Сбросить();
				Пока ВыборкаДохРас.Следующий() Цикл
					ДР = ВыборкаДохРас.ДоходРасход;
					Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
						
					ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
						
					КонецЕсли;								 
				КонецЦикла;			
			КонецЕсли;			
		КонецЦикла;
		
		ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
		
		БИНАппаратаАкимовГородов = ПолучитьБИНАппаратаАкимовГородов(Налогоплательщик);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045", БИНАппаратаАкимовГородов);
		
		ВычетыИПКоличествоМЗП = ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаАктуальности", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	РегламентированныеРасчетныеПоказатели.РазмерМЗП
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаАктуальности, ) КАК РегламентированныеРасчетныеПоказатели";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РазмерМЗП = Выборка.РазмерМЗП;
		КонецЕсли;
		ВычетыИП = ВычетыИПКоличествоМЗП * РазмерМЗП;
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", ВычетыИП);
		
		ПрочиеВычетыИП = ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ВычетНаОплатуМедицинскихУслуг                = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")),0) ;
		ВычетДобровольныеПенсионныеВзносы            = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")),0) ;
		ВычетПогашениеВознагражденияПоЖилищнымЗаймам = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")),0) ;
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_1", ВычетДобровольныеПенсионныеВзносы);
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_2", ВычетНаОплатуМедицинскихУслуг);
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_3", ВычетПогашениеВознагражденияПоЖилищнымЗаймам);
		
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		СписокФормДерева = ФормаСтруктура.СписокФормДерева;
		мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
		мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
		Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
		
		// Заполняем поле "Представленные приложения"
		Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
			ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
			Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
				Строка = мСписокФормБезИерархии.Строки.Найти(ТекИмяФормы, "КодФормы");
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры // Форма2202018Кв4_Форма220ЗаполнитьАвто()
	
	Функция Форма2202018Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
		Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
		ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
		Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
		Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
		Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
		Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
		
		Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
		
		// параметры по курсовым 
		Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		КодСтрокиКурсовойРазницы = Новый СписокЗначений;
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
		
		Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
		
		СписокСчетовНал = Новый СписокЗначений;	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
		
		Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
		
		СписокСчетовАктивов = Новый СписокЗначений;
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
		
		Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
		Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
		
		СписокСчетовРасходов = Новый СписокЗначений;
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
		
		СписокСчетовСтрокиA = Новый СписокЗначений;
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
		
		Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
		
		Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.011.IV");
		Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.011.IIIA");
		Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.011%");
		
		Запрос.УстановитьПараметр("Топливо",);
		
		КодыСтрок = Новый СписокЗначений;
		КодыСтрок.Добавить("220.00.011.IIIA"); 
		КодыСтрок.Добавить("220.00.011.IIIB"); 					
		КодыСтрок.Добавить("220.00.011.IIIC"); 					
		КодыСтрок.Добавить("220.00.011.IIID"); 					
		КодыСтрок.Добавить("220.00.011.IIIE"); 					
		КодыСтрок.Добавить("220.00.011.IIIF"); 					
		КодыСтрок.Добавить("220.00.011.IIIG"); 					
		КодыСтрок.Добавить("220.00.011.IIIH"); 					
		
		Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
		
		СписокДохКодовСтрок = Новый СписокЗначений;
		СписокДохКодовСтрок = Новый СписокЗначений;
		Для Н = 1 По 6 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокДохКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокДохКодовСтрок.Добавить("220.00.010");
		СписокДохКодовСтрок.Добавить("220.00.038");
		
		СписокДохКодовСтрок.Добавить("220.00.007.I");
		СписокДохКодовСтрок.Добавить("220.00.008");
		СписокДохКодовСтрок.Добавить("220.00.027");
		СписокДохКодовСтрок.Добавить("220.00.028");
		СписокДохКодовСтрок.Добавить("220.00.030");
		СписокДохКодовСтрок.Добавить("220.00.037");
		
		
		СписокРасКодовСтрок = Новый СписокЗначений;
		Для Н = 12 По 20 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокРасКодовСтрок.Добавить("220.00.024");
		СписокРасКодовСтрок.Добавить("220.00.022");
		СписокРасКодовСтрок.Добавить("220.00.025.I");
		СписокРасКодовСтрок.Добавить("220.00.023");
		СписокРасКодовСтрок.Добавить("220.00.025.II");
		СписокРасКодовСтрок.Добавить("220.00.025.III");
		СписокРасКодовСтрок.Добавить("220.00.020");
		
		СписокРасКодовСтрок.Добавить("220.00.009");
		СписокРасКодовСтрок.Добавить("220.00.007.II");
		СписокРасКодовСтрок.Добавить("220.00.033.I");
		
		Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
		Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
		
		КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIA"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIB"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIC"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIID"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIE"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIF"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIG"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIH");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IV");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.V");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VI");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VIII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IX");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011%");
		
		Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
		
		СписокДохНеподлежащихНалог = Новый СписокЗначений;
		СписокДохНеподлежащихНалог.Добавить("220.00.038");
		
		Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
		
		Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.007.I");
		Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.007.II");
		
		Запрос.Текст="ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет,
		|	Доход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоходРасходКурсовых,
		|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
		|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	&КодСтрокиРасходыПоКурсовойРазнице
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДохода.Доход КАК ДоходРасход,
		|	ВЫБОР
		|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
		|			ТОГДА ДанныеОКодахДекларации.КодСтроки
		|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
		|	КОНЕЦ КАК КодСтроки
		|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДохода.Доход КАК Доход,
		|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|	ИЗ
		|		ВТ_Приоритет КАК ТаблицаДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДохода.Доход) КАК ТаблицаДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
		|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДоходРасход,
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"" КАК КодСтроки,
		|	0 КАК ДоходРасход,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
		|	0 КАК ВыдСообщение,
		|	НалоговыйОбороты.ВидУчета КАК ВидУчета
		|ПОМЕСТИТЬ ВТ_СтрокаIIIA
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA)
		|				И НЕ Счет = &Счет7410,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
		|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
		|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
		|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
		|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
		|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
		|	ЗапросПо30Строкам.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СтрокиIII
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
		|		0 КАК Поле2,
		|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
		|		НалоговыйОбороты.Счет КАК Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет = &Счет7900Н
		|					И НЕ Счет = &Счет7410,
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&Счет7900Н)
		|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)- ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	0 КАК ПоложительнаяКР,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
		|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
		|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
		|				И НЕ ОсновнойЗапрос.КурсоваяРазница
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						ТОГДА ""СтатьяЗатратДох""
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|						И НЕ ОсновнойЗапрос.КурсоваяРазница
		|					ТОГДА ""ДоходРасх""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
		|		НалоговыйОбороты.Сумма КАК Сумма,
		|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
		|		ЛОЖЬ КАК КурсоваяРазница
		|	ИЗ
		|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
		|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
		|	ГДЕ
		|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА ""220.00.020""
		|			ИНАЧЕ ""220.00.003""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
		|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
		|		КОНЕЦ,
		|		0,
		|		ИСТИНА
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
		|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотКт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ПоложительнаяКР,
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотДт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ОтрицательнаяКР
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&НачПериода,
		|						&КонПериода,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетаДоходов)
		|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
		|								И НЕ Счет = &Счет7900Н
		|								И НЕ Счет = &Счет7410,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|						) КАК НалоговыйОбороты
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
		|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойЗапрос.КурсоваяРазница,
		|	ОсновнойЗапрос.ДоходРасход,
		|	ОсновнойЗапрос.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокаIIIA.КодСтроки,
		|	ВТ_СтрокаIIIA.ДоходРасход,
		|	ВТ_СтрокаIIIA.Сумма,
		|	ВТ_СтрокаIIIA.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокиIII.КодСтроки,
		|	ВТ_СтрокиIII.ДоходРасход,
		|	ВТ_СтрокиIII.Сумма,
		|	ВТ_СтрокиIII.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IV"",
		|	ВложенныйЗапрос.ДоходРасход,
		|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|	ВЫБОР
		|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаДохода.Доход КАК ДоходРасход,
		|			ТаблицаДохода.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК Доход,
		|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаДохода
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаДохода.Доход) КАК ТаблицаДохода
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ГДЕ
		|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
		|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеV.КодСтроки,
		|	ДанныеV.ДоходРасход,
		|	ДанныеV.Сумма,
		|	ДанныеV.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.V"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&НачГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.011"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		(НалоговыйОбороты.СуммаОборотДт = 0
		|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.ДоходРасход,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VIII"" КАК КодСтроки,
		|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
		|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
		|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
		|		NULL КАК Счет
		|	ИЗ
		|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|	ГДЕ
		|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VIII"",
		|		ВТ_СтрокиIII.ДоходРасход,
		|		ВТ_СтрокиIII.Сумма,
		|		ВТ_СтрокиIII.ВыдСообщение,
		|		ВТ_СтрокиIII.Счет
		|	ИЗ
		|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|	ГДЕ
		|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VIII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|		0,
		|		NULL
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
		|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
		|	ГДЕ
		|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.011.VII""
		|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.011.VIII"")) КАК КонечныеИтоговыеДанные
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VI.КодСтроки,
		|	ЗапросПоСтроке49VI.ДоходРасход,
		|	ЗапросПоСтроке49VI.Сумма,
		|	ЗапросПоСтроке49VI.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VI"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.011.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VI"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки = ""220.00.011.VI"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеIX.КодСтроки,
		|	ДанныеIX.ДоходРасход,
		|	ДанныеIX.Сумма,
		|	ДанныеIX.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.IX"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		ВЫБОР
		|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
		|				ТОГДА НалоговыйОбороты.СуммаОборотДт
		|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
		|		КОНЕЦ КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1,
		|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&КонГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.011"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VII.КодСтроки,
		|	ЗапросПоСтроке49VII.ДоходРасход,
		|	ЗапросПоСтроке49VII.Сумма,
		|	ЗапросПоСтроке49VII.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VII"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет2400Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.011.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	КодСтроки";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;		 
		
	КонецФункции // Форма220РассчитатьДанныеФормы()
	
	Процедура Форма2202018Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202018Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202018Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202018Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202018Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202018Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.011.IIIB");
		СписокКодовСтрок.Добавить("220.00.011.IIIC");
		СписокКодовСтрок.Добавить("220.00.011.IIID");
		СписокКодовСтрок.Добавить("220.00.011.IIIE");
		СписокКодовСтрок.Добавить("220.00.011.IIIF");
		СписокКодовСтрок.Добавить("220.00.011.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202018Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202018Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.011.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202018Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202018Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202018Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202018Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202018Кв4_Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
		
	///////////////////////////////
	// Форма 220.00 за 2019 год 
	#Область Форма2202019Кв4
	
	Процедура Форма2202019Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220";
		
		ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
		КодФормы = ФормаСтруктура.КодФормы;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Если ПараметрыОтчета.Перезаполнить Тогда	
			ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		
		Форма2202019Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);  
		
		//////////////////////////////////////////
		// Раздел. Расчетные показатели        	
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура,, "Форма2202019Кв4").Выбрать();
		Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
			Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.011.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
			ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.011.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаРезультата = Форма2202019Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура);
		
		ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОтчета.Следующий() Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
			
			ВыборкаДохРас = ВыборкаОтчета.Выбрать();
			
			Пока ВыборкаДохРас.Следующий() Цикл
				ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
				Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
					| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
					
				ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
					| определен код строки <%2>, который относится к вычетам <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
					
				КонецЕсли;								 
			КонецЦикла;
			
			Если ОбластьНачало = "s_220_00_001" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_038" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.007.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.007.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
				
			ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_009" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIA" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIB" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIC" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIID" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIE" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIF" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIG" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIH" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.V" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VI" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VIII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IX" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_016" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_019"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_023" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_024" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.III" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_3", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
				
			ИначеЕсли ОбластьНачало = "s_220_00_027" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_028" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_030" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ОбластьНачало = "s_220_00_035" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_038" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_038", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.033.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.033.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			Иначе
				ВыборкаДохРас.Сбросить();
				Пока ВыборкаДохРас.Следующий() Цикл
					ДР = ВыборкаДохРас.ДоходРасход;
					Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
						
					ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
						
					КонецЕсли;								 
				КонецЦикла;			
			КонецЕсли;			
		КонецЦикла;
		
		ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
		
		БИНАппаратаАкимовГородов = ПолучитьБИНАппаратаАкимовГородов(Налогоплательщик);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045", БИНАппаратаАкимовГородов);
		
		ВычетыИПКоличествоМЗП = ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаАктуальности", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	РегламентированныеРасчетныеПоказатели.РазмерМЗП
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаАктуальности, ) КАК РегламентированныеРасчетныеПоказатели";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РазмерМЗП = Выборка.РазмерМЗП;
		КонецЕсли;
		ВычетыИП = ВычетыИПКоличествоМЗП * РазмерМЗП;
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", ВычетыИП);
		
		ПрочиеВычетыИП = ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ВычетНаОплатуМедицинскихУслуг                = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")),0) ;
		ВычетДобровольныеПенсионныеВзносы            = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")),0) ;
		ВычетПогашениеВознагражденияПоЖилищнымЗаймам = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")),0) ;
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_1", ВычетДобровольныеПенсионныеВзносы);
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_2", ВычетНаОплатуМедицинскихУслуг);
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_3", ВычетПогашениеВознагражденияПоЖилищнымЗаймам);
		
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		СписокФормДерева = ФормаСтруктура.СписокФормДерева;
		мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
		мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
		Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
		
		// Заполняем поле "Представленные приложения"
		Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
			ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
			Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
				Строка = мСписокФормБезИерархии.Строки.Найти(ТекИмяФормы, "КодФормы");
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры // Форма2202019Кв4_Форма220ЗаполнитьАвто()
	
	Функция Форма2202019Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
		Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
		ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
		Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
		Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
		Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
		Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
		
		Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
		
		// параметры по курсовым 
		Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		КодСтрокиКурсовойРазницы = Новый СписокЗначений;
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
		
		Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
		
		СписокСчетовНал = Новый СписокЗначений;	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
		
		Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
		
		СписокСчетовАктивов = Новый СписокЗначений;
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
		
		Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
		Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
		
		СписокСчетовРасходов = Новый СписокЗначений;
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
		
		СписокСчетовСтрокиA = Новый СписокЗначений;
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
		
		Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
		
		Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.011.IV");
		Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.011.IIIA");
		Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.011%");
		
		Запрос.УстановитьПараметр("Топливо",);
		
		КодыСтрок = Новый СписокЗначений;
		КодыСтрок.Добавить("220.00.011.IIIA"); 
		КодыСтрок.Добавить("220.00.011.IIIB"); 					
		КодыСтрок.Добавить("220.00.011.IIIC"); 					
		КодыСтрок.Добавить("220.00.011.IIID"); 					
		КодыСтрок.Добавить("220.00.011.IIIE"); 					
		КодыСтрок.Добавить("220.00.011.IIIF"); 					
		КодыСтрок.Добавить("220.00.011.IIIG"); 					
		КодыСтрок.Добавить("220.00.011.IIIH"); 					
		
		Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
		
		СписокДохКодовСтрок = Новый СписокЗначений;
		СписокДохКодовСтрок = Новый СписокЗначений;
		Для Н = 1 По 6 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокДохКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокДохКодовСтрок.Добавить("220.00.010");
		СписокДохКодовСтрок.Добавить("220.00.038");
		
		СписокДохКодовСтрок.Добавить("220.00.007.I");
		СписокДохКодовСтрок.Добавить("220.00.008");
		СписокДохКодовСтрок.Добавить("220.00.027");
		СписокДохКодовСтрок.Добавить("220.00.028");
		СписокДохКодовСтрок.Добавить("220.00.030");
		СписокДохКодовСтрок.Добавить("220.00.037");
		
		
		СписокРасКодовСтрок = Новый СписокЗначений;
		Для Н = 12 По 20 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокРасКодовСтрок.Добавить("220.00.024");
		СписокРасКодовСтрок.Добавить("220.00.022");
		СписокРасКодовСтрок.Добавить("220.00.025.I");
		СписокРасКодовСтрок.Добавить("220.00.023");
		СписокРасКодовСтрок.Добавить("220.00.025.II");
		СписокРасКодовСтрок.Добавить("220.00.025.III");
		СписокРасКодовСтрок.Добавить("220.00.020");
		
		СписокРасКодовСтрок.Добавить("220.00.009");
		СписокРасКодовСтрок.Добавить("220.00.007.II");
		СписокРасКодовСтрок.Добавить("220.00.033.I");
		
		Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
		Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
		
		КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIA"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIB"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIC"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIID"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIE"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIF"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIG"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIH");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IV");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.V");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VI");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VIII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IX");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011%");
		
		Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
		
		СписокДохНеподлежащихНалог = Новый СписокЗначений;
		СписокДохНеподлежащихНалог.Добавить("220.00.038");
		
		Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
		
		Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.007.I");
		Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.007.II");
		
		Запрос.Текст="ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет,
		|	Доход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоходРасходКурсовых,
		|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
		|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	&КодСтрокиРасходыПоКурсовойРазнице
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДохода.Доход КАК ДоходРасход,
		|	ВЫБОР
		|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
		|			ТОГДА ДанныеОКодахДекларации.КодСтроки
		|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
		|	КОНЕЦ КАК КодСтроки
		|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДохода.Доход КАК Доход,
		|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|	ИЗ
		|		ВТ_Приоритет КАК ТаблицаДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДохода.Доход) КАК ТаблицаДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
		|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДоходРасход,
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"" КАК КодСтроки,
		|	0 КАК ДоходРасход,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
		|	0 КАК ВыдСообщение,
		|	НалоговыйОбороты.ВидУчета КАК ВидУчета
		|ПОМЕСТИТЬ ВТ_СтрокаIIIA
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA)
		|				И НЕ Счет = &Счет7410,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
		|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
		|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
		|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
		|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
		|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
		|	ЗапросПо30Строкам.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СтрокиIII
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
		|		0 КАК Поле2,
		|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
		|		НалоговыйОбороты.Счет КАК Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет = &Счет7900Н
		|					И НЕ Счет = &Счет7410,
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&Счет7900Н)
		|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)- ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	0 КАК ПоложительнаяКР,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
		|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
		|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
		|				И НЕ ОсновнойЗапрос.КурсоваяРазница
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						ТОГДА ""СтатьяЗатратДох""
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|						И НЕ ОсновнойЗапрос.КурсоваяРазница
		|					ТОГДА ""ДоходРасх""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
		|		НалоговыйОбороты.Сумма КАК Сумма,
		|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
		|		ЛОЖЬ КАК КурсоваяРазница
		|	ИЗ
		|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
		|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
		|	ГДЕ
		|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА ""220.00.020""
		|			ИНАЧЕ ""220.00.003""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
		|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
		|		КОНЕЦ,
		|		0,
		|		ИСТИНА
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
		|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотКт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ПоложительнаяКР,
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотДт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ОтрицательнаяКР
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&НачПериода,
		|						&КонПериода,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетаДоходов)
		|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
		|								И НЕ Счет = &Счет7900Н
		|								И НЕ Счет = &Счет7410,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|						) КАК НалоговыйОбороты
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
		|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойЗапрос.КурсоваяРазница,
		|	ОсновнойЗапрос.ДоходРасход,
		|	ОсновнойЗапрос.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокаIIIA.КодСтроки,
		|	ВТ_СтрокаIIIA.ДоходРасход,
		|	ВТ_СтрокаIIIA.Сумма,
		|	ВТ_СтрокаIIIA.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокиIII.КодСтроки,
		|	ВТ_СтрокиIII.ДоходРасход,
		|	ВТ_СтрокиIII.Сумма,
		|	ВТ_СтрокиIII.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IV"",
		|	ВложенныйЗапрос.ДоходРасход,
		|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|	ВЫБОР
		|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаДохода.Доход КАК ДоходРасход,
		|			ТаблицаДохода.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК Доход,
		|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаДохода
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаДохода.Доход) КАК ТаблицаДохода
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ГДЕ
		|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
		|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеV.КодСтроки,
		|	ДанныеV.ДоходРасход,
		|	ДанныеV.Сумма,
		|	ДанныеV.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.V"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&НачГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.011"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		(НалоговыйОбороты.СуммаОборотДт = 0
		|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.ДоходРасход,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VIII"" КАК КодСтроки,
		|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
		|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
		|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
		|		NULL КАК Счет
		|	ИЗ
		|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|	ГДЕ
		|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VIII"",
		|		ВТ_СтрокиIII.ДоходРасход,
		|		ВТ_СтрокиIII.Сумма,
		|		ВТ_СтрокиIII.ВыдСообщение,
		|		ВТ_СтрокиIII.Счет
		|	ИЗ
		|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|	ГДЕ
		|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VIII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|		0,
		|		NULL
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
		|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
		|	ГДЕ
		|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.011.VII""
		|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.011.VIII"")) КАК КонечныеИтоговыеДанные
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VI.КодСтроки,
		|	ЗапросПоСтроке49VI.ДоходРасход,
		|	ЗапросПоСтроке49VI.Сумма,
		|	ЗапросПоСтроке49VI.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VI"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.011.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VI"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки = ""220.00.011.VI"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеIX.КодСтроки,
		|	ДанныеIX.ДоходРасход,
		|	ДанныеIX.Сумма,
		|	ДанныеIX.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.IX"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		ВЫБОР
		|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
		|				ТОГДА НалоговыйОбороты.СуммаОборотДт
		|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
		|		КОНЕЦ КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1,
		|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&КонГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.011"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VII.КодСтроки,
		|	ЗапросПоСтроке49VII.ДоходРасход,
		|	ЗапросПоСтроке49VII.Сумма,
		|	ЗапросПоСтроке49VII.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VII"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет2400Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.011.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	КодСтроки";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;		 
		
	КонецФункции // Форма220РассчитатьДанныеФормы()
	
	Процедура Форма2202019Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202019Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202019Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202019Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202019Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202019Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.011.IIIB");
		СписокКодовСтрок.Добавить("220.00.011.IIIC");
		СписокКодовСтрок.Добавить("220.00.011.IIID");
		СписокКодовСтрок.Добавить("220.00.011.IIIE");
		СписокКодовСтрок.Добавить("220.00.011.IIIF");
		СписокКодовСтрок.Добавить("220.00.011.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202019Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202019Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.011.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202019Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202019Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202019Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202019Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202019Кв4_Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти
	
		///////////////////////////////
	// Форма 220.00 за 2020 год 
	#Область Форма2202020Кв4
	
	Процедура Форма2202020Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220";
		
		ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
		КодФормы = ФормаСтруктура.КодФормы;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Если ПараметрыОтчета.Перезаполнить Тогда	
			ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		
		Форма2202020Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);  
		
		//////////////////////////////////////////
		// Раздел. Расчетные показатели        	
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура,, "Форма2202020Кв4").Выбрать();
		Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
			Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.011.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
			ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.011.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаРезультата = Форма2202020Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура);
		
		ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОтчета.Следующий() Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
			
			ВыборкаДохРас = ВыборкаОтчета.Выбрать();
			
			Пока ВыборкаДохРас.Следующий() Цикл
				ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
				Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
					| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
					
				ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
					| определен код строки <%2>, который относится к вычетам <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
					
				КонецЕсли;								 
			КонецЦикла;
			
			Если ОбластьНачало = "s_220_00_001" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_038" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.007.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.007.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
				
			ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_009" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIA" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIB" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIC" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIID" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIE" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIF" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIG" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IIIH" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.V" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VI" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.VIII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.011.IX" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_011_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_016" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_019"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_023" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_024" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.025.III" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_3", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
				
			ИначеЕсли ОбластьНачало = "s_220_00_027" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_028" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_030" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ОбластьНачало = "s_220_00_035" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_038" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_038", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.033.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.033.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			Иначе
				ВыборкаДохРас.Сбросить();
				Пока ВыборкаДохРас.Следующий() Цикл
					ДР = ВыборкаДохРас.ДоходРасход;
					Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
						
					ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
						
					КонецЕсли;								 
				КонецЦикла;			
			КонецЕсли;			
		КонецЦикла;
		
		ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
		
		БИНАппаратаАкимовГородов = ПолучитьБИНАппаратаАкимовГородов(Налогоплательщик);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045", БИНАппаратаАкимовГородов);
		
		ВычетыИПКоличествоМЗП = ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаАктуальности", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	РегламентированныеРасчетныеПоказатели.РазмерМЗП
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаАктуальности, ) КАК РегламентированныеРасчетныеПоказатели";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РазмерМЗП = Выборка.РазмерМЗП;
		КонецЕсли;
		ВычетыИП = ВычетыИПКоличествоМЗП * РазмерМЗП;
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", ВычетыИП);
		
		ПрочиеВычетыИП = ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ВычетНаОплатуМедицинскихУслуг                = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")),0) ;
		ВычетДобровольныеПенсионныеВзносы            = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")),0) ;
		ВычетПогашениеВознагражденияПоЖилищнымЗаймам = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")),0) ;
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_1", ВычетДобровольныеПенсионныеВзносы);
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_2", ВычетНаОплатуМедицинскихУслуг);
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025_3", ВычетПогашениеВознагражденияПоЖилищнымЗаймам);
		
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		СписокФормДерева = ФормаСтруктура.СписокФормДерева;
		мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
		мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
		Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
		
		// Заполняем поле "Представленные приложения"
		Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
			ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
			Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
				Строка = мСписокФормБезИерархии.Строки.Найти(ТекИмяФормы, "КодФормы");
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры // Форма2202020Кв4_Форма220ЗаполнитьАвто()
	
	Функция Форма2202020Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
		Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
		ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
		Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
		Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
		Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
		Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
		
		Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
		
		// параметры по курсовым 
		Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		КодСтрокиКурсовойРазницы = Новый СписокЗначений;
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
		
		Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
		
		СписокСчетовНал = Новый СписокЗначений;	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
		
		Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
		
		СписокСчетовАктивов = Новый СписокЗначений;
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
		
		Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
		Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
		
		СписокСчетовРасходов = Новый СписокЗначений;
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
		
		СписокСчетовСтрокиA = Новый СписокЗначений;
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
		
		Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
		
		Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.011.IV");
		Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.011.IIIA");
		Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.011%");
		
		Запрос.УстановитьПараметр("Топливо",);
		
		КодыСтрок = Новый СписокЗначений;
		КодыСтрок.Добавить("220.00.011.IIIA"); 
		КодыСтрок.Добавить("220.00.011.IIIB"); 					
		КодыСтрок.Добавить("220.00.011.IIIC"); 					
		КодыСтрок.Добавить("220.00.011.IIID"); 					
		КодыСтрок.Добавить("220.00.011.IIIE"); 					
		КодыСтрок.Добавить("220.00.011.IIIF"); 					
		КодыСтрок.Добавить("220.00.011.IIIG"); 					
		КодыСтрок.Добавить("220.00.011.IIIH"); 					
		
		Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
		
		СписокДохКодовСтрок = Новый СписокЗначений;
		СписокДохКодовСтрок = Новый СписокЗначений;
		Для Н = 1 По 6 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокДохКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокДохКодовСтрок.Добавить("220.00.010");
		СписокДохКодовСтрок.Добавить("220.00.038");
		
		СписокДохКодовСтрок.Добавить("220.00.007.I");
		СписокДохКодовСтрок.Добавить("220.00.008");
		СписокДохКодовСтрок.Добавить("220.00.027");
		СписокДохКодовСтрок.Добавить("220.00.028");
		СписокДохКодовСтрок.Добавить("220.00.030");
		СписокДохКодовСтрок.Добавить("220.00.037");
		
		
		СписокРасКодовСтрок = Новый СписокЗначений;
		Для Н = 12 По 20 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокРасКодовСтрок.Добавить("220.00.024");
		СписокРасКодовСтрок.Добавить("220.00.022");
		СписокРасКодовСтрок.Добавить("220.00.025.I");
		СписокРасКодовСтрок.Добавить("220.00.023");
		СписокРасКодовСтрок.Добавить("220.00.025.II");
		СписокРасКодовСтрок.Добавить("220.00.025.III");
		СписокРасКодовСтрок.Добавить("220.00.020");
		
		СписокРасКодовСтрок.Добавить("220.00.009");
		СписокРасКодовСтрок.Добавить("220.00.007.II");
		СписокРасКодовСтрок.Добавить("220.00.033.I");
		
		Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
		Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
		
		КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIA"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIB"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIC"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIID"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIE"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIF"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIG"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IIIH");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IV");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.V");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VI");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.VIII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011.IX");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.011%");
		
		Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
		
		СписокДохНеподлежащихНалог = Новый СписокЗначений;
		СписокДохНеподлежащихНалог.Добавить("220.00.038");
		
		Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
		
		Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.007.I");
		Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.007.II");
		
		Запрос.Текст="ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет,
		|	Доход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоходРасходКурсовых,
		|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
		|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	&КодСтрокиРасходыПоКурсовойРазнице
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДохода.Доход КАК ДоходРасход,
		|	ВЫБОР
		|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
		|			ТОГДА ДанныеОКодахДекларации.КодСтроки
		|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
		|	КОНЕЦ КАК КодСтроки
		|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДохода.Доход КАК Доход,
		|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|	ИЗ
		|		ВТ_Приоритет КАК ТаблицаДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДохода.Доход) КАК ТаблицаДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
		|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДоходРасход,
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"" КАК КодСтроки,
		|	0 КАК ДоходРасход,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
		|	0 КАК ВыдСообщение,
		|	НалоговыйОбороты.ВидУчета КАК ВидУчета
		|ПОМЕСТИТЬ ВТ_СтрокаIIIA
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA)
		|				И НЕ Счет = &Счет7410,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
		|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
		|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
		|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
		|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
		|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
		|	ЗапросПо30Строкам.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СтрокиIII
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
		|		0 КАК Поле2,
		|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
		|		НалоговыйОбороты.Счет КАК Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет = &Счет7900Н
		|					И НЕ Счет = &Счет7410,
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&Счет7900Н)
		|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)- ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	0 КАК ПоложительнаяКР,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
		|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
		|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
		|				И НЕ ОсновнойЗапрос.КурсоваяРазница
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						ТОГДА ""СтатьяЗатратДох""
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|						И НЕ ОсновнойЗапрос.КурсоваяРазница
		|					ТОГДА ""ДоходРасх""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
		|		НалоговыйОбороты.Сумма КАК Сумма,
		|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
		|		ЛОЖЬ КАК КурсоваяРазница
		|	ИЗ
		|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
		|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
		|	ГДЕ
		|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА ""220.00.020""
		|			ИНАЧЕ ""220.00.003""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
		|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
		|		КОНЕЦ,
		|		0,
		|		ИСТИНА
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
		|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотКт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ПоложительнаяКР,
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотДт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ОтрицательнаяКР
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&НачПериода,
		|						&КонПериода,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетаДоходов)
		|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
		|								И НЕ Счет = &Счет7900Н
		|								И НЕ Счет = &Счет7410,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|						) КАК НалоговыйОбороты
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
		|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойЗапрос.КурсоваяРазница,
		|	ОсновнойЗапрос.ДоходРасход,
		|	ОсновнойЗапрос.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокаIIIA.КодСтроки,
		|	ВТ_СтрокаIIIA.ДоходРасход,
		|	ВТ_СтрокаIIIA.Сумма,
		|	ВТ_СтрокаIIIA.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокиIII.КодСтроки,
		|	ВТ_СтрокиIII.ДоходРасход,
		|	ВТ_СтрокиIII.Сумма,
		|	ВТ_СтрокиIII.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.011.IV"",
		|	ВложенныйЗапрос.ДоходРасход,
		|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|	ВЫБОР
		|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаДохода.Доход КАК ДоходРасход,
		|			ТаблицаДохода.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК Доход,
		|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаДохода
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаДохода.Доход) КАК ТаблицаДохода
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ГДЕ
		|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
		|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеV.КодСтроки,
		|	ДанныеV.ДоходРасход,
		|	ДанныеV.Сумма,
		|	ДанныеV.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.V"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&НачГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.011"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		(НалоговыйОбороты.СуммаОборотДт = 0
		|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.ДоходРасход,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VIII"" КАК КодСтроки,
		|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
		|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
		|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
		|		NULL КАК Счет
		|	ИЗ
		|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|	ГДЕ
		|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VIII"",
		|		ВТ_СтрокиIII.ДоходРасход,
		|		ВТ_СтрокиIII.Сумма,
		|		ВТ_СтрокиIII.ВыдСообщение,
		|		ВТ_СтрокиIII.Счет
		|	ИЗ
		|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|	ГДЕ
		|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VIII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|		0,
		|		NULL
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
		|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
		|	ГДЕ
		|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.011.VII""
		|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.011.VIII"")) КАК КонечныеИтоговыеДанные
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VI.КодСтроки,
		|	ЗапросПоСтроке49VI.ДоходРасход,
		|	ЗапросПоСтроке49VI.Сумма,
		|	ЗапросПоСтроке49VI.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VI"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.011.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VI"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки = ""220.00.011.VI"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеIX.КодСтроки,
		|	ДанныеIX.ДоходРасход,
		|	ДанныеIX.Сумма,
		|	ДанныеIX.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.IX"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		ВЫБОР
		|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
		|				ТОГДА НалоговыйОбороты.СуммаОборотДт
		|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
		|		КОНЕЦ КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1,
		|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&КонГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.011"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VII.КодСтроки,
		|	ЗапросПоСтроке49VII.ДоходРасход,
		|	ЗапросПоСтроке49VII.Сумма,
		|	ЗапросПоСтроке49VII.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.011.VII"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет2400Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.011.III"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.011.VII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	КодСтроки";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;		 
		
	КонецФункции // Форма220РассчитатьДанныеФормы()
	
	Процедура Форма2202020Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202020Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202020Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202020Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					Элемент.Ф220_01_E			= 7;
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202020Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202020Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.011.IIIB");
		СписокКодовСтрок.Добавить("220.00.011.IIIC");
		СписокКодовСтрок.Добавить("220.00.011.IIID");
		СписокКодовСтрок.Добавить("220.00.011.IIIE");
		СписокКодовСтрок.Добавить("220.00.011.IIIF");
		СписокКодовСтрок.Добавить("220.00.011.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202020Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202020Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.011.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.011.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202020Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202020Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202020Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202020Кв4_Форма220_04ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_04ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202020Кв4_Форма220_04ЗаполнитьАвто()
	
	#КонецОбласти

			///////////////////////////////
	// Форма 220.00 за 2020 год (Квартал 5)
	#Область Форма2202021Кв4
	
	Процедура Форма2202021Кв4_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220";
		
		ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
		КодФормы = ФормаСтруктура.КодФормы;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Если ПараметрыОтчета.Перезаполнить Тогда	
			ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		
		Форма2202021Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		Форма220_02ЗаполнитьАвто(ПараметрыОтчета);  
		
		//////////////////////////////////////////
		// Раздел. Расчетные показатели        	
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура,, "Форма2202021Кв4").Выбрать();
		Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
			Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.016.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
			ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.016.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаРезультата = Форма2202021Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура);
		
		ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		//++
		ТаблицаДанныхПодстрок = Новый ТаблицаЗначений;
		ТаблицаДанныхПодстрок.Колонки.Добавить("ИмяОбласти");
		ТаблицаДанныхПодстрок.Колонки.Добавить("КодСтроки");
		ТаблицаДанныхПодстрок.Колонки.Добавить("КодОсновнойСтроки");
		ТаблицаДанныхПодстрок.Колонки.Добавить("Значение");
		ТаблицаДанныхПодстрок.Колонки.Добавить("Приоритет");
		//--
		
		Пока ВыборкаОтчета.Следующий() Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
			
			ВыборкаДохРас = ВыборкаОтчета.Выбрать();
			
			Пока ВыборкаДохРас.Следующий() Цикл
				ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
				Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
					| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
					
				ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
					| определен код строки <%2>, который относится к вычетам <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
					
				КонецЕсли;								 
			КонецЦикла;
			
			Если ОбластьНачало = "s_220_00_001" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.III" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_3", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
			ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			//ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
			//	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.005.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.005.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_007" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_009" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.010.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
				Если СтрокаТаблицы.КодСтроки = "226-1-16" 
					ИЛИ СтрокаТаблицы.КодСтроки = "226-1-23"
					ИЛИ СтрокаТаблицы.КодСтроки = "226-1-25" Тогда
					СтрокаТаблицы.Приоритет = 1;
				Иначе
					СтрокаТаблицы.Приоритет = 0;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.012.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.012";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_012__";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
				Если СтрокаТаблицы.КодСтроки = "241-1-1" 
					ИЛИ СтрокаТаблицы.КодСтроки = "241-1-13" Тогда
					СтрокаТаблицы.Приоритет = 1;
				Иначе
					СтрокаТаблицы.Приоритет = 0;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.014.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Приоритет = 0;
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.014";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_014__";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
				
			ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIA" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIB" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIC" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIID" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIE" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIF" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIG" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIH" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.V" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VI" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VIII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IX" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_019" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_023"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_024"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_025"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_026"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_026", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_027"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_028"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_029"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_029", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_030"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.030.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.030.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			ИначеЕсли ОбластьНачало = "s_220_00_031"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_031", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_032"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.032.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			//ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.032.II.") <> 0 Тогда
			//	СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			//	СтрокаТаблицы.Приоритет = 0;
			//	СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
			//	СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.II";
			//	СтрокаТаблицы.ИмяОбласти = "s_220_00_032_2";
			//	СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 14);
			//ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.032.III.") <> 0 Тогда
			//	СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			//	СтрокаТаблицы.Приоритет = 0;
			//	СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
			//	СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.III";
			//	СтрокаТаблицы.ИмяОбласти = "s_220_00_032_3";
			//	СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 15);
			ИначеЕсли ОбластьНачало = "s_220_00_033"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.034.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_034_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.035.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.035.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_036"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_036", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_037"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_037", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_039"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_039", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_040" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.040.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.040.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_044" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_044", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.045.A" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.045.A.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Приоритет = 0;
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.045.A";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_045_a";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 13);
			ИначеЕсли ОбластьНачало = "s_220_00_046" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.046.A.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Приоритет = 0;
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.046.A";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_046_a";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 13);
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.046.B.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Приоритет = 0;
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.046.B";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_046_b";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 13);
			ИначеЕсли ОбластьНачало = "s_220_00_048" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_048", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			Иначе
				ВыборкаДохРас.Сбросить();
				Пока ВыборкаДохРас.Следующий() Цикл
					ДР = ВыборкаДохРас.ДоходРасход;
					Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
						
					ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
						
					КонецЕсли;								 
				КонецЦикла;			
			КонецЕсли;			
		КонецЦикла;
		
		Если ТаблицаДанныхПодстрок.Найти("220.00.012","КодОсновнойСтроки") <> Неопределено Тогда
			Если ТаблицаДанныхПодстрок.Найти("226-1-25","КодСтроки") = Неопределено Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = 0;
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
				СтрокаТаблицы.КодСтроки = "226-1-25";
				СтрокаТаблицы.Приоритет = 1;
			КонецЕсли;
			Если ТаблицаДанныхПодстрок.Найти("241-1-1","КодСтроки") <> Неопределено Тогда
				Если ТаблицаДанныхПодстрок.Найти("226-1-16","КодСтроки") = Неопределено Тогда
					СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
					СтрокаТаблицы.Значение = 0;
					СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
					СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
					СтрокаТаблицы.КодСтроки = "226-1-16";
					СтрокаТаблицы.Приоритет = 1;
				КонецЕсли;
			КонецЕсли;
			Если ТаблицаДанныхПодстрок.Найти("241-1-13","КодСтроки") <> Неопределено Тогда
				Если ТаблицаДанныхПодстрок.Найти("226-1-23","КодСтроки") = Неопределено Тогда
					СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
					СтрокаТаблицы.Значение = 0;
					СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
					СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
					СтрокаТаблицы.КодСтроки = "226-1-23";
					СтрокаТаблицы.Приоритет = 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_050", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
		
		ВычетыИПКоличествоМЗП = Форма2202021Кв4_ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаАктуальности", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	РегламентированныеРасчетныеПоказатели.РазмерМЗП КАК РазмерМЗП,
		|	РегламентированныеРасчетныеПоказатели.РазмерМРП КАК РазмерМРП
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаАктуальности, ) КАК РегламентированныеРасчетныеПоказатели";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РазмерМЗП = Выборка.РазмерМЗП;
			РазмерМРП = Выборка.РазмерМРП;
		КонецЕсли;
		ВычетыИП1 = ?(ВычетыИПКоличествоМЗП.Получить("1")<>Неопределено,ВычетыИПКоличествоМЗП.Получить("1"),0) * РазмерМЗП;
		ВычетыИП2 = ?(ВычетыИПКоличествоМЗП.Получить("2")<>Неопределено,882,0) * РазмерМРП;
		ВычетыИП3 = ?(ВычетыИПКоличествоМЗП.Получить("3")<>Неопределено,882,0) * РазмерМРП;
		
		Если ВычетыИП1 <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ВычетыИП1;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.II";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_032_2";
			СтрокаТаблицы.КодСтроки = "1";
		КонецЕсли;
		
		Если ВычетыИП2 <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ВычетыИП2;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.II";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_032_2";
			СтрокаТаблицы.КодСтроки = "2";
		КонецЕсли;
		
		Если ВычетыИП3 <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ВычетыИП3;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.II";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_032_2";
			СтрокаТаблицы.КодСтроки = "3";
		КонецЕсли;
		
		
		ПрочиеВычетыИП = ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ВычетНаОплатуМедицинскихУслуг                = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")),0) ;
		ВычетДобровольныеПенсионныеВзносы            = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")),0) ;
		ВычетПогашениеВознагражденияПоЖилищнымЗаймам = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")),0) ;
		
		Если ВычетДобровольныеПенсионныеВзносы <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ВычетДобровольныеПенсионныеВзносы;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.III";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_032_3";
			СтрокаТаблицы.КодСтроки = "1";
		КонецЕсли;
		
		Если ВычетНаОплатуМедицинскихУслуг <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ВычетНаОплатуМедицинскихУслуг;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.III";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_032_3";
			СтрокаТаблицы.КодСтроки = "2";
		КонецЕсли;
		
		Если ВычетПогашениеВознагражденияПоЖилищнымЗаймам <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ВычетПогашениеВознагражденияПоЖилищнымЗаймам;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.032.III";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_032_3";
			СтрокаТаблицы.КодСтроки = "3";
		КонецЕсли;
		
		
		ТаблицаДанныхПодстрок.Свернуть("КодОсновнойСтроки, КодСтроки, ИмяОбласти, Приоритет", "Значение");
		ТаблицаДанныхПодстрок.Сортировать("КодОсновнойСтроки Возр, Приоритет Убыв, Значение Убыв");
		Счетчик010 = 1;
		Счетчик012 = 1;
		Счетчик014 = 1;
		Счетчик = 1;
		Для Каждого СтрокаТаблицы из ТаблицаДанныхПодстрок Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(СтрокаТаблицы.КодОсновнойСтроки);
			Если ОбластьНачало = "s_220_00_010" Тогда
				Если Счетчик010 > 4 Тогда
					ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик010);
					ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик010);
					НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
					НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик010, НоваяСумма);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик010, НоваяСтрока);
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик010, Окр(СтрокаТаблицы.Значение));
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик010, СтрокаТаблицы.КодСтроки);
					Счетчик010 = Счетчик010 + 1;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				Если Счетчик012 > 1 Тогда
					ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик012);
					ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик012);
					НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
					НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик012, НоваяСумма);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик012, НоваяСтрока);
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик012, Окр(СтрокаТаблицы.Значение));
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик012, СтрокаТаблицы.КодСтроки);
					Счетчик012 = Счетчик012 + 1;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик014);
				ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик014);
				НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
				НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик014, НоваяСумма);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик014, НоваяСтрока);
			ИначеЕсли ОбластьНачало = "s_220_00_032_ii" 
				ИЛИ ОбластьНачало = "s_220_00_032_iii" 
				ИЛИ ОбластьНачало = "s_220_00_045_a" 
				ИЛИ ОбластьНачало = "s_220_00_046_a" 
				ИЛИ ОбластьНачало = "s_220_00_046_b" Тогда
				ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных, СтрокаТаблицы.ИмяОбласти + "_dic__" + Счетчик);
				ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти);
				НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
				НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти, НоваяСумма);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти + "_dic__" + Счетчик, НоваяСтрока);
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		СписокФормДерева = ФормаСтруктура.СписокФормДерева;
		мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
		мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
		Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
		
		// Заполняем поле "Представленные приложения"
		Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
			ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
			Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
				Строка = мСписокФормБезИерархии.Строки.Найти(Форма.КодФормы, "КодФормы");
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры // Форма2202021Кв4_Форма220ЗаполнитьАвто()
	
	Функция Форма2202021Кв4_Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
		Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
		ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
		Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
		Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
		Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
		Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
		
		Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
		
		// параметры по курсовым 
		Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		КодСтрокиКурсовойРазницы = Новый СписокЗначений;
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
		
		Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
		
		СписокСчетовНал = Новый СписокЗначений;	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
		
		Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
		
		СписокСчетовАктивов = Новый СписокЗначений;
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
		
		Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
		Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
		
		СписокСчетовРасходов = Новый СписокЗначений;
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
		
		СписокСчетовСтрокиA = Новый СписокЗначений;
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
		
		Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
		
		Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.016.IV");
		Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.016.IIIA");
		Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.016%");
		
		Запрос.УстановитьПараметр("Топливо",);
		
		КодыСтрок = Новый СписокЗначений;
		КодыСтрок.Добавить("220.00.016.IIIA"); 
		КодыСтрок.Добавить("220.00.016.IIIB"); 					
		КодыСтрок.Добавить("220.00.016.IIIC"); 					
		КодыСтрок.Добавить("220.00.016.IIID"); 					
		КодыСтрок.Добавить("220.00.016.IIIE"); 					
		КодыСтрок.Добавить("220.00.016.IIIF"); 					
		КодыСтрок.Добавить("220.00.016.IIIG"); 					
		КодыСтрок.Добавить("220.00.016.IIIH"); 					
		
		Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
		
		СписокДохКодовСтрок = Новый СписокЗначений;
		
		СписокДохКодовСтрок.Добавить("220.00.001");
		СписокДохКодовСтрок.Добавить("220.00.001.I");
		СписокДохКодовСтрок.Добавить("220.00.001.II");
		СписокДохКодовСтрок.Добавить("220.00.001.III");
		СписокДохКодовСтрок.Добавить("220.00.001.IV");
		СписокДохКодовСтрок.Добавить("220.00.002");
		СписокДохКодовСтрок.Добавить("220.00.003");
		СписокДохКодовСтрок.Добавить("220.00.004");
		СписокДохКодовСтрок.Добавить("220.00.005");
		СписокДохКодовСтрок.Добавить("220.00.005.I");
		СписокДохКодовСтрок.Добавить("220.00.005.II");
		СписокДохКодовСтрок.Добавить("220.00.006");
		СписокДохКодовСтрок.Добавить("220.00.007");
		СписокДохКодовСтрок.Добавить("220.00.008");
		СписокДохКодовСтрок.Добавить("220.00.009");
		СписокДохКодовСтрок.Добавить("220.00.010");
		СписокДохКодовСтрок.Добавить("220.00.012");
		СписокДохКодовСтрок.Добавить("220.00.013");
		СписокДохКодовСтрок.Добавить("220.00.014");
		СписокДохКодовСтрок.Добавить("220.00.035.I");
		СписокДохКодовСтрок.Добавить("220.00.036");
		СписокДохКодовСтрок.Добавить("220.00.040");
		СписокДохКодовСтрок.Добавить("220.00.040.II");
		СписокДохКодовСтрок.Добавить("220.00.046");
		СписокДохКодовСтрок.Добавить("220.00.046.A");
		СписокДохКодовСтрок.Добавить("220.00.046.B");

		
		мМакетКодовСтрок = ЭтотОбъект.ПолучитьМакет("КодыСтрокНалоговыхДеклараций");
		
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.010"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.012"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.014"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.046.A"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.046.B"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		
		СписокРасКодовСтрок = Новый СписокЗначений;
		Для Н = 17 По 22 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		Для Н = 24 По 33 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокРасКодовСтрок.Добавить("220.00.030.I");
		СписокРасКодовСтрок.Добавить("220.00.030.II");
		СписокРасКодовСтрок.Добавить("220.00.032.I");
		СписокРасКодовСтрок.Добавить("220.00.032.II");
		СписокРасКодовСтрок.Добавить("220.00.032.III");
		СписокРасКодовСтрок.Добавить("220.00.034.II");
		СписокРасКодовСтрок.Добавить("220.00.037");
		СписокРасКодовСтрок.Добавить("220.00.044");
		СписокРасКодовСтрок.Добавить("220.00.046");
		СписокРасКодовСтрок.Добавить("220.00.048");
		
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.032.II"  , СписокРасКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.032.III"  , СписокРасКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.045.A"  , СписокРасКодовСтрок, мМакетКодовСтрок);
		
		Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
		Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
		
		КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIA"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIB"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIC"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIID"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIE"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIF"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIG"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIH");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IV");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.V");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VI");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VIII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IX");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016%");
		
		Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
		
		СписокДохНеподлежащихНалог = Новый СписокЗначений;
		СписокДохНеподлежащихНалог.Добавить("220.00.040");
		
		Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.035.I");
		Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.035.II");
		
		Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
		
		Запрос.Текст="ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет,
		|	Доход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоходРасходКурсовых,
		|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
		|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	&КодСтрокиРасходыПоКурсовойРазнице
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДохода.Доход КАК ДоходРасход,
		|	ВЫБОР
		|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
		|			ТОГДА ДанныеОКодахДекларации.КодСтроки
		|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
		|	КОНЕЦ КАК КодСтроки
		|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДохода.Доход КАК Доход,
		|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|	ИЗ
		|		ВТ_Приоритет КАК ТаблицаДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДохода.Доход) КАК ТаблицаДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
		|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДоходРасход,
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""220.00.016.IIIA"" КАК КодСтроки,
		|	0 КАК ДоходРасход,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
		|	0 КАК ВыдСообщение,
		|	НалоговыйОбороты.ВидУчета КАК ВидУчета
		|ПОМЕСТИТЬ ВТ_СтрокаIIIA
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.016.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA)
		|				И НЕ Счет = &Счет7410,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.016.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
		|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
		|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
		|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
		|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
		|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
		|	ЗапросПо30Строкам.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СтрокиIII
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
		|		0 КАК Поле2,
		|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
		|		НалоговыйОбороты.Счет КАК Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет = &Счет7900Н
		|					И НЕ Счет = &Счет7410,
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&Счет7900Н)
		|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)- ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	0 КАК ПоложительнаяКР,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
		|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
		|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
		|				И НЕ ОсновнойЗапрос.КурсоваяРазница
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						ТОГДА ""СтатьяЗатратДох""
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|						И НЕ ОсновнойЗапрос.КурсоваяРазница
		|					ТОГДА ""ДоходРасх""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
		|		НалоговыйОбороты.Сумма КАК Сумма,
		|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
		|		ЛОЖЬ КАК КурсоваяРазница
		|	ИЗ
		|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
		|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
		|	ГДЕ
		|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА ""220.00.028""
		|			ИНАЧЕ ""220.00.010""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
		|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
		|		КОНЕЦ,
		|		0,
		|		ИСТИНА
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
		|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотКт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ПоложительнаяКР,
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотДт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ОтрицательнаяКР
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&НачПериода,
		|						&КонПериода,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетаДоходов)
		|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
		|								И НЕ Счет = &Счет7900Н
		|								И НЕ Счет = &Счет7410,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|						) КАК НалоговыйОбороты
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
		|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойЗапрос.КурсоваяРазница,
		|	ОсновнойЗапрос.ДоходРасход,
		|	ОсновнойЗапрос.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокаIIIA.КодСтроки,
		|	ВТ_СтрокаIIIA.ДоходРасход,
		|	ВТ_СтрокаIIIA.Сумма,
		|	ВТ_СтрокаIIIA.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокиIII.КодСтроки,
		|	ВТ_СтрокиIII.ДоходРасход,
		|	ВТ_СтрокиIII.Сумма,
		|	ВТ_СтрокиIII.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.016.IV"",
		|	ВложенныйЗапрос.ДоходРасход,
		|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|	ВЫБОР
		|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаДохода.Доход КАК ДоходРасход,
		|			ТаблицаДохода.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК Доход,
		|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаДохода
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаДохода.Доход) КАК ТаблицаДохода
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ГДЕ
		|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
		|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеV.КодСтроки,
		|	ДанныеV.ДоходРасход,
		|	ДанныеV.Сумма,
		|	ДанныеV.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.V"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&НачГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.016"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		(НалоговыйОбороты.СуммаОборотДт = 0
		|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.ДоходРасход,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.VIII"" КАК КодСтроки,
		|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
		|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
		|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
		|		NULL КАК Счет
		|	ИЗ
		|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|	ГДЕ
		|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VIII"",
		|		ВТ_СтрокиIII.ДоходРасход,
		|		ВТ_СтрокиIII.Сумма,
		|		ВТ_СтрокиIII.ВыдСообщение,
		|		ВТ_СтрокиIII.Счет
		|	ИЗ
		|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|	ГДЕ
		|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VIII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|		0,
		|		NULL
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
		|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
		|	ГДЕ
		|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.016.VII""
		|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.016.VIII"")) КАК КонечныеИтоговыеДанные
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VI.КодСтроки,
		|	ЗапросПоСтроке49VI.ДоходРасход,
		|	ЗапросПоСтроке49VI.Сумма,
		|	ЗапросПоСтроке49VI.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.VI"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VI"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки = ""220.00.016.VI"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеIX.КодСтроки,
		|	ДанныеIX.ДоходРасход,
		|	ДанныеIX.Сумма,
		|	ДанныеIX.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.IX"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		ВЫБОР
		|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
		|				ТОГДА НалоговыйОбороты.СуммаОборотДт
		|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
		|		КОНЕЦ КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1,
		|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&КонГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.016"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VII.КодСтроки,
		|	ЗапросПоСтроке49VII.ДоходРасход,
		|	ЗапросПоСтроке49VII.Сумма,
		|	ЗапросПоСтроке49VII.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.VII"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет2400Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		//|			ГДЕ
		//|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.016.III""
		|			) КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	КодСтроки";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;		 
		
	КонецФункции // Форма220РассчитатьДанныеФормы()
	
	Процедура Форма2202021Кв4_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202021Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202021Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202021Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					
					Элемент.Ф220_01_E			= 7;
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202021Кв4_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202021Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.016.IIIB");
		СписокКодовСтрок.Добавить("220.00.016.IIIC");
		СписокКодовСтрок.Добавить("220.00.016.IIID");
		СписокКодовСтрок.Добавить("220.00.016.IIIE");
		СписокКодовСтрок.Добавить("220.00.016.IIIF");
		СписокКодовСтрок.Добавить("220.00.016.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202021Кв4_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202021Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.016.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202021Кв4_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202021Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202021Кв4_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202021Кв4_Форма220_02ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_02ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202021Кв4_Форма220_02ЗаполнитьАвто()
	
	Функция Форма2202021Кв4_ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, НачПериода, КонПериода)
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			НачПериода);
		Запрос.УстановитьПараметр("КонПериода", 			КонПериода);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		
		ВидыВычетов = Новый Массив;
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"));
		
		Запрос.УстановитьПараметр("ВидыВычетов", ВидыВычетов);
		
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	Организации.ИндивидуальныйПредприниматель КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ФизЛицо
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|	И Организации.ИндивидуальныйПредприниматель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВычетыФизическихЛицИПН.Период < &НачПериода
		|			ТОГДА НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВычетыФизическихЛицИПН.Период, МЕСЯЦ)
		|	КОНЕЦ КАК Период,
		|	ВычетыФизическихЛицИПН.ВидВычета КАК ВидВычета,
		|	ВЫБОР
		|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо > &КонПериода
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ВычетыФизическихЛицИПН.ДействуетПо, МЕСЯЦ)
		|	КОНЕЦ КАК ДействуетПо,
		|	ВычетыФизическихЛицИПН.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ВычетыИПН
		|ИЗ
		|	РегистрСведений.ВычетыФизическихЛицИПН КАК ВычетыФизическихЛицИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛицо КАК ВТ_ФизЛицо
		|		ПО ВычетыФизическихЛицИПН.ФизическоеЛицо = ВТ_ФизЛицо.Ссылка
		|ГДЕ
		|	ВычетыФизическихЛицИПН.Активность
		|	И ВычетыФизическихЛицИПН.ПредоставлятьВычет
		|	И ВычетыФизическихЛицИПН.ВидВычета В(&ВидыВычетов)
		|	И ВычетыФизическихЛицИПН.Период < &КонПериода
		|	И (ВычетыФизическихЛицИПН.ДействуетПо > &НачПериода
		|			ИЛИ ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 0) КАК Месяц
		|ПОМЕСТИТЬ ВТ_МесяцыГода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 2)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 3)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 4)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 5)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 6)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 7)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 8)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 9)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 10)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 11)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 12)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|			ТОГДА 75
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоМЗП,
		|	ВТ_ВычетыИПН.ВидВычета КАК ВидВычета
		|ПОМЕСТИТЬ ВТ_Вычеты
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|ГДЕ
		|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|			ТОГДА 75
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВТ_ВычетыИПН.ВидВычета
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|ГДЕ
		|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПРодители)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_МесяцыГода.Месяц),
		|	МАКСИМУМ(ВТ_ВычетыИПН.ВидВычета)
		|ИЗ
		|	ВТ_МесяцыГода КАК ВТ_МесяцыГода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|		ПО ВТ_МесяцыГода.Месяц >= ВТ_ВычетыИПН.Период
		|			И ВТ_МесяцыГода.Месяц <= ВТ_ВычетыИПН.ДействуетПо
		|			И (ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_Вычеты.КоличествоМЗП) КАК КоличествоМЗП,
		|	ВТ_Вычеты.ВидВычета КАК ВидВычета
		|ИЗ
		|	ВТ_Вычеты КАК ВТ_Вычеты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Вычеты.ВидВычета"
		;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Соответствие = Новый Соответствие();
		Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"), "1");
		Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"), "2");
		Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"), "3");
		
		СоответствиеВозврат = Новый Соответствие();
		
		Пока Выборка.Следующий() Цикл
			СоответствиеВозврат.Вставить(?(Соответствие.Получить(Выборка.ВидВычета)<>Неопределено,Соответствие.Получить(Выборка.ВидВычета),"1"), Выборка.КоличествоМЗП);
		КонецЦикла;
		Возврат СоответствиеВозврат;
		
	КонецФункции
	
	#КонецОбласти
	
			///////////////////////////////
	// Форма 220.00 за 2021-2022 год (Квартал 1)
	#Область Форма2202022Кв1
	
	Процедура Форма2202022Кв1_Форма220ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220";
		
		ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
		КодФормы = ФормаСтруктура.КодФормы;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Если ПараметрыОтчета.Перезаполнить Тогда	
			ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		
		Форма2202022Кв1_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
		Форма220_02ЗаполнитьАвто(ПараметрыОтчета);  
		
		//////////////////////////////////////////
		// Раздел. Расчетные показатели        	
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура,, "Форма2202022Кв1").Выбрать();
		Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
			Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.016.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
			ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.016.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаРезультата = Форма2202022Кв1_Форма220РассчитатьДанныеФормы(ФормаСтруктура);
		
		ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		//++
		ТаблицаДанныхПодстрок = Новый ТаблицаЗначений;
		ТаблицаДанныхПодстрок.Колонки.Добавить("ИмяОбласти");
		ТаблицаДанныхПодстрок.Колонки.Добавить("КодСтроки");
		ТаблицаДанныхПодстрок.Колонки.Добавить("КодОсновнойСтроки");
		ТаблицаДанныхПодстрок.Колонки.Добавить("Значение");
		ТаблицаДанныхПодстрок.Колонки.Добавить("Приоритет");
		//--
		
		Пока ВыборкаОтчета.Следующий() Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
			
			ВыборкаДохРас = ВыборкаОтчета.Выбрать();
			
			Пока ВыборкаДохРас.Следующий() Цикл
				ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
				Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
					| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
					
				ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
					// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
					// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
					// Такие данные в форму не помещаем.
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
					| определен код строки <%2>, который относится к вычетам <%3> '"),
					ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
					
				КонецЕсли;								 
			КонецЦикла;
			
			Если ОбластьНачало = "s_220_00_001" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.III" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_3", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
			ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			//ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
			//	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.005.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.005.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_007" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_009" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.010.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
				Если СтрокаТаблицы.КодСтроки = "226-1-16" 
					ИЛИ СтрокаТаблицы.КодСтроки = "226-1-23"
					ИЛИ СтрокаТаблицы.КодСтроки = "226-1-25" Тогда
					СтрокаТаблицы.Приоритет = 1;
				Иначе
					СтрокаТаблицы.Приоритет = 0;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.012.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.012";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_012__";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
				Если СтрокаТаблицы.КодСтроки = "241-1-1" 
					ИЛИ СтрокаТаблицы.КодСтроки = "241-1-13" Тогда
					СтрокаТаблицы.Приоритет = 1;
				Иначе
					СтрокаТаблицы.Приоритет = 0;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.014.") <> 0 Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Приоритет = 0;
				СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.014";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_014__";
				СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
				
			ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIA" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIB" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIC" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIID" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIE" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIF" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIG" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIH" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IV" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.V" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VI" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VIII" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IX" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_019" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_023"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_024"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_025"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_026"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_026", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_027"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_028"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_029"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_029", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_030"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.030.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.030.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));	
				
			ИначеЕсли ОбластьНачало = "s_220_00_031"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_031", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_032"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.032.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.032.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ОбластьНачало = "s_220_00_033"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.034.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_034_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.035.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.035.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_036"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_036", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_037"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_037", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_039"  Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_039", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_040" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.040.I" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.040.II" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_044" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_044", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.045.A") <> 0 Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.045.B") <> 0 Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_046" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.046.A") <> 0 Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.046.B") <> 0 Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			ИначеЕсли ОбластьНачало = "s_220_00_048" Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_048", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
				
			Иначе
				ВыборкаДохРас.Сбросить();
				Пока ВыборкаДохРас.Следующий() Цикл
					ДР = ВыборкаДохРас.ДоходРасход;
					Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
						
					ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						
						ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
						|  <%2>, не отражены в форме.'"),
						ВыборкаДохРас.КодСтроки, ДР.Наименование);
						
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
						
					КонецЕсли;								 
				КонецЦикла;			
			КонецЕсли;			
		КонецЦикла;
		
		Если ТаблицаДанныхПодстрок.Найти("220.00.012","КодОсновнойСтроки") <> Неопределено Тогда
			Если ТаблицаДанныхПодстрок.Найти("226-1-25","КодСтроки") = Неопределено Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = 0;
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
				СтрокаТаблицы.КодСтроки = "226-1-25";
				СтрокаТаблицы.Приоритет = 1;
			КонецЕсли;
			Если ТаблицаДанныхПодстрок.Найти("241-1-1","КодСтроки") <> Неопределено Тогда
				Если ТаблицаДанныхПодстрок.Найти("226-1-16","КодСтроки") = Неопределено Тогда
					СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
					СтрокаТаблицы.Значение = 0;
					СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
					СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
					СтрокаТаблицы.КодСтроки = "226-1-16";
					СтрокаТаблицы.Приоритет = 1;
				КонецЕсли;
			КонецЕсли;
			Если ТаблицаДанныхПодстрок.Найти("241-1-13","КодСтроки") <> Неопределено Тогда
				Если ТаблицаДанныхПодстрок.Найти("226-1-23","КодСтроки") = Неопределено Тогда
					СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
					СтрокаТаблицы.Значение = 0;
					СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
					СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
					СтрокаТаблицы.КодСтроки = "226-1-23";
					СтрокаТаблицы.Приоритет = 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_050", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
		
		// ВычетыИПКоличествоМЗП - соответствие:
		// "1" - "Справочник.ВычетыИПН.Стандартный1МЗП";
		// "2" - "Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды";
		// "3" - "Справочник.ВычетыИПН.Стандартный75МЗПРодители".
		ВычетыИПКоличествоМЗП = Форма2202022Кв1_ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаАктуальности", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		СтандартныеВычетыИПН = Новый Массив;
		СтандартныеВычетыИПН.Добавить(Справочники.ВычетыИПН.Стандартный1МЗП);
		СтандартныеВычетыИПН.Добавить(Справочники.ВычетыИПН.Стандартный75МЗПИнвалиды);
		СтандартныеВычетыИПН.Добавить(Справочники.ВычетыИПН.Стандартный75МЗПРодители);
		Запрос.УстановитьПараметр("СтандартныеВычетыИПН", СтандартныеВычетыИПН);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	РегламентированныеРасчетныеПоказатели.РазмерМЗП КАК РазмерМЗП,
		|	РегламентированныеРасчетныеПоказатели.РазмерМРП КАК РазмерМРП
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаАктуальности, ) КАК РегламентированныеРасчетныеПоказатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН КАК ВидВычетаИПН,
		|	РазмерыВычетовИПНСрезПоследних.ВидПределаВычета КАК ВидПределаВычета,
		|	РазмерыВычетовИПНСрезПоследних.Размер КАК Размер,
		|	ВЫБОР
		|		КОГДА РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП)
		|			ТОГДА ""1""
		|		КОГДА РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|			ТОГДА ""2""
		|		КОГДА РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПРодители)
		|			ТОГДА ""3""
		|		ИНАЧЕ ""0""
		|	КОНЕЦ КАК ВычетИП,
		|	0 КАК Показатель
		|ИЗ
		|	РегистрСведений.РазмерыВычетовИПН.СрезПоследних(&ДатаАктуальности, ) КАК РазмерыВычетовИПНСрезПоследних
		|ГДЕ
		|	РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН В (&СтандартныеВычетыИПН)";
		
		РезультатПоказателиВычеты = Запрос.ВыполнитьПакет();
		
		РазмерМЗП = 0;
		РазмерМРП = 0;
		ВыборкаРеглПоказатели = РезультатПоказателиВычеты[0].Выбрать();
		Если ВыборкаРеглПоказатели.Следующий() Тогда
			РазмерМЗП = ВыборкаРеглПоказатели.РазмерМЗП;
			РазмерМРП = ВыборкаРеглПоказатели.РазмерМРП;
		Иначе
			ТекстСообщения = НСтр("ru = 'На начало отчетного периода в регистре сведений ""Регламентированные расчетные показатели""
			|  не установлены значения показателей МРП и МЗП.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
		КонецЕсли;
		
		ТаблицаРазмерыВычетовИП = РезультатПоказателиВычеты[1].Выгрузить();
		Для Каждого СтандартныйВычет Из СтандартныеВычетыИПН Цикл
			СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти(СтандартныйВычет, "ВидВычетаИПН");
			Если СтрокаВычета = Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'На начало отчетного периода в регистре сведений ""Размеры вычетов ИПН""
				|  не установлены значения для вычета <%1>.'"),
				СтандартныйВычет);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
				Продолжить;
			Иначе
				Если СтрокаВычета.ВидПределаВычета = Перечисления.ВидыПределовВычетовИКорректировокДоходов.МЗП Тогда
					СтрокаВычета.Показатель = РазмерМЗП;
				ИначеЕсли СтрокаВычета.ВидПределаВычета = Перечисления.ВидыПределовВычетовИКорректировокДоходов.МРП Тогда
					СтрокаВычета.Показатель = РазмерМРП;
				Иначе
					СтрокаВычета.Показатель = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// Стандартный1МЗП
		СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти("1", "ВычетИП");
		Если СтрокаВычета = Неопределено Тогда
			РазмерПоказателя = 0;
		Иначе
			РазмерПоказателя = СтрокаВычета.Размер * СтрокаВычета.Показатель;
		КонецЕсли;
		ВычетыИП1 = ?(ВычетыИПКоличествоМЗП.Получить("1")<>Неопределено, ВычетыИПКоличествоМЗП.Получить("1"), 0) * РазмерПоказателя;
		
		// Стандартный75МЗПИнвалиды
		СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти("2", "ВычетИП");
		Если СтрокаВычета = Неопределено Тогда
			РазмерПоказателя = 0;
		Иначе
			РазмерПоказателя = СтрокаВычета.Размер * СтрокаВычета.Показатель;
		КонецЕсли;
		ВычетыИП2 = ?(ВычетыИПКоличествоМЗП.Получить("2")<>Неопределено, 1, 0) * РазмерПоказателя;
		
		// Стандартный75МЗПРодители
		СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти("3", "ВычетИП");
		Если СтрокаВычета = Неопределено Тогда
			РазмерПоказателя = 0;
		Иначе
			РазмерПоказателя = СтрокаВычета.Размер * СтрокаВычета.Показатель;
		КонецЕсли;
		ВычетыИП3 = ?(ВычетыИПКоличествоМЗП.Получить("3")<>Неопределено, 1, 0) * РазмерПоказателя;
		
		// Итоговые стандартные вычеты
		ВычетыИПИтого = ВычетыИП1 + ВычетыИП2 + ВычетыИП3; 
		
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_3", Окр(ВычетыИПИтого, 0));
       	
		ПрочиеВычетыИП = ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ВычетНаОплатуМедицинскихУслуг                = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")),0) ;
		ВычетДобровольныеПенсионныеВзносы            = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")),0) ;
		ВычетПогашениеВознагражденияПоЖилищнымЗаймам = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")),0) ;
		
		ПрочиеВычетыИтого = ВычетНаОплатуМедицинскихУслуг + ВычетДобровольныеПенсионныеВзносы + ВычетПогашениеВознагражденияПоЖилищнымЗаймам;
				
		РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_4", Окр(ПрочиеВычетыИтого, 0));
        	
		ТаблицаДанныхПодстрок.Свернуть("КодОсновнойСтроки, КодСтроки, ИмяОбласти, Приоритет", "Значение");
		ТаблицаДанныхПодстрок.Сортировать("КодОсновнойСтроки Возр, Приоритет Убыв, Значение Убыв");
		Счетчик010 = 1;
		Счетчик012 = 1;
		Счетчик014 = 1;
		Счетчик = 1;
		Для Каждого СтрокаТаблицы из ТаблицаДанныхПодстрок Цикл
			ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(СтрокаТаблицы.КодОсновнойСтроки);
			Если ОбластьНачало = "s_220_00_010" Тогда
				Если Счетчик010 > 4 Тогда
					ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик010);
					ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик010);
					НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
					НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик010, НоваяСумма);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик010, НоваяСтрока);
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик010, Окр(СтрокаТаблицы.Значение));
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик010, СтрокаТаблицы.КодСтроки);
					Счетчик010 = Счетчик010 + 1;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
				Если Счетчик012 > 1 Тогда
					ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик012);
					ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик012);
					НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
					НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик012, НоваяСумма);
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик012, НоваяСтрока);
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик012, Окр(СтрокаТаблицы.Значение));
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик012, СтрокаТаблицы.КодСтроки);
					Счетчик012 = Счетчик012 + 1;
				КонецЕсли;
			ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
				ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик014);
				ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик014);
				НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
				НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик014, НоваяСумма);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик014, НоваяСтрока);
	   		КонецЕсли;
		КонецЦикла;
		
		ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
		
		СписокФормДерева = ФормаСтруктура.СписокФормДерева;
		мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
		мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
		Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
		
		// Заполняем поле "Представленные приложения"
		Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
			ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
			Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
				Строка = мСписокФормБезИерархии.Строки.Найти(Форма.КодФормы, "КодФормы");
				Если Строка.Выгружать = 1 Тогда
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
				Иначе
					РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецПроцедуры // Форма2202022Кв1_Форма220ЗаполнитьАвто()
	
	Функция Форма2202022Кв1_Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
		Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
		ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
		Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
		Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
		Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
		Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
		
		Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
		
		// параметры по курсовым 
		Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		КодСтрокиКурсовойРазницы = Новый СписокЗначений;
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
		КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
		
		Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
		Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
		
		Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
		
		СписокСчетовНал = Новый СписокЗначений;	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
		СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
		
		Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
		
		СписокСчетовАктивов = Новый СписокЗначений;
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
		СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
		
		Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
		Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
		
		СписокСчетовРасходов = Новый СписокЗначений;
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
		СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
		
		СписокСчетовСтрокиA = Новый СписокЗначений;
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
		СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
		
		Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
		
		Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.016.IV");
		Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.016.IIIA");
		Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.016%");
		
		Запрос.УстановитьПараметр("Топливо",);
		
		КодыСтрок = Новый СписокЗначений;
		КодыСтрок.Добавить("220.00.016.IIIA"); 
		КодыСтрок.Добавить("220.00.016.IIIB"); 					
		КодыСтрок.Добавить("220.00.016.IIIC"); 					
		КодыСтрок.Добавить("220.00.016.IIID"); 					
		КодыСтрок.Добавить("220.00.016.IIIE"); 					
		КодыСтрок.Добавить("220.00.016.IIIF"); 					
		КодыСтрок.Добавить("220.00.016.IIIG"); 					
		КодыСтрок.Добавить("220.00.016.IIIH"); 					
		
		Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
		
		СписокДохКодовСтрок = Новый СписокЗначений;
		
		СписокДохКодовСтрок.Добавить("220.00.001");
		СписокДохКодовСтрок.Добавить("220.00.001.I");
		СписокДохКодовСтрок.Добавить("220.00.001.II");
		СписокДохКодовСтрок.Добавить("220.00.001.III");
		СписокДохКодовСтрок.Добавить("220.00.001.IV");
		СписокДохКодовСтрок.Добавить("220.00.002");
		СписокДохКодовСтрок.Добавить("220.00.003");
		СписокДохКодовСтрок.Добавить("220.00.004");
		СписокДохКодовСтрок.Добавить("220.00.005");
		СписокДохКодовСтрок.Добавить("220.00.005.I");
		СписокДохКодовСтрок.Добавить("220.00.005.II");
		СписокДохКодовСтрок.Добавить("220.00.006");
		СписокДохКодовСтрок.Добавить("220.00.007");
		СписокДохКодовСтрок.Добавить("220.00.008");
		СписокДохКодовСтрок.Добавить("220.00.009");
		СписокДохКодовСтрок.Добавить("220.00.010");
		СписокДохКодовСтрок.Добавить("220.00.012");
		СписокДохКодовСтрок.Добавить("220.00.013");
		СписокДохКодовСтрок.Добавить("220.00.014");
		СписокДохКодовСтрок.Добавить("220.00.035.I");
		СписокДохКодовСтрок.Добавить("220.00.036");
		СписокДохКодовСтрок.Добавить("220.00.040");
		СписокДохКодовСтрок.Добавить("220.00.040.II");
		СписокДохКодовСтрок.Добавить("220.00.046");
		СписокДохКодовСтрок.Добавить("220.00.046.A");
		СписокДохКодовСтрок.Добавить("220.00.046.B");

		
		мМакетКодовСтрок = ЭтотОбъект.ПолучитьМакет("КодыСтрокНалоговыхДеклараций");
		
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.010"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.012"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		ДополнитьСписокКодовСтрокИзКлассификатора("220.00.014"  , СписокДохКодовСтрок, мМакетКодовСтрок);
		
		СписокРасКодовСтрок = Новый СписокЗначений;
		Для Н = 17 По 22 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		Для Н = 24 По 33 Цикл
			Номер = Формат(Н, "ЧЦ=2; ЧВН=");
			СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
		КонецЦикла;
		
		СписокРасКодовСтрок.Добавить("220.00.030.I");
		СписокРасКодовСтрок.Добавить("220.00.030.II");
		СписокРасКодовСтрок.Добавить("220.00.032.I");
		СписокРасКодовСтрок.Добавить("220.00.032.II");
		СписокРасКодовСтрок.Добавить("220.00.032.III");
		СписокРасКодовСтрок.Добавить("220.00.032.IV");		
		СписокРасКодовСтрок.Добавить("220.00.034.II");
		СписокРасКодовСтрок.Добавить("220.00.037");
		СписокРасКодовСтрок.Добавить("220.00.044"); 
		СписокРасКодовСтрок.Добавить("220.00.045.A");
		СписокРасКодовСтрок.Добавить("220.00.045.B");
		СписокРасКодовСтрок.Добавить("220.00.046");
		СписокРасКодовСтрок.Добавить("220.00.048");
			
		Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
		Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
		
		КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIA"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIB"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIC"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIID"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIE"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIF"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIG"); 					
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIH");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IV");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.V");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VI");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VIII");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IX");
		КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016%");
		
		Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
		
		СписокДохНеподлежащихНалог = Новый СписокЗначений;
		СписокДохНеподлежащихНалог.Добавить("220.00.040");
		
		Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.035.I");
		Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.035.II");
		
		Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
		
		Запрос.Текст="ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет,
		|	Доход
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоходРасходКурсовых,
		|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
		|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	&КодСтрокиРасходыПоКурсовойРазнице
		|ИЗ
		|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
		|ГДЕ
		|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
		|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
		|	И ВЫБОР
		|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВЫБОР
		|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|								ТОГДА ИСТИНА
		|							ИНАЧЕ ЛОЖЬ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
		|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
		|		ИНАЧЕ ВЫБОР
		|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
		|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
		|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДохода.Доход КАК ДоходРасход,
		|	ВЫБОР
		|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
		|			ТОГДА ДанныеОКодахДекларации.КодСтроки
		|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
		|	КОНЕЦ КАК КодСтроки
		|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДохода.Доход КАК Доход,
		|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|	ИЗ
		|		ВТ_Приоритет КАК ТаблицаДохода
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДохода.Доход) КАК ТаблицаДохода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
		|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДоходРасход,
		|	КодСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""220.00.016.IIIA"" КАК КодСтроки,
		|	0 КАК ДоходРасход,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
		|	0 КАК ВыдСообщение,
		|	НалоговыйОбороты.ВидУчета КАК ВидУчета
		|ПОМЕСТИТЬ ВТ_СтрокаIIIA
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.016.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA)
		|				И НЕ Счет = &Счет7410,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
		|			) КАК НалоговыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.016.IIIA"",
		|	0,
		|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|	0,
		|	НалоговыйОбороты.ВидУчета
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В (&СписокСчетовСтрокиA),
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
		|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НалоговыйОбороты.ВидУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
		|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
		|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
		|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
		|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
		|	ЗапросПо30Строкам.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СтрокиIII
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
		|		0 КАК Поле2,
		|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
		|		НалоговыйОбороты.Счет КАК Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет = &Счет7900Н
		|					И НЕ Счет = &Счет7410,
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&Счет7900Н)
		|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос.КодСтроки,
		|		ВложенныйЗапрос.ДоходРасход,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)- ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
		|		0,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.Доход КАК Доход,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.Доход) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
		|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.ДоходРасход,
		|		ВложенныйЗапрос.КодСтроки,
		|		НалоговыйОбороты.ВидУчета,
		|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
		|	0 КАК ПоложительнаяКР,
		|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
		|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н
		|				И НЕ Счет = &Счет7410,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|			) КАК НалоговыйОборотыПоЗатратам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НалоговыйОборотыПоДоходам.Субконто1,
		|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаДоходов),
		|			&ВидСубконтоДоходов,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|			) КАК НалоговыйОборотыПоДоходам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
		|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
		|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
		|				И НЕ ОсновнойЗапрос.КурсоваяРазница
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						ТОГДА ""СтатьяЗатратДох""
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
		|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
		|						И НЕ ОсновнойЗапрос.КурсоваяРазница
		|					ТОГДА ""ДоходРасх""
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
		|		НалоговыйОбороты.Сумма КАК Сумма,
		|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
		|		ЛОЖЬ КАК КурсоваяРазница
		|	ИЗ
		|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
		|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
		|	ГДЕ
		|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА ""220.00.028""
		|			ИНАЧЕ ""220.00.010""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
		|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
		|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
		|		КОНЕЦ,
		|		0,
		|		ИСТИНА
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
		|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотКт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ПоложительнаяКР,
		|				ВЫБОР
		|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
		|						ТОГДА НалоговыйОбороты.СуммаОборотДт
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ОтрицательнаяКР
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&НачПериода,
		|						&КонПериода,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетаДоходов)
		|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
		|								И НЕ Счет = &Счет7900Н
		|								И НЕ Счет = &Счет7410,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
		|						) КАК НалоговыйОбороты
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
		|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
		|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновнойЗапрос.КурсоваяРазница,
		|	ОсновнойЗапрос.ДоходРасход,
		|	ОсновнойЗапрос.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокаIIIA.КодСтроки,
		|	ВТ_СтрокаIIIA.ДоходРасход,
		|	ВТ_СтрокаIIIA.Сумма,
		|	ВТ_СтрокаIIIA.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_СтрокиIII.КодСтроки,
		|	ВТ_СтрокиIII.ДоходРасход,
		|	ВТ_СтрокиIII.Сумма,
		|	ВТ_СтрокиIII.ВыдСообщение
		|ИЗ
		|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""220.00.016.IV"",
		|	ВложенныйЗапрос.ДоходРасход,
		|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|	ВЫБОР
		|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			,
		|			Счет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ Счет = &Счет7900Н,
		|			&ВидСубконтоЗатрат,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета = &ВидУчетаНУ,
		|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
		|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
		|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|			) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаДохода.Доход КАК ДоходРасход,
		|			ТаблицаДохода.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаДохода.Доход КАК Доход,
		|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаДохода
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаДохода.Доход) КАК ТаблицаДохода
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
		|		ГДЕ
		|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
		|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеV.КодСтроки,
		|	ДанныеV.ДоходРасход,
		|	ДанныеV.Сумма,
		|	ДанныеV.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.V"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
		|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&НачГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.016"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		(НалоговыйОбороты.СуммаОборотДт = 0
		|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.ДоходРасход,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.VIII"" КАК КодСтроки,
		|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
		|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
		|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
		|		NULL КАК Счет
		|	ИЗ
		|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
		|	ГДЕ
		|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VIII"",
		|		ВТ_СтрокиIII.ДоходРасход,
		|		ВТ_СтрокиIII.Сумма,
		|		ВТ_СтрокиIII.ВыдСообщение,
		|		ВТ_СтрокиIII.Счет
		|	ИЗ
		|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
		|	ГДЕ
		|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
		|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VIII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
		|		0,
		|		NULL
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
		|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
		|				&ВидСубконтоЗатрат,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
		|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
		|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
		|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
		|	ГДЕ
		|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.016.VII""
		|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.016.VIII"")) КАК КонечныеИтоговыеДанные
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VI.КодСтроки,
		|	ЗапросПоСтроке49VI.ДоходРасход,
		|	ЗапросПоСтроке49VI.Сумма,
		|	ЗапросПоСтроке49VI.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.VI"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VI"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет7900Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|			ГДЕ
		|				ДанныеОКодахДекларации.КодСтроки = ""220.00.016.VI"") КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеIX.КодСтроки,
		|	ДанныеIX.ДоходРасход,
		|	ДанныеIX.Сумма,
		|	ДанныеIX.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.IX"" КАК КодСтроки,
		|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
		|		ВЫБОР
		|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
		|				ТОГДА НалоговыйОбороты.СуммаОборотДт
		|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
		|		КОНЕЦ КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И Субконто1 <> &ПустоеРБП
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
		|				) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				НалоговыйОстатки.Субконто1 КАК Субконто1,
		|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Остатки(
		|						&КонГраница,
		|						Счет = &Счет1620Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И Субконто1 <> &ПустоеРБП
		|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|						ИЗ
		|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|					ГДЕ
		|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
		|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
		|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.016"") КАК СтатьиЗатратПоКоду
		|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
		|	ГДЕ
		|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗапросПоСтроке49VII.КодСтроки,
		|	ЗапросПоСтроке49VII.ДоходРасход,
		|	ЗапросПоСтроке49VII.Сумма,
		|	ЗапросПоСтроке49VII.ВыдСообщение
		|ИЗ
		|	(ВЫБРАТЬ
		|		""220.00.016.VII"" КАК КодСтроки,
		|		0 КАК ДоходРасход,
		|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
		|		0 КАК ВыдСообщение
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет = &Счет2400Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
		|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		//|			ГДЕ
		//|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.016.III""
		|			) КАК СтатьиЗатратПоКоду
		|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		""220.00.016.VII"",
		|		0,
		|		НалоговыйОбороты.СуммаОборотДт,
		|		0
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				,
		|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета = &ВидУчетаНУ,
		|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
		|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
		|ИТОГИ
		|	СУММА(Сумма)
		|ПО
		|	КодСтроки";
		
		Результат = Запрос.Выполнить();
		
		Возврат Результат;		 
		
	КонецФункции // Форма220РассчитатьДанныеФормы()
	
	Процедура Форма2202022Кв1_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_01";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
		
		Если ПериодыДляФормированияПроверка = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Возврат;
		Иначе
			КолПериодов = ПериодыДляФормированияПроверка.Количество();
			Если КолПериодов = 0 Тогда 
				КолПовторов = 1;
			Иначе 
				КолПовторов = КолПериодов / 2;
			КонецЕсли;
		КонецЕсли;
		
		ТекущаяСтраница = 1;
		ЕстьДанныеДляВыводаНаФорму = Ложь;
		
		ТаблицаОтчета  = Форма2202022Кв1_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			НомерСтроки = 2;
			ИмяГруппы = ЭлементСтруктуры.Ключ;
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
			ТаблицаСтрокГруппы.Очистить();
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
				ЕстьДанныеДляВыводаНаФорму = Истина;
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли; 					
					
					Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
					Элемент.Ф220_01_C = КодСтраныРезидентства;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					Иначе 
						НомерНалоговойРегистрации = "";
					КонецЕсли;
					
					Элемент.Ф220_01_D = НомерНалоговойРегистрации;
					НомерНалоговойРегистрации = "";
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
						ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
						БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
						Если БуквеннаяЧастьКода = "B" Тогда 
							Элемент.Ф220_01_E = 1;
						ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
							Элемент.Ф220_01_E = 2;
						ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
							Элемент.Ф220_01_E = 3;
						ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
							Элемент.Ф220_01_E = 4;
						ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
							Элемент.Ф220_01_E = 5;
						ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
							Элемент.Ф220_01_E = 6;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					
					Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
					
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 
		КонецЦикла; 	
		
		//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
		//или о контрагентах, у которых не указана статья затрат в проводках
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
			ТаблицаСтатейЗатрат = Форма2202022Кв1_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
			Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
				Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				Иначе  //Выбираем контрагентов из запроса
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
					Строка(СтрокаСтатьиЗатрат.Значение));					
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаОтчета = Форма2202022Кв1_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
		
		Если НомерСтроки <> Неопределено Тогда 
			НачальныйНомерСтроки = НомерСтроки;
		КонецЕсли;
		
		Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
			ИмяГруппы = ЭлементСтруктуры.Ключ;			
			ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
			
			Если НомерСтроки = Неопределено Тогда 
				ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
				ТаблицаРасшифровки.Очистить();
				НомерСтроки = 2;
				ТаблицаСтрокГруппы.Очистить();
				НачальныйНомерСтроки = НомерСтроки;
			Иначе 
				НомерСтроки = НачальныйНомерСтроки;
			КонецЕсли;
			
			Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
				
				ЕстьДанныеДляВыводаНаФорму = Истина;
				
				Элемент = ТаблицаСтрокГруппы.Добавить();   			 
				Если ИмяГруппы = "Страница1" Тогда
					//Так должны заполнять по отдельности значения выборки 
					//для каждого листа
					Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					КодСтраныРезидентства = "";
					
					Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";                                                                             						
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
						// В ИИН/БИН имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
						КонецЕсли;
						СтрокаБИНКонтрагента = "";						
					Иначе
						СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
					КонецЕсли; 
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
					КонецЕсли;
					
					Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
					СтрокаБИНКонтрагента = "";
					Элемент.Ф220_01_C    = КодСтраныРезидентства;
					
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
					
					Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
						Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;	
							НомерНалоговойРегистрации = "";
						ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
							// В Номере имеются символы, отличные от цифр (0..9)
							Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
								ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
								Строка(СтрокаОтчета.Контрагент));
								ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
							КонецЕсли;
							НомерНалоговойРегистрации = "";
						Иначе						
							НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
						КонецЕсли;
					КонецЕсли;
					
					Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
					
					//заполним таблицу расшифровки
					РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
					
					НомерНалоговойРегистрации 	= "";
					
					Элемент.Ф220_01_E			= 7;
					
				ИначеЕсли ИмяГруппы = "Страница2" Тогда
					
					Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
					
					Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				КонецЕсли;
				НомерСтроки = НомерСтроки + 1;           			 
			КонецЦикла; 	 			
		КонецЦикла;
		
		ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
		
	КонецПроцедуры // Форма2202022Кв1_Форма220_01ЗаполнитьАвто()
	
	Функция Форма2202022Кв1_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.016.IIIB");
		СписокКодовСтрок.Добавить("220.00.016.IIIC");
		СписокКодовСтрок.Добавить("220.00.016.IIID");
		СписокКодовСтрок.Добавить("220.00.016.IIIE");
		СписокКодовСтрок.Добавить("220.00.016.IIIF");
		СписокКодовСтрок.Добавить("220.00.016.IIIG");
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
		
		Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоретет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.КБЕ,
		|	КонечныеИтоговыеДанные.КодСтроки,
		|	КонечныеИтоговыеДанные.Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ КАК КБЕ,
		|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
		|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
		|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
		|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтатьиЗатратПоКоду.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1620Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|					ТаблицаДохода.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоретет КАК ТаблицаДохода
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|				ГДЕ
		|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
		|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.КодСтроки,
		|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.СерияСвидетельстваПоНДС,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		Контрагенты.НомерСвидетельстваПоНДС,
		|		Контрагенты.ДатаСвидетельстваПоНДС,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.КБЕ,	              
		|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202022Кв1_Форма220_01СтрокиС1По6РассчитатьДанныеФормы()
	
	Функция Форма2202022Кв1_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
		
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		ТекстЗапросаПоМесяцам = "";
		
		Если ПериодФормирования <> Неопределено Тогда 
			
			КолПериодов = ПериодФормирования.Количество() - 1;
			
			Для Счетчик = 0 по КолПериодов Цикл
				НазПериодаНач = ПериодФормирования[Счетчик].Представление;
				НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
				ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
				ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
				Если ТекстЗапросаПоМесяцам = "" Тогда
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
					|   ГДЕ
					|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				Иначе 
					ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
					|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
					| ";
				КонецЕсли;
				Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
				Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			
		Иначе 
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
		СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
		
		Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
		Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
		Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
		
		СписокСчетовНалогов = Новый СписокЗначений;
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
		СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
		Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
		
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
		
		СписокКодовСтрок = Новый СписокЗначений;
		СписокКодовСтрок.Добавить("220.00.016.IIIB"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIC"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIID"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIE"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIF"); 					
		СписокКодовСтрок.Добавить("220.00.016.IIIG"); 					
		
		Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
		
		Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
		Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
		Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
		Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
		Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
		Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
		Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
		Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
		Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
		Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
		
		Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
			ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
			ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			НалоговыйОбороты.КорСубконто1,
			|			НалоговыйОбороты.СуммаОборот
			|		ИЗ
			|			РегистрБухгалтерии.Налоговый.Обороты(
			|					&НачПериода,
			|					&КонПериода,
			|					Запись,
			|					Счет В ИЕРАРХИИ (&СписокСчетов),
			|					&ВидСубконтоЗатрат,
			|					Организация В (&СписокОрганизаций)
			|						И ВидУчета <> &ВидУчетаВР,
			|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
			|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
			|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
			|				ИЗ
			|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
			|							&КонПериода,
			|							(Налогоплательщик = &ПустаяОрганизация
			|								ИЛИ Налогоплательщик = &ПустоеЗначение
			|								ИЛИ Налогоплательщик = &Организация)
			|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
			|				
			|				СГРУППИРОВАТЬ ПО
			|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
			|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
			|		ГДЕ
			|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
			| " + ТекстДобУсл + ") ";
		КонецЕсли;
		
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
		|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
		|	ВЫБОР
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
		|			ТОГДА 3
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
		|			ТОГДА 2
		|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
		|			ТОГДА 1
		|	КОНЕЦ КАК Приоритет
		|ПОМЕСТИТЬ ВТ_Приоритет
		|ИЗ
		|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|			&КонПериода,
		|			(Налогоплательщик = &ПустаяОрганизация
		|				ИЛИ Налогоплательщик = &ПустоеЗначение
		|				ИЛИ Налогоплательщик = &Организация)
		|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтатьяЗатрат,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонечныеИтоговыеДанные.Контрагент,
		|	КонечныеИтоговыеДанные.Сумма,
		|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
		|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
		|	КонечныеИтоговыеДанные.Код,
		|	КонечныеИтоговыеДанные.КБЕ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Контрагенты.Ссылка КАК Контрагент,
		|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
		|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3 КАК Код,
		|		Контрагенты.КБЕ Как КБЕ
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет = &Счет1330Н
		|						ИЛИ Счет = &Счет1310Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|					ИЗ
		|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|					
		|					СГРУППИРОВАТЬ ПО
		|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|				ГДЕ
		|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.КорСубконто1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		   ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|			ВЫБОР
		|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
		|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
		|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
		|			КОНЕЦ КАК Сумма
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&Счет20Н)
		|							И НЕ Счет = &Счет2400Н
		|							И НЕ Счет = &Счет2500Н,
		|					,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		| 	" + ТекстЗапросаПоМесяцам + "
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|   ВЫБРАТЬ
		|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
		|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Обороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Запись,
		|			Счет = &Счет2400Н
		|				ИЛИ Счет = &Счет2500Н,
		|			,
		|			Организация В (&СписокОрганизаций)
		|				И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
		|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
		|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
		|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
		|			ИЗ
		|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
		|		ГДЕ
		|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
		|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		НалоговыйОбороты.КорСубконто1,
		|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
		|	ИЗ
		|		РегистрБухгалтерии.Налоговый.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Запись,
		|				Счет = &Счет1620Н,
		|				,
		|				Организация В (&СписокОрганизаций)
		|					И ВидУчета <> &ВидУчетаВР,
		|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
		|				ТаблицаДохода.Приоритет КАК Приоритет,
		|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
		|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
		|				ИЗ
		|					ВТ_Приоритет КАК ТаблицаДохода
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
		|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
		|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
		|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
		|			ГДЕ
		|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
		|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
		|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
		| 	" + ТекстЗапросаПоМесяцам + "
		|
		|	СГРУППИРОВАТЬ ПО
		|		НалоговыйОбороты.КорСубконто1
		|
		|
		| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
		|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Контрагенты.Ссылка,
		|		Контрагенты.ИдентификационныйКодЛичности,
		|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
		|		КлассификаторСтранМира.КодАльфа3,
		|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
		|ГДЕ
		|	КонечныеИтоговыеДанные.Сумма <> 0
		|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма2202022Кв1_Форма220_01СтрокаПрочееРассчитатьДанныеФормы()
	
	Функция Форма2202022Кв1_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
		
		Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
		
	КонецФункции // Форма2202022Кв1_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат()
	
	Процедура Форма2202022Кв1_Форма220_02ЗаполнитьАвто(ПараметрыОтчета)
		
		Форма220_02ЗаполнитьАвто(ПараметрыОтчета);
		
	КонецПроцедуры // Форма2202022Кв1_Форма220_02ЗаполнитьАвто()
	
	Процедура Форма220_02ЗаполнитьАвто(ПараметрыОтчета)
		
		ТекИмяФормы = "Форма220_02";
		
		ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
		Налогоплательщик = ФормаСтруктура.Налогоплательщик;
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		ТаблицаДанныхФорма220_02 = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, ТекИмяФормы);
		
		ТаблицаОтчета = Форма220_02РассчитатьДанныеФормы(ФормаСтруктура, Истина);
		
		ДоходОтВыбытияФА = 0;
		Для Каждого Строка Из ТаблицаОтчета Цикл
			Попытка
				Если СокрЛП(Строка.НомерГруппы) = "I" Тогда
					Номер = 1;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "II" Тогда
					Номер = 2;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "III" Тогда
					Номер = 3;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "IV" Тогда
					Номер = 4;
				Иначе
					Номер = Число(Строка.НомерГруппы);
				КонецЕсли;
			Исключение
				
				ТекстСообщения = НСтр("ru = 'Не правильно указан кода для группы ФА в справочнике ""Группы налогового учета ФА
				|Код для группы может быть указан как римскими цифрами например ""I"",""II"",""III"",""IV"" либо арабскими ""1"",""2"",""3"",""4"".
				|Расчет приложения 220.04 не произведен'");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 	
				Возврат;		 
			КонецПопытки;
			
			НачальныйОстаток = Окр(Строка.НачальныйОстаток);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_001_" + Номер, НачальныйОстаток);			
			ЗначениеПоступления = Окр(Строка.Поступление);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_002_" + Номер, ЗначениеПоступления);			
			ЗначениеВыбытие = Окр(Строка.Выбытие);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_003_" + Номер, ЗначениеВыбытие);			
			УвеличениеСтоимостиЗаСчетРемонта = Окр(Строка.УвеличениеСтоимостиЗаСчетРемонта);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_004_" + Номер, УвеличениеСтоимостиЗаСчетРемонта);			
			ЗначениеАмортизация = Окр(Строка.АмортизацияНачисленная);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_006_" + Номер, ЗначениеАмортизация);			
			
			ЗначениеСписаниеБалансаВыбывших = Окр(Строка.СписаниеБалансаВыбывших);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_008_" + Номер, ЗначениеСписаниеБалансаВыбывших);
			ЗначениеСписаниеБалансаМененееМинимума = Окр(Строка.СписаниеБалансаМененееМинимума);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_009_" + Номер, ЗначениеСписаниеБалансаМененееМинимума);
			ЗначениеРасходыНаТекущийРемонт = Окр(Строка.РасходыНаТекущийРемонт);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_010_" + Номер, ЗначениеРасходыНаТекущийРемонт);
			
			КонечныйОстаток = Окр(?(Строка.КонечныйОстаток <> Null, Строка.КонечныйОстаток, 0));
			
			Если КонечныйОстаток < 0 Тогда 
				КонечныйОстаток  = - КонечныйОстаток;
				ДоходОтВыбытияФА = ДоходОтВыбытияФА + КонечныйОстаток;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаОтчета = Форма220_02ДвойнаяАмортизацияРассчитатьДанныеФормы(ФормаСтруктура, Истина);
		ЗначенияЯчеек = Новый Массив(4);
		
		Для Каждого Строка Из ТаблицаОтчета Цикл
			Попытка
				Если СокрЛП(Строка.НомерГруппы) = "I" Тогда
					Номер = 1;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "II" Тогда
					Номер = 2;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "III" Тогда
					Номер = 3;
				ИначеЕсли СокрЛП(Строка.НомерГруппы) = "IV" Тогда
					Номер = 4;
				Иначе
					Номер = Число(Строка.НомерГруппы);
					
					ТекстСообщения = НСтр("ru = 'Не правильно указан кода для группы ФА в справочнике ""Группы налогового учета ФА
					|Код для группы может быть указан как римскими цифрами например ""I"",""II"",""III"",""IV"" либо арабскими ""1"",""2"",""3"",""4"".
					|Расчет приложения 220.04 не произведен'");
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 				
					Возврат;		 
				КонецЕсли;
			Исключение 		
				ТекстСообщения = НСтр("ru = 'Не правильно указан кода для группы ФА в справочнике ""Группы налогового учета ФА
				|Код для группы может быть указан как римскими цифрами например ""I"",""II"",""III"",""IV"" либо арабскими ""1"",""2"",""3"",""4"".
				|Расчет приложения 220.04 не произведен'");
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 		
				Возврат;		 
			КонецПопытки;
			
			Если Строка.ВыводитьДанные Тогда 
				
				ПредЗначение = ЗначенияЯчеек.Получить(Номер - 1); 
				
				Если ПредЗначение = Неопределено Тогда 
					ПредЗначение = 0;
				КонецЕсли;
				
				ЗначениеАмортизацияНачисленная = 0;
				
				ЗначениеАмортизацияНачисленная = ПредЗначение + Строка.АмортизацияНачисленная;
				ЗначенияЯчеек.Установить(Номер - 1, ЗначениеАмортизацияНачисленная);
				
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, "s_220_02_007_" + Номер, ЗначениеАмортизацияНачисленная);			
				
			Иначе 
				ЗначениеАмортизацияНачисленная = 0;
			КонецЕсли;
		КонецЦикла;
		
		//РегламентированнаяОтчетность.ЗаполнитьФорму(ЭтаФорма, ТекИмяФормы, Ложь);
		
	КонецПроцедуры // Форма220_02ЗаполнитьАвто()
	
	Функция Форма220_02РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		СостоянияФА = Новый СписокЗначений();	
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);
		
		МассивСубконтоЗатратНаРемонт = Новый Массив;
		МассивСубконтоЗатратНаРемонт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ВнеоборотныеАктивы);
		МассивСубконтоЗатратНаРемонт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ВидыРемонтаВА);
		МассивСубконтоЗатратНаРемонт.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
		
		Запрос.УстановитьПараметр("ДатаНачала", 				СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("ДатаОкончания", 				СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		Запрос.УстановитьПараметр("ПустаяГруппаНУ",				Справочники.ГруппыНалоговогоУчетаФА.ПустаяСсылка());	
		Запрос.УстановитьПараметр("ПустаяОрганизация",			Справочники.Организации.ПустаяСсылка());	
		Запрос.УстановитьПараметр("СписокОрганизаций", 			ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		
		Запрос.УстановитьПараметр("УчетПоОбъектам",				Перечисления.ВидыНалоговогоУчетаВГруппахФА.ПоОбъектам);
		Запрос.УстановитьПараметр("СостоянияФА", 				СостоянияФА);
		Запрос.УстановитьПараметр("СчетУчетаВА",				ПланыСчетов.Налоговый.ВАВключенныеВСтоимостнойБаланс);		//Счет Н311
		Запрос.УстановитьПараметр("СчетРемонтаВА",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);	    //Счет Н860
		Запрос.УстановитьПараметр("ВидУчетаНУ",					Справочники.ВидыУчетаНУ.НУ);
		Запрос.УстановитьПараметр("ВидРемонтаВА_Капитальный",	Перечисления.ВидыРемонтаВА.Капитальный);
		Запрос.УстановитьПараметр("ВидРемонтаВА_Текущий",		Перечисления.ВидыРемонтаВА.Текущий);
		Запрос.УстановитьПараметр("СписокСубконтоСчетаРемонта",	МассивСубконтоЗатратНаРемонт);
		
		Запрос.УстановитьПараметр("УчитываетсяОтдельноОтСтоимостногоБаланса",	Перечисления.СобытияФАУчитываемыхОтдельно.ПринятиеКУчету);	
		Запрос.УстановитьПараметр("ДвижениеПоступления", 						Перечисления.ВидыДвиженияСтоимостиФА.Поступление);
		Запрос.УстановитьПараметр("ДвижениеВыбытия", 							Перечисления.ВидыДвиженияСтоимостиФА.Выбытие);
		Запрос.УстановитьПараметр("ДвижениеАмортизации", 						Перечисления.ВидыДвиженияСтоимостиФА.Амортизация);
		Запрос.УстановитьПараметр("ДвижениеСписаниеБалансаМенееМинимума", 		Перечисления.ВидыДвиженияСтоимостиФА.СписаниеСтоимостногоБалансаГруппыМенееМинимума);
		Запрос.УстановитьПараметр("ДвижениеСписаниеБалансаВыбывших", 			Перечисления.ВидыДвиженияСтоимостиФА.СписаниеПриВыбытииВсехАктивовГруппы);
		Запрос.УстановитьПараметр("ДвижениеУвеличениеСтоимостиЗаСчетРемонта", 	Перечисления.ВидыДвиженияСтоимостиФА.УвеличениеСтоимостиЗаСчетРемонта);
		Запрос.УстановитьПараметр("Счет7900Н", 									ПланыСчетов.Налоговый.РасходыНаРемонтВА); //Н860
		Запрос.УстановитьПараметр("Счет000",									ПланыСчетов.Налоговый.Вспомогательный);
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|				И СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 1
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 2
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|				И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|			ТОГДА 3
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|			ТОГДА 4
		|		ИНАЧЕ 5
		|	КОНЕЦ КАК Приоритет,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ КАК ГруппаНУ,
		|	ОбъектыНалоговогоУчетаФА.Организация КАК Организация,
		|	ОбъектыНалоговогоУчетаФА.ФиксированныйАктив КАК ФиксированныйАктив,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПредельнаяНормаАмортизации КАК ПредельнаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ВычетНаРемонт КАК ВычетНаРемонт,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ.Код
		|ПОМЕСТИТЬ ФиксированныеАктивыИСведения
		|ИЗ
		|	РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|			&ДатаОкончания,
		|			Организация В (&СписокОрганизаций)
		|				И СостояниеФиксированногоАктива В (&СостоянияФА)) КАК ОбъектыНалоговогоУчетаФА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОГруппахФиксированныхАктивов.СрезПоследних(
		|				&ДатаОкончания,
		|				Организация В (&СписокОрганизаций)
		|					ИЛИ Организация = &ПустаяОрганизация) КАК СведенияОГруппахФиксированныхАктивовСрезПоследних
		|		ПО (ОбъектыНалоговогоУчетаФА.Организация = СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация)
		|			И (ОбъектыНалоговогоУчетаФА.ГруппаНУ = СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА
		|					И СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив = НЕОПРЕДЕЛЕНО
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА.ВидУчетаВГруппеФА = &УчетПоОБъектам
		|					И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив)
		|ГДЕ
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ <> &ПустаяГруппаНУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГруппыФА.ГруппаНУ,
		|	ГруппыФА.НомерГруппы,
		|	ЕСТЬNULL(ГруппыФА.НачальныйОстаток, 0) КАК НачальныйОстаток,
		|	ЕСТЬNULL(ГруппыФА.Поступление, 0) КАК Поступление,
		|	ЕСТЬNULL(ГруппыФА.Выбытие, 0) КАК Выбытие,
		|	ЕСТЬNULL(ГруппыФА.КонечныйОстаток, 0) КАК КонечныйОстаток,
		|	ЕСТЬNULL(ГруппыФА.АмортизацияНачисленная, 0) КАК АмортизацияНачисленная,
		|	ЕСТЬNULL(ГруппыФА.АмортизацияРасчетная, 0) КАК АмортизацияРасчетная,
		|	ЕСТЬNULL(ГруппыФА.РасходыНаТекущийРемонт, 0) КАК РасходыНаТекущийРемонт,
		|	ЕСТЬNULL(ГруппыФА.РасходыНаКапитальныйРемонт, 0) КАК РасходыНаКапитальныйРемонт,
		|	ЕСТЬNULL(ГруппыФА.РасходыНаРемонтОтнНаВычеты, 0) КАК РасходыНаРемонтОтнНаВычеты,
		|	ЕСТЬNULL(ГруппыФА.УвеличениеСтоимостиЗаСчетРемонта, 0) КАК УвеличениеСтоимостиЗаСчетРемонта,
		|	ЕСТЬNULL(ГруппыФА.СписаниеБалансаМененееМинимума, 0) КАК СписаниеБалансаМененееМинимума,
		|	ЕСТЬNULL(ГруппыФА.СписаниеБалансаВыбывших, 0) КАК СписаниеБалансаВыбывших,
		|	ЕСТЬNULL(ГруппыФА.ИтоговаяСтоимость, 0) КАК ИтоговаяСтоимость,
		|	ЕСТЬNULL(ГруппыФА.ИтоговаяСтоимостьРасчетная, 0) КАК ИтоговаяСтоимостьРасчетная,
		|	ЕСТЬNULL(ПоследующиеПреференции.СуммаПсоледующихПреференций, 0) КАК СуммаПсоледующихПреференций
		|ИЗ
		|	(ВЫБРАТЬ
		|		ФАПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|		ФАПоГруппам.ГруппаНУКод КАК НомерГруппы,
		|		СУММА(СтоимостьВА.НачальныйОстаток) КАК НачальныйОстаток,
		|		СУММА(СтоимостьВА.Поступление) КАК Поступление,
		|		СУММА(СтоимостьВА.Выбытие) КАК Выбытие,
		|		СУММА(ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0)) КАК КонечныйОстаток,
		|		СУММА(СтоимостьВА.АмортизацияНачисленная) КАК АмортизацияНачисленная,
		|		СУММА((ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0)) * ЕСТЬNULL(ФАПоГруппам.ПрименяемаяНормаАмортизации, 0) / 100) КАК АмортизацияРасчетная,
		|		СУММА(РасходыНаРемонт.РасходыНаТекущийРемонт) КАК РасходыНаТекущийРемонт,
		|		СУММА(РасходыНаРемонт.РасходыНаКапитальныйРемонт) КАК РасходыНаКапитальныйРемонт,
		|		СУММА(РасходыНаРемонт.РасходыНаРемонтОтнНаВычеты) КАК РасходыНаРемонтОтнНаВычеты,
		|		СУММА(СтоимостьВА.УвеличениеСтоимостиЗаСчетРемонта) КАК УвеличениеСтоимостиЗаСчетРемонта,
		|		СУММА(СтоимостьВА.СписаниеБалансаМененееМинимума) КАК СписаниеБалансаМененееМинимума,
		|		СУММА(СтоимостьВА.СписаниеБалансаВыбывших) КАК СписаниеБалансаВыбывших,
		|		СУММА(СтоимостьВА.КонечныйОстаток) КАК ИтоговаяСтоимость,
		|		СУММА(ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0) - (ЕСТЬNULL(СтоимостьВА.НачальныйОстаток, 0) + ЕСТЬNULL(СтоимостьВА.Поступление, 0) - ЕСТЬNULL(СтоимостьВА.Выбытие, 0)) * ЕСТЬNULL(ФАПоГруппам.ПрименяемаяНормаАмортизации, 0) / 100 + ЕСТЬNULL(СтоимостьВА.УвеличениеСтоимостиЗаСчетРемонта, 0) - ЕСТЬNULL(СтоимостьВА.СписаниеБалансаМененееМинимума, 0) - ЕСТЬNULL(СтоимостьВА.СписаниеБалансаВыбывших, 0)) КАК ИтоговаяСтоимостьРасчетная
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ФАПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|			ФАПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|			ФАПоГруппам.Организация КАК Организация,
		|			ФАПоГруппам.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|			ФАПоГруппам.ГруппаНУКод КАК ГруппаНУКод
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|				ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|				ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|				ДанныеПоГруппамФА.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|				ФиксированныеАктивыПоГруппам.ГруппаНУКод КАК ГруппаНУКод
		|			ИЗ
		|				(ВЫБРАТЬ
		|					МИНИМУМ(ФиксированныеАктивыПоГруппам.Приоритет) КАК Приоритет,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|					ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|					ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУКод КАК ГруппаНУКод
		|				ИЗ
		|					ФиксированныеАктивыИСведения КАК ФиксированныеАктивыПоГруппам
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФиксированныеАктивыПоГруппам.Организация,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУ,
		|					ФиксированныеАктивыПоГруппам.ФиксированныйАктив,
		|					ФиксированныеАктивыПоГруппам.ГруппаНУКод) КАК ФиксированныеАктивыПоГруппам
		|					ЛЕВОЕ СОЕДИНЕНИЕ ФиксированныеАктивыИСведения КАК ДанныеПоГруппамФА
		|					ПО ФиксированныеАктивыПоГруппам.Приоритет = ДанныеПоГруппамФА.Приоритет
		|						И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ДанныеПоГруппамФА.ФиксированныйАктив
		|						И ФиксированныеАктивыПоГруппам.Организация = ДанныеПоГруппамФА.Организация
		|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив,
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Организация КАК Организация
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие = &УчитываетсяОтдельноОтСтоимостногоБаланса) КАК ФАУчитываемыеОтдельно
		|					ПО ФиксированныеАктивыПоГруппам.Организация = ФАУчитываемыеОтдельно.Организация
		|						И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ФАУчитываемыеОтдельно.ФиксированныйАктив
		|			ГДЕ
		|				ФАУчитываемыеОтдельно.ФиксированныйАктив ЕСТЬ NULL ) КАК ФАПоГруппам
		|		ГДЕ
		|			ФАПоГруппам.Организация В(&СписокОрганизаций)) КАК ФАПоГруппам
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				СтоимостьВА_НУ.Организация КАК Организация,
		|				СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.НачальныйОстаток, 0)) КАК НачальныйОстаток,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.КонечныйОстаток, 0)) КАК КонечныйОстаток,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Выбытие, 0)) КАК Выбытие,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.АмортизацияУчетная, 0)) КАК АмортизацияНачисленная,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.СписаниеБалансаМененееМинимума, 0)) КАК СписаниеБалансаМененееМинимума,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.СписаниеБалансаВыбывших, 0)) КАК СписаниеБалансаВыбывших,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.УвеличениеСтоимостиЗаСчетРемонта, 0)) КАК УвеличениеСтоимостиЗаСчетРемонта,
		|				СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Поступление, 0)) КАК Поступление
		|			ИЗ
		|				(ВЫБРАТЬ
		|					СтоимостьВА_НУ.Организация КАК Организация,
		|					СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|					МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаНачальныйОстатокДт, 0)) КАК НачальныйОстаток,
		|					МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаКонечныйОстатокДт, 0)) КАК КонечныйОстаток,
		|					0 КАК Выбытие,
		|					0 КАК АмортизацияУчетная,
		|					0 КАК СписаниеБалансаМененееМинимума,
		|					0 КАК СписаниеБалансаВыбывших,
		|					0 КАК УвеличениеСтоимостиЗаСчетРемонта,
		|					0 КАК Поступление
		|				ИЗ
		|					РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|							&ДатаНачала,
		|							&ДатаОкончания,
		|							,
		|							,
		|							Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|							,
		|							Организация В (&СписокОрганизаций)
		|								И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СтоимостьВА_НУ.Организация,
		|					СтоимостьВА_НУ.Субконто1
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					СтоимостьВА_НУ_Движения.Организация,
		|					СтоимостьВА_НУ_Движения.Субконто1,
		|					0,
		|					0,
		|					СтоимостьВА_НУ_Движения.Выбытие,
		|					СтоимостьВА_НУ_Движения.АмортизацияУчетная,
		|					СтоимостьВА_НУ_Движения.СписаниеБалансаМененееМинимума,
		|					СтоимостьВА_НУ_Движения.СписаниеБалансаВыбывших,
		|					СтоимостьВА_НУ_Движения.УвеличениеСтоимостиЗаСчетРемонта,
		|					СтоимостьВА_НУ_Движения.Поступление
		|				ИЗ
		|					(ВЫБРАТЬ
		|						СтоимостьВА_НУ.Организация КАК Организация,
		|						СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеПоступления
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотДт - СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК Поступление,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеВыбытия
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт - СтоимостьВА_НУ.СуммаОборотДт
		|							КОНЕЦ) КАК Выбытие,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеАмортизации
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК АмортизацияУчетная,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеСписаниеБалансаМенееМинимума
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК СписаниеБалансаМененееМинимума,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеСписаниеБалансаВыбывших
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|							КОНЕЦ) КАК СписаниеБалансаВыбывших,
		|						СУММА(ВЫБОР
		|								КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеУвеличениеСтоимостиЗаСчетРемонта
		|									ТОГДА СтоимостьВА_НУ.СуммаОборотДт
		|							КОНЕЦ) КАК УвеличениеСтоимостиЗаСчетРемонта
		|					ИЗ
		|						РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|								&ДатаНачала,
		|								&ДатаОкончания,
		|								,
		|								,
		|								Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|								,
		|								Организация В (&СписокОрганизаций)
		|									И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СтоимостьВА_НУ.Организация,
		|						СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА_НУ_Движения) КАК СтоимостьВА_НУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СтоимостьВА_НУ.Организация,
		|				СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА
		|			ПО ФАПоГруппам.Организация = СтоимостьВА.Организация
		|				И ФАПоГруппам.ФиксированныйАктив = СтоимостьВА.Субконто1
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ЗатратыНаРемонтВА_НУ.Субконто1 КАК Субконто1,
		|				ЗатратыНаРемонтВА_НУ.Организация КАК Организация,
		|				СУММА(ВЫБОР
		|						КОГДА ЗатратыНаРемонтВА_НУ.Субконто2 = &ВидРемонтаВА_Текущий
		|							ТОГДА ЗатратыНаРемонтВА_НУ.СуммаОборотДт
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК РасходыНаТекущийРемонт,
		|				СУММА(ВЫБОР
		|						КОГДА ЗатратыНаРемонтВА_НУ.Субконто2 = &ВидРемонтаВА_Капитальный
		|							ТОГДА ЗатратыНаРемонтВА_НУ.СуммаОборотДт
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК РасходыНаКапитальныйРемонт,
		|				СУММА(ВЫБОР
		|						КОГДА ЗатратыНаРемонтВА_НУ.Субконто2 = &ВидРемонтаВА_Капитальный
		|							ТОГДА ЗатратыНаРемонтВА_НУ.СуммаОборотДт - ЗатратыНаРемонтВА_НУ.СуммаОборотКт
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК РасходыНаРемонтОтнНаВычеты
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.Обороты(
		|						&ДатаНачала,
		|						&ДатаОкончания,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетРемонтаВА),
		|						&СписокСубконтоСчетаРемонта,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						,
		|						) КАК ЗатратыНаРемонтВА_НУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ЗатратыНаРемонтВА_НУ.Субконто1,
		|				ЗатратыНаРемонтВА_НУ.Организация) КАК РасходыНаРемонт
		|			ПО ФАПоГруппам.Организация = РасходыНаРемонт.Организация
		|				И ФАПоГруппам.ФиксированныйАктив = РасходыНаРемонт.Субконто1
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ФАПоГруппам.ГруппаНУ,
		|		ФАПоГруппам.ГруппаНУКод) КАК ГруппыФА
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(НалоговыйОбороты.СуммаОборот) КАК СуммаПсоледующихПреференций,
		|			НалоговыйОбороты.Организация КАК Организация,
		|			ФиксированныеАктивыИСведения.ГруппаНУ КАК ГруппаНУ
		|		ИЗ
		|			ФиксированныеАктивыИСведения КАК ФиксированныеАктивыИСведения
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Обороты(
		|						&ДатаНачала,
		|						&ДатаОкончания,
		|						,
		|						Счет = &Счет7900Н,
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ,
		|						(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
		|						) КАК НалоговыйОбороты
		|				ПО ФиксированныеАктивыИСведения.ФиксированныйАктив = НалоговыйОбороты.Субконто2
		|					И ФиксированныеАктивыИСведения.Организация = НалоговыйОбороты.Организация
		|		ГДЕ
		|			НалоговыйОбороты.Субконто3 = ЗНАЧЕНИЕ(Перечисление.ВидыРемонтаВА.Преференции)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйОбороты.Организация,
		|			ФиксированныеАктивыИСведения.ГруппаНУ) КАК ПоследующиеПреференции
		|		ПО ГруппыФА.ГруппаНУ = ПоследующиеПреференции.ГруппаНУ";
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
			ТекстСообщения = НСтр("ru = 'Данные для для Приложения 220.04 за отчетный период отсутствуют...'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);   		
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма220_02РассчитатьДанныеФормы()
	
	Функция Форма220_02ДвойнаяАмортизацияРассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
		
		СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
		
		Запрос =  Новый Запрос;
		
		СостоянияФА = Новый СписокЗначений();	
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
		СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);
		
		Запрос.УстановитьПараметр("ДатаНачала", 				СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("ДатаОкончания", 				СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		Запрос.УстановитьПараметр("ДатаОкончания1ГодНазад", 	ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета,-12));
		Запрос.УстановитьПараметр("ДатаОкончания2ГодаНазад", 	ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета,-24));
		Запрос.УстановитьПараметр("ПустаяГруппаНУ",				Справочники.ГруппыНалоговогоУчетаФА.ПустаяСсылка());	
		Запрос.УстановитьПараметр("ПустаяОрганизация",			Справочники.Организации.ПустаяСсылка());	
		Запрос.УстановитьПараметр("СписокОрганизаций", 			ФормаСтруктура.мСписокСтруктурныхЕдиниц);
		
		Запрос.УстановитьПараметр("УчетПоОбъектам",				Перечисления.ВидыНалоговогоУчетаВГруппахФА.ПоОбъектам);
		Запрос.УстановитьПараметр("СостоянияФА", 				СостоянияФА);
		Запрос.УстановитьПараметр("СчетУчетаВА",				ПланыСчетов.Налоговый.ВнеоборотныеАктивы);		//Счет Н300
		Запрос.УстановитьПараметр("ВключенВСоставГруппы",		Перечисления.СобытияФАУчитываемыхОтдельно.ВключениеВСоставГруппы);	    
		Запрос.УстановитьПараметр("Выбыл",						Перечисления.ВидыСостоянийФА.Выбыл);
		Запрос.УстановитьПараметр("ПринятКУчету",				Перечисления.ВидыСостоянийФА.ПринятКУчету);
		Запрос.УстановитьПараметр("ВидУчетаНУ",					Справочники.ВидыУчетаНУ.НУ);
		
		Запрос.УстановитьПараметр("ДвижениеПоступления", 		Перечисления.ВидыДвиженияСтоимостиФА.Поступление);
		Запрос.УстановитьПараметр("ДвижениеВыбытия", 			Перечисления.ВидыДвиженияСтоимостиФА.Выбытие);
		Запрос.УстановитьПараметр("ДвижениеАмортизации", 		Перечисления.ВидыДвиженияСтоимостиФА.Амортизация);
		
		ТекстЗапроса="ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|				И СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 1
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = ОбъектыНалоговогоУчетаФА.Организация
		|			ТОГДА 2
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|				И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив
		|			ТОГДА 3
		|		КОГДА СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация
		|			ТОГДА 4
		|		ИНАЧЕ 5
		|	КОНЕЦ КАК Приоритет,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ КАК ГруппаНУ,
		|	ОбъектыНалоговогоУчетаФА.Организация КАК Организация,
		|	ОбъектыНалоговогоУчетаФА.ФиксированныйАктив КАК ФиксированныйАктив,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПредельнаяНормаАмортизации КАК ПредельнаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|	СведенияОГруппахФиксированныхАктивовСрезПоследних.ВычетНаРемонт КАК ВычетНаРемонт
		|ПОМЕСТИТЬ ФиксированныеАктивыИСведения
		|ИЗ
		|	РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|			&ДатаОкончания,
		|			СостояниеФиксированногоАктива В (&СостоянияФА)
		|				И Организация В (&СписокОрганизаций)) КАК ОбъектыНалоговогоУчетаФА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОГруппахФиксированныхАктивов.СрезПоследних(
		|				&ДатаОкончания,
		|				Организация В (&СписокОрганизаций)
		|					ИЛИ Организация = &ПустаяОрганизация) КАК СведенияОГруппахФиксированныхАктивовСрезПоследних
		|		ПО (ОбъектыНалоговогоУчетаФА.Организация = СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.Организация = &ПустаяОрганизация)
		|			И (ОбъектыНалоговогоУчетаФА.ГруппаНУ = СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА
		|					И СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив = НЕОПРЕДЕЛЕНО
		|				ИЛИ СведенияОГруппахФиксированныхАктивовСрезПоследних.ГруппаФА.ВидУчетаВГруппеФА = &УчетПоОБъектам
		|					И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = СведенияОГруппахФиксированныхАктивовСрезПоследних.ФиксированныйАктив)
		|ГДЕ
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ <> &ПустаяГруппаНУ
		|	И ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиФА.ПреференцияЕдиновременноеОтнесениеНаВычеты)
		|	И ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиФА.ПреференцияОтнесениеНаВычетыРавнымиДолями)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФАПоГруппам.ГруппаНУ.Код КАК НомерГруппы,
		|	ЕСТЬNULL(СтоимостьВА.АмортизацияНачисленная, 0) КАК АмортизацияНачисленная,
		|	ЕСТЬNULL(СтоимостьВА.Поступление, 0) * ЕСТЬNULL(ФАПоГруппам.ПрименяемаяНормаАмортизации, 0) * 2 / 100 КАК АмортизацияРасчетная,
		|	ВЫБОР
		|		КОГДА ФАПоГруппам.Событие = &ВключенВСоставГруппы
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВыводитьДанные
		|ИЗ
		|	(ВЫБРАТЬ
		|		ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив,
		|		ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|		ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|		ДанныеПоГруппамФА.ПредельнаяНормаАмортизации КАК ПредельнаяНормаАмортизации,
		|		ДанныеПоГруппамФА.ПрименяемаяНормаАмортизации КАК ПрименяемаяНормаАмортизации,
		|		ФАУчитываемыеОтдельно.Событие КАК Событие,
		|		Принятие.Период КАК ДатаВвода,
		|		Выбытие.Период КАК ДатаВыбытия
		|	ИЗ
		|		(ВЫБРАТЬ
		|			МИНИМУМ(ФиксированныеАктивыПоГруппам.Приоритет) КАК Приоритет,
		|			ФиксированныеАктивыПоГруппам.ГруппаНУ КАК ГруппаНУ,
		|			ФиксированныеАктивыПоГруппам.Организация КАК Организация,
		|			ФиксированныеАктивыПоГруппам.ФиксированныйАктив КАК ФиксированныйАктив
		|		ИЗ
		|			ФиксированныеАктивыИСведения КАК ФиксированныеАктивыПоГруппам
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ФиксированныеАктивыПоГруппам.Организация,
		|			ФиксированныеАктивыПоГруппам.ГруппаНУ,
		|			ФиксированныеАктивыПоГруппам.ФиксированныйАктив) КАК ФиксированныеАктивыПоГруппам
		|			ЛЕВОЕ СОЕДИНЕНИЕ ФиксированныеАктивыИСведения КАК ДанныеПоГруппамФА
		|			ПО ФиксированныеАктивыПоГруппам.Приоритет = ДанныеПоГруппамФА.Приоритет
		|				И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ДанныеПоГруппамФА.ФиксированныйАктив
		|				И ФиксированныеАктивыПоГруппам.Организация = ДанныеПоГруппамФА.Организация
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ФАУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив,
		|				ФАУчитываемыеОтдельноСрезПоследних.Организация КАК Организация,
		|				ФАУчитываемыеОтдельноСрезПоследних.Событие КАК Событие
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ФАИтог.ФиксированныйАктив КАК ФиксированныйАктив
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания2ГодаНазад, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие <> &ВключенВСоставГруппы
		|					
		|					ОБЪЕДИНИТЬ ВСЕ
		|					
		|					ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания1ГодНазад, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие <> &ВключенВСоставГруппы
		|					
		|					ОБЪЕДИНИТЬ ВСЕ
		|					
		|					ВЫБРАТЬ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив
		|					ИЗ
		|						РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания, Организация В (&СписокОрганизаций)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		|					ГДЕ
		|						ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие <> &ВключенВСоставГруппы) КАК ФАИтог
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ФАИтог.ФиксированныйАктив) КАК ФАОбщие
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(&ДатаОкончания, Организация В (&СписокОрганизаций)) КАК ФАУчитываемыеОтдельноСрезПоследних
		|					ПО (ФАУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив = ФАОбщие.ФиксированныйАктив)) КАК ФАУчитываемыеОтдельно
		|			ПО ФиксированныеАктивыПоГруппам.Организация = ФАУчитываемыеОтдельно.Организация
		|				И ФиксированныеАктивыПоГруппам.ФиксированныйАктив = ФАУчитываемыеОтдельно.ФиксированныйАктив
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|					&ДатаОкончания,
		|					Организация В (&СписокОрганизаций)
		|						И СостояниеФиксированногоАктива = &ПринятКУчету) КАК Принятие
		|			ПО ФиксированныеАктивыПоГруппам.ФиксированныйАктив = Принятие.ФиксированныйАктив
		|				И ФиксированныеАктивыПоГруппам.Организация = Принятие.Организация
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		|					&ДатаОкончания,
		|					Организация В (&СписокОрганизаций)
		|						И СостояниеФиксированногоАктива = &Выбыл) КАК Выбытие
		|			ПО ФиксированныеАктивыПоГруппам.ФиксированныйАктив = Выбытие.ФиксированныйАктив
		|				И ФиксированныеАктивыПоГруппам.Организация = Выбытие.Организация
		|	ГДЕ
		|		(НЕ ФАУчитываемыеОтдельно.ФиксированныйАктив ЕСТЬ NULL )) КАК ФАПоГруппам
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтоимостьВА_НУ.Организация КАК Организация,
		|			СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.НачальныйОстаток, 0)) КАК НачальныйОстаток,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.КонечныйОстаток, 0)) КАК КонечныйОстаток,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Выбытие, 0)) КАК Выбытие,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.АмортизацияУчетная, 0)) КАК АмортизацияНачисленная,
		|			СУММА(ЕСТЬNULL(СтоимостьВА_НУ.Поступление, 0)) КАК Поступление
		|		ИЗ
		|			(ВЫБРАТЬ
		|				СтоимостьВА_НУ.Организация КАК Организация,
		|				СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|				МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаНачальныйОстатокДт, 0)) КАК НачальныйОстаток,
		|				МАКСИМУМ(ЕСТЬNULL(СтоимостьВА_НУ.СуммаКонечныйОстатокДт, 0)) КАК КонечныйОстаток,
		|				0 КАК Выбытие,
		|				0 КАК АмортизацияУчетная,
		|				0 КАК Поступление
		|			ИЗ
		|				РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|						&ДатаНачала,
		|						&ДатаОкончания,
		|						,
		|						,
		|						Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|						,
		|						Организация В (&СписокОрганизаций)
		|							И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СтоимостьВА_НУ.Организация,
		|				СтоимостьВА_НУ.Субконто1
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				СтоимостьВА_НУ_Движения.Организация,
		|				СтоимостьВА_НУ_Движения.Субконто1,
		|				0,
		|				0,
		|				СтоимостьВА_НУ_Движения.Выбытие,
		|				СтоимостьВА_НУ_Движения.АмортизацияУчетная,
		|				СтоимостьВА_НУ_Движения.Поступление
		|			ИЗ
		|				(ВЫБРАТЬ
		|					СтоимостьВА_НУ.Организация КАК Организация,
		|					СтоимостьВА_НУ.Субконто1 КАК Субконто1,
		|					СУММА(ВЫБОР
		|							КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеПоступления
		|								ТОГДА СтоимостьВА_НУ.СуммаОборотДт - СтоимостьВА_НУ.СуммаОборотКт
		|						КОНЕЦ) КАК Поступление,
		|					СУММА(ВЫБОР
		|							КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеВыбытия
		|								ТОГДА СтоимостьВА_НУ.СуммаОборотКт - СтоимостьВА_НУ.СуммаОборотДт
		|						КОНЕЦ) КАК Выбытие,
		|					СУММА(ВЫБОР
		|							КОГДА СтоимостьВА_НУ.Субконто2 = &ДвижениеАмортизации
		|								ТОГДА СтоимостьВА_НУ.СуммаОборотКт
		|						КОНЕЦ) КАК АмортизацияУчетная
		|				ИЗ
		|					РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(
		|							&ДатаНачала,
		|							&ДатаОкончания,
		|							,
		|							,
		|							Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|							,
		|							Организация В (&СписокОрганизаций)
		|								И ВидУчета = &ВидУчетаНУ) КАК СтоимостьВА_НУ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СтоимостьВА_НУ.Организация,
		|					СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА_НУ_Движения) КАК СтоимостьВА_НУ
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СтоимостьВА_НУ.Организация,
		|			СтоимостьВА_НУ.Субконто1) КАК СтоимостьВА
		|		ПО ФАПоГруппам.Организация = СтоимостьВА.Организация
		|			И ФАПоГруппам.ФиксированныйАктив = СтоимостьВА.Субконто1";
		
		
		Запрос.Текст = ТекстЗапроса;
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() И ВыдаватьСообщения Тогда
		КонецЕсли;	
		
		ТаблицаРезультата = Результат.Выгрузить();
		
		Возврат ТаблицаРезультата;		 
		
	КонецФункции // Форма220_02ДвойнаяАмортизацияРассчитатьДанныеФормы()
	
	Функция Форма2202022Кв1_ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, НачПериода, КонПериода)
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачПериода", 			НачПериода);
		Запрос.УстановитьПараметр("КонПериода", 			КонПериода);
		Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
		
		ВидыВычетов = Новый Массив;
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"));
		ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"));
		
		Запрос.УстановитьПараметр("ВидыВычетов", ВидыВычетов);
		
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	Организации.ИндивидуальныйПредприниматель КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ФизЛицо
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &Организация
		|	И Организации.ИндивидуальныйПредприниматель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВычетыФизическихЛицИПН.Период < &НачПериода
		|			ТОГДА НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВычетыФизическихЛицИПН.Период, МЕСЯЦ)
		|	КОНЕЦ КАК Период,
		|	ВычетыФизическихЛицИПН.ВидВычета КАК ВидВычета,
		|	ВЫБОР
		|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо > &КонПериода
		|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ВычетыФизическихЛицИПН.ДействуетПо, МЕСЯЦ)
		|	КОНЕЦ КАК ДействуетПо,
		|	ВычетыФизическихЛицИПН.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ВычетыИПН
		|ИЗ
		|	РегистрСведений.ВычетыФизическихЛицИПН КАК ВычетыФизическихЛицИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛицо КАК ВТ_ФизЛицо
		|		ПО ВычетыФизическихЛицИПН.ФизическоеЛицо = ВТ_ФизЛицо.Ссылка
		|ГДЕ
		|	ВычетыФизическихЛицИПН.Активность
		|	И ВычетыФизическихЛицИПН.ПредоставлятьВычет
		|	И ВычетыФизическихЛицИПН.ВидВычета В(&ВидыВычетов)
		|	И ВычетыФизическихЛицИПН.Период < &КонПериода
		|	И (ВычетыФизическихЛицИПН.ДействуетПо > &НачПериода
		|			ИЛИ ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 0) КАК Месяц
		|ПОМЕСТИТЬ ВТ_МесяцыГода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 2)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 3)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 4)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 5)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 6)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 7)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 8)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 9)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 10)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 11)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 12)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|			ТОГДА 75
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоМЗП,
		|	ВТ_ВычетыИПН.ВидВычета КАК ВидВычета
		|ПОМЕСТИТЬ ВТ_Вычеты
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|ГДЕ
		|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
		|			ТОГДА 75
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВТ_ВычетыИПН.ВидВычета
		|ИЗ
		|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|ГДЕ
		|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПРодители)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_МесяцыГода.Месяц),
		|	МАКСИМУМ(ВТ_ВычетыИПН.ВидВычета)
		|ИЗ
		|	ВТ_МесяцыГода КАК ВТ_МесяцыГода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
		|		ПО ВТ_МесяцыГода.Месяц >= ВТ_ВычетыИПН.Период
		|			И ВТ_МесяцыГода.Месяц <= ВТ_ВычетыИПН.ДействуетПо
		|			И (ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_Вычеты.КоличествоМЗП) КАК КоличествоМЗП,
		|	ВТ_Вычеты.ВидВычета КАК ВидВычета
		|ИЗ
		|	ВТ_Вычеты КАК ВТ_Вычеты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Вычеты.ВидВычета"
		;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Соответствие = Новый Соответствие();
		Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"), "1");
		Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"), "2");
		Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"), "3");
		
		СоответствиеВозврат = Новый Соответствие();
		
		Пока Выборка.Следующий() Цикл
			СоответствиеВозврат.Вставить(?(Соответствие.Получить(Выборка.ВидВычета)<>Неопределено,Соответствие.Получить(Выборка.ВидВычета),"1"), Выборка.КоличествоМЗП);
		КонецЦикла;
		Возврат СоответствиеВозврат;
		
	КонецФункции
	
	#КонецОбласти

///////////////////////////////////////
// Форма 220.00 за 2023 год (Квартал 1)
#Область Форма2202023Кв1

Процедура Форма2202023Кв1_Форма220ЗаполнитьАвто(ПараметрыОтчета)
	
	ТекИмяФормы = "Форма220";
	
	ФормаСтруктура = ПараметрыОтчета.ФормаСтруктура;
	КодФормы = ФормаСтруктура.КодФормы;
	Налогоплательщик = ФормаСтруктура.Налогоплательщик;
	СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
	
	Если ПараметрыОтчета.Перезаполнить Тогда	
		ТекстСообщения = НСтр("ru = 'Расчет основной формы 220.00'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;	
	
	
	Форма2202023Кв1_Форма220_01ЗаполнитьАвто(ПараметрыОтчета);
	Форма220_02ЗаполнитьАвто(ПараметрыОтчета);  
	
	//////////////////////////////////////////
	// Раздел. Расчетные показатели        	
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
	
	ВыборкаПоОстаткамТМЗ = Форма220РассчитатьОстаткиТМЗ(ФормаСтруктура,, "Форма2202023Кв1").Выбрать();
	Пока ВыборкаПоОстаткамТМЗ.Следующий() Цикл		
		Если ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.016.I" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_1", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));		
		ИначеЕсли ВыборкаПоОстаткамТМЗ.КодСтроки = "220.00.016.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_2", Окр(?(ВыборкаПоОстаткамТМЗ.Сумма <> NULL, ВыборкаПоОстаткамТМЗ.Сумма, 0)));
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаРезультата = Форма2202023Кв1_Форма220РассчитатьДанныеФормы(ФормаСтруктура);
	
	ВыборкаОтчета = ВыборкаРезультата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	//++
	ТаблицаДанныхПодстрок = Новый ТаблицаЗначений;
	ТаблицаДанныхПодстрок.Колонки.Добавить("ИмяОбласти");
	ТаблицаДанныхПодстрок.Колонки.Добавить("КодСтроки");
	ТаблицаДанныхПодстрок.Колонки.Добавить("КодОсновнойСтроки");
	ТаблицаДанныхПодстрок.Колонки.Добавить("Значение");
	ТаблицаДанныхПодстрок.Колонки.Добавить("Приоритет");
	//--
	
	Пока ВыборкаОтчета.Следующий() Цикл
		ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(ВыборкаОтчета.КодСтроки);
		
		ВыборкаДохРас = ВыборкаОтчета.Выбрать();
		
		Пока ВыборкаДохРас.Следующий() Цикл
			ВыдаватьСообщение = ?(ВыборкаДохРас.ВыдСообщение = Null, "", ВыборкаДохРас.ВыдСообщение);
			Если ВыдаватьСообщение = "СтатьяЗатратДох" Тогда
				// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
				// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
				// Такие данные в форму не помещаем.
				
				ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по статье затрат %1 не отражены в форме, поскольку для нее
				| определен код строки <%2>, который относится к совокупному доходу <%3> '"),
				ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 									
				
			ИначеЕсли ВыдаватьСообщение = "ДоходРасх" Тогда	 
				// Выдаем сообщение пол-лю, если получили данные со счета Н800 "Расходы" с аналитикой
				// "СтатьиЗатрат", для которых указан код строки декларации, относящийся к доходам.
				// Такие данные в форму не помещаем.
				
				ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по  доходу %1 не отражены в форме, поскольку для него
				| определен код строки <%2>, который относится к вычетам <%3> '"),
				ВыборкаДохРас.ДоходРасход.Наименование, ВыборкаДохРас.КодСтроки, ВыборкаДохРас.КодСтроки);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 						
				
			КонецЕсли;								 
		КонецЦикла;
		
		Если ОбластьНачало = "s_220_00_001" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.I" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.III" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_3", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.001.IV" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_001_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		
		ИначеЕсли ОбластьНачало = "s_220_00_002" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_002", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_003" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_003", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_004" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_004", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		//ИначеЕсли ОбластьНачало = "s_220_00_005" Тогда
		//	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.005.I" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.005.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_005_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_006" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_006", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_007" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_007", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_008" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_008", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_009" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_009", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_010" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_010", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.010.") <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
			СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
			Если СтрокаТаблицы.КодСтроки = "226-1-16" 
				ИЛИ СтрокаТаблицы.КодСтроки = "226-1-23"
				ИЛИ СтрокаТаблицы.КодСтроки = "226-1-25" Тогда
				СтрокаТаблицы.Приоритет = 1;
			Иначе
				СтрокаТаблицы.Приоритет = 0;
			КонецЕсли;
		ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_012", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.012.") <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.012";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_012__";
			СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
			Если СтрокаТаблицы.КодСтроки = "241-1-1" 
				ИЛИ СтрокаТаблицы.КодСтроки = "241-1-13" Тогда
				СтрокаТаблицы.Приоритет = 1;
			Иначе
				СтрокаТаблицы.Приоритет = 0;
			КонецЕсли;
		ИначеЕсли ОбластьНачало = "s_220_00_013" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_013", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_014", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.014.") <> 0 Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Приоритет = 0;
			СтрокаТаблицы.Значение = ?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0);
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.014";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_014__";
			СтрокаТаблицы.КодСтроки = Прав(ВыборкаОтчета.КодСтроки, СтрДлина(ВыборкаОтчета.КодСтроки) - 11);
			
		ИначеЕсли ОбластьНачало = "s_220_00_015" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_015", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIA" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIB" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIC" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_c", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIID" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_d", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIE" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_e", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIF" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_f", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIG" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_g", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IIIH" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_3_h", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IV" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_4", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.V" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_5", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VI" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_6", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VII" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_7", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.VIII" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_8", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.016.IX" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_016_9", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_017" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_017", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_018" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_018", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_019" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_019", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_020" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_020", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_021" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_021", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_022" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_022", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_023"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_023", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_024"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_024", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_025"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_025", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_026"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_026", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_027"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_027", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_028"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_028", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_029"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_029", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_030"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_030", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_031"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_031", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_032"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.032.I" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.032.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ОбластьНачало = "s_220_00_033"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_033", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.034.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_034_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.035.I" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.035.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_035_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_036"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_036", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_037"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_037", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_039"  Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_039", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_040" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.040.I" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040_1", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
		ИначеЕсли ВыборкаОтчета.КодСтроки = "220.00.040.II" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_040_2", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_044" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_044", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.045.A") <> 0 Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.045.B") <> 0 Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_045_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_046" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.046.A") <> 0 Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046_a", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли СтрНайти(ВыборкаОтчета.КодСтроки, "220.00.046.B") <> 0 Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_046_b", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		ИначеЕсли ОбластьНачало = "s_220_00_048" Тогда
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_048", Окр(?(ВыборкаОтчета.Сумма <> NULL, ВыборкаОтчета.Сумма, 0)));
			
		Иначе
			ВыборкаДохРас.Сбросить();
			Пока ВыборкаДохРас.Следующий() Цикл
				ДР = ВыборкаДохРас.ДоходРасход;
				Если ТипЗнч(ДР) = Тип("СправочникСсылка.Доходы") Тогда
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Доходы""
					|  <%2>, не отражены в форме.'"),
					ВыборкаДохРас.КодСтроки, ДР.Наименование);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 	
					
				ИначеЕсли ТипЗнч(ДР) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
					
					ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Данные по по коду строки  %1 соответствующему элементу справочника ""Статьи затрат""
					|  <%2>, не отражены в форме.'"),
					ВыборкаДохРас.КодСтроки, ДР.Наименование);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ВыборкаДохРас.ДоходРасход); 
					
				КонецЕсли;								 
			КонецЦикла;			
		КонецЕсли;			
	КонецЦикла;
	
	Если ТаблицаДанныхПодстрок.Найти("220.00.012","КодОсновнойСтроки") <> Неопределено Тогда
		Если ТаблицаДанныхПодстрок.Найти("226-1-25","КодСтроки") = Неопределено Тогда
			СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
			СтрокаТаблицы.Значение = 0;
			СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
			СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
			СтрокаТаблицы.КодСтроки = "226-1-25";
			СтрокаТаблицы.Приоритет = 1;
		КонецЕсли;
		Если ТаблицаДанныхПодстрок.Найти("241-1-1","КодСтроки") <> Неопределено Тогда
			Если ТаблицаДанныхПодстрок.Найти("226-1-16","КодСтроки") = Неопределено Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = 0;
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
				СтрокаТаблицы.КодСтроки = "226-1-16";
				СтрокаТаблицы.Приоритет = 1;
			КонецЕсли;
		КонецЕсли;
		Если ТаблицаДанныхПодстрок.Найти("241-1-13","КодСтроки") <> Неопределено Тогда
			Если ТаблицаДанныхПодстрок.Найти("226-1-23","КодСтроки") = Неопределено Тогда
				СтрокаТаблицы = ТаблицаДанныхПодстрок.Добавить();
				СтрокаТаблицы.Значение = 0;
				СтрокаТаблицы.КодОсновнойСтроки = "220.00.010";
				СтрокаТаблицы.ИмяОбласти = "s_220_00_010__";
				СтрокаТаблицы.КодСтроки = "226-1-23";
				СтрокаТаблицы.Приоритет = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	ВидНалога 	 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
	СтавкаИПН	 = ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_050", Окр(?(СтавкаИПН <> NULL, СтавкаИПН, 0)));
	
	// ВычетыИПКоличествоМЗП - соответствие:
	// "1" - "Справочник.ВычетыИПН.Стандартный1МЗП";
	// "2" - "Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды";
	// "3" - "Справочник.ВычетыИПН.Стандартный75МЗПРодители".
	ВычетыИПКоличествоМЗП = Форма2202023Кв1_ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	СтандартныеВычетыИПН = Новый Массив;
	СтандартныеВычетыИПН.Добавить(Справочники.ВычетыИПН.Стандартный1МЗП);
	СтандартныеВычетыИПН.Добавить(Справочники.ВычетыИПН.Стандартный75МЗПИнвалиды);
	СтандартныеВычетыИПН.Добавить(Справочники.ВычетыИПН.Стандартный75МЗПРодители);
	Запрос.УстановитьПараметр("СтандартныеВычетыИПН", СтандартныеВычетыИПН);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РегламентированныеРасчетныеПоказатели.РазмерМЗП КАК РазмерМЗП,
	|	РегламентированныеРасчетныеПоказатели.РазмерМРП КАК РазмерМРП
	|ИЗ
	|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаАктуальности, ) КАК РегламентированныеРасчетныеПоказатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН КАК ВидВычетаИПН,
	|	РазмерыВычетовИПНСрезПоследних.ВидПределаВычета КАК ВидПределаВычета,
	|	РазмерыВычетовИПНСрезПоследних.Размер КАК Размер,
	|	ВЫБОР
	|		КОГДА РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП)
	|			ТОГДА ""1""
	|		КОГДА РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
	|			ТОГДА ""2""
	|		КОГДА РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПРодители)
	|			ТОГДА ""3""
	|		ИНАЧЕ ""0""
	|	КОНЕЦ КАК ВычетИП,
	|	0 КАК Показатель
	|ИЗ
	|	РегистрСведений.РазмерыВычетовИПН.СрезПоследних(&ДатаАктуальности, ) КАК РазмерыВычетовИПНСрезПоследних
	|ГДЕ
	|	РазмерыВычетовИПНСрезПоследних.ВидВычетаИПН В (&СтандартныеВычетыИПН)";
	
	РезультатПоказателиВычеты = Запрос.ВыполнитьПакет();
	
	РазмерМЗП = 0;
	РазмерМРП = 0;
	ВыборкаРеглПоказатели = РезультатПоказателиВычеты[0].Выбрать();
	Если ВыборкаРеглПоказатели.Следующий() Тогда
		РазмерМЗП = ВыборкаРеглПоказатели.РазмерМЗП;
		РазмерМРП = ВыборкаРеглПоказатели.РазмерМРП;
	Иначе
		ТекстСообщения = НСтр("ru = 'На начало отчетного периода в регистре сведений ""Регламентированные расчетные показатели""
		|  не установлены значения показателей МРП и МЗП.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
	КонецЕсли;
	
	ТаблицаРазмерыВычетовИП = РезультатПоказателиВычеты[1].Выгрузить();
	Для Каждого СтандартныйВычет Из СтандартныеВычетыИПН Цикл
		СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти(СтандартныйВычет, "ВидВычетаИПН");
		Если СтрокаВычета = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'На начало отчетного периода в регистре сведений ""Размеры вычетов ИПН""
			|  не установлены значения для вычета <%1>.'"),
			СтандартныйВычет);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
			Продолжить;
		Иначе
			Если СтрокаВычета.ВидПределаВычета = Перечисления.ВидыПределовВычетовИКорректировокДоходов.МЗП Тогда
				СтрокаВычета.Показатель = РазмерМЗП;
			ИначеЕсли СтрокаВычета.ВидПределаВычета = Перечисления.ВидыПределовВычетовИКорректировокДоходов.МРП Тогда
				СтрокаВычета.Показатель = РазмерМРП;
			Иначе
				СтрокаВычета.Показатель = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Стандартный1МЗП
	СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти("1", "ВычетИП");
	Если СтрокаВычета = Неопределено Тогда
		РазмерПоказателя = 0;
	Иначе
		РазмерПоказателя = СтрокаВычета.Размер * СтрокаВычета.Показатель;
	КонецЕсли;
	ВычетыИП1 = ?(ВычетыИПКоличествоМЗП.Получить("1")<>Неопределено, ВычетыИПКоличествоМЗП.Получить("1"), 0) * РазмерПоказателя;
	
	// Стандартный75МЗПИнвалиды
	СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти("2", "ВычетИП");
	Если СтрокаВычета = Неопределено Тогда
		РазмерПоказателя = 0;
	Иначе
		РазмерПоказателя = СтрокаВычета.Размер * СтрокаВычета.Показатель;
	КонецЕсли;
	ВычетыИП2 = ?(ВычетыИПКоличествоМЗП.Получить("2")<>Неопределено, 1, 0) * РазмерПоказателя;
	
	// Стандартный75МЗПРодители
	СтрокаВычета = ТаблицаРазмерыВычетовИП.Найти("3", "ВычетИП");
	Если СтрокаВычета = Неопределено Тогда
		РазмерПоказателя = 0;
	Иначе
		РазмерПоказателя = СтрокаВычета.Размер * СтрокаВычета.Показатель;
	КонецЕсли;
	ВычетыИП3 = ?(ВычетыИПКоличествоМЗП.Получить("3")<>Неопределено, 1, 0) * РазмерПоказателя;
	
	// Итоговые стандартные вычеты
	ВычетыИПИтого = ВычетыИП1 + ВычетыИП2 + ВычетыИП3; 
	
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_3", Окр(ВычетыИПИтого, 0));
   	
	ПрочиеВычетыИП = ПолучитьПрочиеВычетыИндивидуальногоПредпринимателя(Налогоплательщик, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	ВычетНаОплатуМедицинскихУслуг                = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг")),0) ;
	ВычетДобровольныеПенсионныеВзносы            = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ДобровольныеПенсионныеВзносы")),0) ;
	ВычетПогашениеВознагражденияПоЖилищнымЗаймам = ?(ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")) <> Неопределено, ПрочиеВычетыИП.Получить(ПредопределенноеЗначение("Справочник.ВычетыИПН.ПогашениеВознагражденияПоЖилищнымЗаймам")),0) ;
	
	ПрочиеВычетыИтого = ВычетНаОплатуМедицинскихУслуг + ВычетДобровольныеПенсионныеВзносы + ВычетПогашениеВознагражденияПоЖилищнымЗаймам;
			
	РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, "s_220_00_032_4", Окр(ПрочиеВычетыИтого, 0));
    	
	ТаблицаДанныхПодстрок.Свернуть("КодОсновнойСтроки, КодСтроки, ИмяОбласти, Приоритет", "Значение");
	ТаблицаДанныхПодстрок.Сортировать("КодОсновнойСтроки Возр, Приоритет Убыв, Значение Убыв");
	Счетчик010 = 1;
	Счетчик012 = 1;
	Счетчик014 = 1;
	Счетчик = 1;
	Для Каждого СтрокаТаблицы из ТаблицаДанныхПодстрок Цикл
		ОбластьНачало = РегламентированнаяОтчетностьКлиентСервер.ПреобразоватьКодДекларации(СтрокаТаблицы.КодОсновнойСтроки);
		Если ОбластьНачало = "s_220_00_010" Тогда
			Если Счетчик010 > 4 Тогда
				ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик010);
				ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик010);
				НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
				НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик010, НоваяСумма);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик010, НоваяСтрока);
			Иначе
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик010, Окр(СтрокаТаблицы.Значение));
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик010, СтрокаТаблицы.КодСтроки);
				Счетчик010 = Счетчик010 + 1;
			КонецЕсли;
		ИначеЕсли ОбластьНачало = "s_220_00_012" Тогда
			Если Счетчик012 > 1 Тогда
				ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик012);
				ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик012);
				НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
				НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик012, НоваяСумма);
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик012, НоваяСтрока);
			Иначе
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик012, Окр(СтрокаТаблицы.Значение));
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик012, СтрокаТаблицы.КодСтроки);
				Счетчик012 = Счетчик012 + 1;
			КонецЕсли;
		ИначеЕсли ОбластьНачало = "s_220_00_014" Тогда
			ИсходнаяСтрока = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,ОбластьНачало + "_dic__"+Счетчик014);
			ИсходнаяСумма = РегламентированнаяОтчетность.ЗначениеТаблицыДанныхОбычнойФормы(ТаблицаДанных,СтрокаТаблицы.ИмяОбласти+Счетчик014);
			НоваяСтрока = ?(ЗначениеЗаполнено(ИсходнаяСтрока),ИсходнаяСтрока + СтрокаТаблицы.КодСтроки,СтрокаТаблицы.КодСтроки) + ";";
			НоваяСумма = ИсходнаяСумма + Окр(СтрокаТаблицы.Значение);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, СтрокаТаблицы.ИмяОбласти+Счетчик014, НоваяСумма);
			РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, КодФормы, ОбластьНачало + "_dic__"+Счетчик014, НоваяСтрока);
   		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанных = РегламентированнаяОтчетность.ПолучитьТаблицуДанныхОбычнойФормыВФоне(ФормаСтруктура, КодФормы);
	
	СписокФормДерева = ФормаСтруктура.СписокФормДерева;
	мСтруктураЗначений = ФормаСтруктура.мСтруктураЗначений;
	мСписокФормБезИерархии = ФормаСтруктура.мСписокФормБезИерархии;
	Форма220ПолеТабличногоДокументаСтраница1 = ФормаСтруктура.Форма220ПолеТабличногоДокументаСтраница1;
	
	// Заполняем поле "Представленные приложения"
	Для Каждого Форма Из СписокФормДерева.Строки[0].Строки Цикл            
		ИмяОбласти = "Приложение" + Прав(Форма.КодФормы, 2);
		Если Форма220ПолеТабличногоДокументаСтраница1.Области.Найти(ИмяОбласти) <> Неопределено Тогда 			
			Строка = мСписокФормБезИерархии.Строки.Найти(Форма.КодФормы, "КодФормы");
			Если Строка.Выгружать = 1 Тогда
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "Х");				
			Иначе
				РегламентированнаяОтчетность.ПередатьЗначениеВСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы, ИмяОбласти, "");				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция Форма2202023Кв1_Форма220РассчитатьДанныеФормы(ФормаСтруктура, ВыдаватьСообщения = Ложь)
	
	Налогоплательщик = ФормаСтруктура.Налогоплательщик;
	СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ГраницаНач = Новый Граница(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,ВидГраницы.Включая);
	Запрос.УстановитьПараметр("НачГраница", 			ГраницаНач);
	ГраницаКон = Новый Граница(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, ВидГраницы.Включая);
	Запрос.УстановитьПараметр("КонГраница", 			ГраницаКон);
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
	Запрос.УстановитьПараметр("ВидУчетаВР",				Справочники.ВидыУчетаНУ.ВР);
	Запрос.УстановитьПараметр("ВидУчетаНУ",				Справочники.ВидыУчетаНУ.НУ);
	Запрос.УстановитьПараметр("ВидУчетаПР",				Справочники.ВидыУчетаНУ.ПР);
	Запрос.УстановитьПараметр("ВидСубконтоЗатрат",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидСубконтоДоходов",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты",	ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	
	СписокСчетовНалогов = Новый СписокЗначений;
	СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
	СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
	
	Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
	
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат",		Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеРБП",				Справочники.РасходыБудущихПериодов.ПустаяСсылка());
	Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Счет2400Н",				ПланыСчетов.Налоговый.НезавершенноеСтроительство);
	Запрос.УстановитьПараметр("Счет2500Н",				ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);
	Запрос.УстановитьПараметр("Счет3350",				ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);
	Запрос.УстановитьПараметр("Счет7900Н",				ПланыСчетов.Налоговый.РасходыНаРемонтВА);
	Запрос.УстановитьПараметр("Счет7410",				ПланыСчетов.Налоговый.ПрочиеРасходыПоВнеоборотнымАктивам);
	Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
	Запрос.УстановитьПараметр("СчетИтоговогоДохода",	ПланыСчетов.Налоговый.ИтоговаяПрибыльИтоговыйУбыток_);
	
	Запрос.УстановитьПараметр("КапитальныйРемонт",		Перечисления.ВидыРемонтаВА.Капитальный);
	
	// параметры по курсовым 
	Запрос.УстановитьПараметр("КодСтрокиДоходОтКурсовойРазницы",   СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
	Запрос.УстановитьПараметр("КодСтрокиРасходыПоКурсовойРазнице", СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
	
	КодСтрокиКурсовойРазницы = Новый СписокЗначений;
	КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);
	КодСтрокиКурсовойРазницы.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);
	
	Запрос.УстановитьПараметр("КодСтрокиКурсовойРазницы",	КодСтрокиКурсовойРазницы);
	Запрос.УстановитьПараметр("КодСтроки",					"220.00%");
	
	Запрос.УстановитьПараметр("СчетаДоходов",		ПланыСчетов.Налоговый.Доходы); //счета Н700
	
	СписокСчетовНал = Новый СписокЗначений;	
	СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80    	
	СписокСчетовНал.Добавить(ПланыСчетов.Налоговый.Расходы);    //счет Н800    	
	
	Запрос.УстановитьПараметр("СчетаРасходов",		СписокСчетовНал); //счета Н700 Н800
	
	СписокСчетовАктивов = Новый СписокЗначений;
	СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.Запасы); 		  			  	//счет 1310
	СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.НезавершенноеПроизводство); 		//счет 1340	
	СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 					//счет 1350	
	СписокСчетовАктивов.Добавить(ПланыСчетов.Налоговый.ПрочиеАктивы_); 					//счет 1600	
	
	Запрос.УстановитьПараметр("СписокСчетовАктивов", СписокСчетовАктивов); 	
	Запрос.УстановитьПараметр("СписокСчетов30Н",     ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);
	
	СписокСчетовРасходов = Новый СписокЗначений;
	СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.НезавершенноеСтроительство); 	//счет Н330 (2400)        	
	СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Расходы);    					//счет Н800  (70)
	СписокСчетовРасходов.Добавить(ПланыСчетов.Налоговый.Производство_); 				//счет 80
	
	Запрос.УстановитьПараметр("СписокСчетовРасходов", СписокСчетовРасходов);		//счета Н330 Н800
	
	СписокСчетовСтрокиA = Новый СписокЗначений;
	СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.Товары); 					//счет Н211 (1330Н)
	СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);    		//счет Н214 (1310Н)   	
	СписокСчетовСтрокиA.Добавить(ПланыСчетов.Налоговый.ПрочиеЗапасы); 			   	//счет 1350		
	
	Запрос.УстановитьПараметр("СписокСчетовСтрокиA", СписокСчетовСтрокиA);   //счета Н211 Н214
	
	Запрос.УстановитьПараметр("КодСтрокЗП",   "220.00.016.IV");
	Запрос.УстановитьПараметр("КодСтрокиA",   "220.00.016.IIIA");
	Запрос.УстановитьПараметр("КодСтрокиРБП", "220.00.016%");
	
	Запрос.УстановитьПараметр("Топливо",);
	
	КодыСтрок = Новый СписокЗначений;
	КодыСтрок.Добавить("220.00.016.IIIA"); 
	КодыСтрок.Добавить("220.00.016.IIIB"); 					
	КодыСтрок.Добавить("220.00.016.IIIC"); 					
	КодыСтрок.Добавить("220.00.016.IIID"); 					
	КодыСтрок.Добавить("220.00.016.IIIE"); 					
	КодыСтрок.Добавить("220.00.016.IIIF"); 					
	КодыСтрок.Добавить("220.00.016.IIIG"); 					
	КодыСтрок.Добавить("220.00.016.IIIH"); 					
	
	Запрос.УстановитьПараметр("КодыСтрок", КодыСтрок);
	
	СписокДохКодовСтрок = Новый СписокЗначений;
	
	СписокДохКодовСтрок.Добавить("220.00.001");
	СписокДохКодовСтрок.Добавить("220.00.001.I");
	СписокДохКодовСтрок.Добавить("220.00.001.II");
	СписокДохКодовСтрок.Добавить("220.00.001.III");
	СписокДохКодовСтрок.Добавить("220.00.001.IV");
	СписокДохКодовСтрок.Добавить("220.00.002");
	СписокДохКодовСтрок.Добавить("220.00.003");
	СписокДохКодовСтрок.Добавить("220.00.004");
	СписокДохКодовСтрок.Добавить("220.00.005");
	СписокДохКодовСтрок.Добавить("220.00.005.I");
	СписокДохКодовСтрок.Добавить("220.00.005.II");
	СписокДохКодовСтрок.Добавить("220.00.006");
	СписокДохКодовСтрок.Добавить("220.00.007");
	СписокДохКодовСтрок.Добавить("220.00.008");
	СписокДохКодовСтрок.Добавить("220.00.009");
	СписокДохКодовСтрок.Добавить("220.00.010");
	СписокДохКодовСтрок.Добавить("220.00.012");
	СписокДохКодовСтрок.Добавить("220.00.013");
	СписокДохКодовСтрок.Добавить("220.00.014");
	СписокДохКодовСтрок.Добавить("220.00.035.I");
	СписокДохКодовСтрок.Добавить("220.00.036");
	СписокДохКодовСтрок.Добавить("220.00.040");
	СписокДохКодовСтрок.Добавить("220.00.040.II");
	СписокДохКодовСтрок.Добавить("220.00.046");
	СписокДохКодовСтрок.Добавить("220.00.046.A");
	СписокДохКодовСтрок.Добавить("220.00.046.B");

	
	мМакетКодовСтрок = ЭтотОбъект.ПолучитьМакет("КодыСтрокНалоговыхДеклараций");
	
	ДополнитьСписокКодовСтрокИзКлассификатора("220.00.010"  , СписокДохКодовСтрок, мМакетКодовСтрок);
	ДополнитьСписокКодовСтрокИзКлассификатора("220.00.012"  , СписокДохКодовСтрок, мМакетКодовСтрок);
	ДополнитьСписокКодовСтрокИзКлассификатора("220.00.014"  , СписокДохКодовСтрок, мМакетКодовСтрок);
	
	СписокРасКодовСтрок = Новый СписокЗначений;
	Для Н = 17 По 22 Цикл
		Номер = Формат(Н, "ЧЦ=2; ЧВН=");
		СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
	КонецЦикла;
	Для Н = 24 По 33 Цикл
		Номер = Формат(Н, "ЧЦ=2; ЧВН=");
		СписокРасКодовСтрок.Добавить("220.00.0" + Номер);
	КонецЦикла;
	
	СписокРасКодовСтрок.Добавить("220.00.032.I");
	СписокРасКодовСтрок.Добавить("220.00.032.II");
	СписокРасКодовСтрок.Добавить("220.00.032.III");
	СписокРасКодовСтрок.Добавить("220.00.032.IV");		
	СписокРасКодовСтрок.Добавить("220.00.034.II");
	СписокРасКодовСтрок.Добавить("220.00.037");
	СписокРасКодовСтрок.Добавить("220.00.044"); 
	СписокРасКодовСтрок.Добавить("220.00.045.A");
	СписокРасКодовСтрок.Добавить("220.00.045.B");
	СписокРасКодовСтрок.Добавить("220.00.046");
	СписокРасКодовСтрок.Добавить("220.00.048");
		
	Запрос.УстановитьПараметр("СписокДохКодовСтрок", СписокДохКодовСтрок);
	Запрос.УстановитьПараметр("СписокРасКодовСтрок", СписокРасКодовСтрок);
	
	КодыДляИсключенияИзОсновногоЗапроса = Новый СписокЗначений;
	КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиДоходОтКурсовойРазницы);// курсовая
	КодыДляИсключенияИзОсновногоЗапроса.Добавить(СтруктураРеквизитовФормы.КодСтрокиРасходыПоКурсовойРазнице);// курсовая
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIA"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIB"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIC"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIID"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIE"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIF"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIG"); 					
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IIIH");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IV");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.V");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VI");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VII");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.VIII");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016.IX");
	КодыДляИсключенияИзОсновногоЗапроса.Добавить("220.00.016%");
	
	Запрос.УстановитьПараметр("КодыДляИсключенияИзОсновногоЗапроса", КодыДляИсключенияИзОсновногоЗапроса);
	
	СписокДохНеподлежащихНалог = Новый СписокЗначений;
	СписокДохНеподлежащихНалог.Добавить("220.00.040");
	
	Запрос.УстановитьПараметр("КодСтрокиКоррДоходов", 	"220.00.035.I");
	Запрос.УстановитьПараметр("КодСтрокиКоррВычетов", 	"220.00.035.II");
	
	Запрос.УстановитьПараметр("СписокДохНеподлежащихНалог", СписокДохНеподлежащихНалог);
	
	Запрос.Текст="ВЫБРАТЬ
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК Доход,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
	|			ТОГДА 3
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
	|			ТОГДА 2
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
	|			ТОГДА 1
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ВТ_Приоритет
	|ИЗ
	|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
	|			&КонПериода,
	|			(Налогоплательщик = &ПустаяОрганизация
	|				ИЛИ Налогоплательщик = &ПустоеЗначение
	|				ИЛИ Налогоплательщик = &Организация)
	|				И НЕ КодСтроки = """") КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Приоритет,
	|	Доход
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
	|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
	|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
	|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ДоходРасходКурсовых,
	|	&КодСтрокиДоходОтКурсовойРазницы КАК Код
	|ПОМЕСТИТЬ ВТ_ДоходРасходКурсовой
	|ИЗ
	|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
	|ГДЕ
	|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
	|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
	|	И ВЫБОР
	|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ВЫБОР
	|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1 ССЫЛКА Справочник.Доходы
	|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2 ССЫЛКА Справочник.Доходы
	|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3 ССЫЛКА Справочник.Доходы
	|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоДоходовНУ3
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
	|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	&КодСтрокиРасходыПоКурсовойРазнице
	|ИЗ
	|	РегистрСведений.СпособыОтраженияКурсовойРазницы КАК СпособыОтраженияКурсовойРазницы
	|ГДЕ
	|	(СпособыОтраженияКурсовойРазницы.Организация В (&Организация)
	|			ИЛИ СпособыОтраженияКурсовойРазницы.Организация = &ПустаяОрганизация)
	|	И ВЫБОР
	|			КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ВЫБОР
	|							КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2 ССЫЛКА Справочник.СтатьиЗатрат
	|					ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3 ССЫЛКА Справочник.СтатьиЗатрат
	|							ТОГДА СпособыОтраженияКурсовойРазницы.СубконтоРасходовНУ3
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДохода.Доход КАК ДоходРасход,
	|	ВЫБОР
	|		КОГДА ВТ_ДоходРасходКурсовой.Код ЕСТЬ NULL
	|			ТОГДА ДанныеОКодахДекларации.КодСтроки
	|		ИНАЧЕ ВТ_ДоходРасходКурсовой.Код
	|	КОНЕЦ КАК КодСтроки
	|ПОМЕСТИТЬ ВТ_СведенияОкодахСтрокДекларации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДохода.Доход КАК Доход,
	|		МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|	ИЗ
	|		ВТ_Приоритет КАК ТаблицаДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДохода.Доход) КАК ТаблицаДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|		ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|			И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоходРасходКурсовой КАК ВТ_ДоходРасходКурсовой
	|		ПО ТаблицаДохода.Доход = ВТ_ДоходРасходКурсовой.ДоходРасходКурсовых
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоходРасход,
	|	КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""220.00.016.IIIA"" КАК КодСтроки,
	|	0 КАК ДоходРасход,
	|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК Сумма,
	|	0 КАК ВыдСообщение,
	|	НалоговыйОбороты.ВидУчета КАК ВидУчета
	|ПОМЕСТИТЬ ВТ_СтрокаIIIA
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В (&СписокСчетовСтрокиA),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета <> &ВидУчетаВР,
	|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав)),
	|			) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.ВидУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""220.00.016.IIIA"",
	|	0,
	|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)),
	|	0,
	|	НалоговыйОбороты.ВидУчета
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В (&СписокСчетовСтрокиA)
	|				И НЕ Счет = &Счет7410,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета <> &ВидУчетаВР,
	|			НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовСтрокиA, ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ГотоваяПродукция), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Производство_), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный)),
	|			) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.ВидУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""220.00.016.IIIA"",
	|	0,
	|	СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
	|	0,
	|	НалоговыйОбороты.ВидУчета
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В (&СписокСчетовСтрокиA),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета <> &ВидУчетаВР,
	|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Расходы)),
	|			) КАК НалоговыйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
	|		ПО НалоговыйОбороты.КорСубконто1 = ДанныеОКодахДекларации.ДоходРасход
	|			И (ДанныеОКодахДекларации.КодСтроки = &КодСтрокиКоррВычетов)
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.ВидУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапросПо30Строкам.КодСтроки КАК КодСтроки,
	|	ЗапросПо30Строкам.ДоходРасход КАК ДоходРасход,
	|	ЗапросПо30Строкам.СуммаСтроки КАК Сумма,
	|	ЗапросПо30Строкам.Поле2 КАК ВыдСообщение,
	|	ЗапросПо30Строкам.ВидУчета КАК ВидУчета,
	|	ЗапросПо30Строкам.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_СтрокиIII
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.КодСтроки КАК КодСтроки,
	|		ВложенныйЗапрос.ДоходРасход КАК ДоходРасход,
	|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)) КАК СуммаСтроки,
	|		0 КАК Поле2,
	|		НалоговыйОбороты.ВидУчета КАК ВидУчета,
	|		НалоговыйОбороты.Счет КАК Счет
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
	|					И НЕ Счет = &Счет7900Н
	|					И НЕ Счет = &Счет7410,
	|				&ВидСубконтоЗатрат,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета <> &ВидУчетаВР,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
	|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаДохода.Доход КАК ДоходРасход,
	|				ТаблицаДохода.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаДохода.Доход КАК Доход,
	|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаДохода
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаДохода.Доход) КАК ТаблицаДохода
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
	|			ГДЕ
	|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
	|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ДоходРасход,
	|		ВложенныйЗапрос.КодСтроки,
	|		НалоговыйОбороты.ВидУчета,
	|		НалоговыйОбороты.Счет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВложенныйЗапрос.КодСтроки,
	|		ВложенныйЗапрос.ДоходРасход,
	|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
	|		0,
	|		НалоговыйОбороты.ВидУчета,
	|		НалоговыйОбороты.Счет
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет В ИЕРАРХИИ (&Счет7900Н)
	|					ИЛИ Счет В ИЕРАРХИИ (&Счет7410),
	|				&ВидСубконтоЗатрат,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета <> &ВидУчетаВР,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
	|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаДохода.Доход КАК ДоходРасход,
	|				ТаблицаДохода.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаДохода.Доход КАК Доход,
	|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаДохода
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаДохода.Доход) КАК ТаблицаДохода
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
	|			ГДЕ
	|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
	|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ДоходРасход,
	|		ВложенныйЗапрос.КодСтроки,
	|		НалоговыйОбороты.ВидУчета,
	|		НалоговыйОбороты.Счет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВложенныйЗапрос.КодСтроки,
	|		ВложенныйЗапрос.ДоходРасход,
	|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)- ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0)),
	|		0,
	|		НалоговыйОбороты.ВидУчета,
	|		НалоговыйОбороты.Счет
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет = &Счет1620Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета <> &ВидУчетаВР,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
	|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаДохода.Доход КАК ДоходРасход,
	|				ТаблицаДохода.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаДохода.Доход КАК Доход,
	|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаДохода
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаДохода.Доход) КАК ТаблицаДохода
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|						И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
	|			ГДЕ
	|				ДанныеОКодахДекларации.КодСтроки В(&КодыСтрок)) КАК ВложенныйЗапрос
	|			ПО (ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
	|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
	|					ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.ДоходРасход,
	|		ВложенныйЗапрос.КодСтроки,
	|		НалоговыйОбороты.ВидУчета,
	|		НалоговыйОбороты.Счет) КАК ЗапросПо30Строкам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
	|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатраты
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаРасходов)
	|				И НЕ Счет = &Счет7900Н
	|				И НЕ Счет = &Счет7410,
	|			&ВидСубконтоЗатрат,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета = &ВидУчетаНУ,
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
	|			) КАК НалоговыйОборотыПоЗатратам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОборотыПоДоходам.Субконто1,
	|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаДоходов),
	|			&ВидСубконтоДоходов,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета = &ВидУчетаНУ,
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
	|			) КАК НалоговыйОборотыПоДоходам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
	|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) - ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотКт, 0) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПР
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаРасходов)
	|				И НЕ Счет = &Счет7900Н
	|				И НЕ Счет = &Счет7410,
	|			&ВидСубконтоЗатрат,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
	|			) КАК НалоговыйОборотыПоЗатратам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОборотыПоДоходам.Субконто1,
	|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0) - ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотДт, 0)
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаДоходов),
	|			&ВидСубконтоДоходов,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000),
	|			) КАК НалоговыйОборотыПоДоходам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыйОборотыПоЗатратам.Субконто1 КАК ДоходРасход,
	|	0 КАК ПоложительнаяКР,
	|	ЕСТЬNULL(НалоговыйОборотыПоЗатратам.СуммаОборотДт, 0) КАК ОтрицательнаяКР
	|ПОМЕСТИТЬ ВТ_ОбщиеДоходыЗатратыПоКурсовойРазнице
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаРасходов)
	|				И НЕ Счет = &Счет7900Н
	|				И НЕ Счет = &Счет7410,
	|			&ВидСубконтоЗатрат,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета = &ВидУчетаНУ,
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
	|			) КАК НалоговыйОборотыПоЗатратам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыйОборотыПоДоходам.Субконто1,
	|	ЕСТЬNULL(НалоговыйОборотыПоДоходам.СуммаОборотКт, 0),
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаДоходов),
	|			&ВидСубконтоДоходов,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета = &ВидУчетаНУ,
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
	|			) КАК НалоговыйОборотыПоДоходам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновнойЗапрос.КодСтроки КАК КодСтроки,
	|	ОсновнойЗапрос.ДоходРасход КАК ДоходРасход,
	|	СУММА(ОсновнойЗапрос.Сумма) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ОсновнойЗапрос.ДоходРасход ССЫЛКА Справочник.СтатьиЗатрат
	|				И НЕ ОсновнойЗапрос.КурсоваяРазница
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
	|							И ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
	|						ТОГДА ""СтатьяЗатратДох""
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ ОсновнойЗапрос.КодСтроки В (&СписокДохКодовСтрок)
	|						И ОсновнойЗапрос.КодСтроки В (&СписокРасКодовСтрок)
	|						И НЕ ОсновнойЗапрос.КурсоваяРазница
	|					ТОГДА ""ДоходРасх""
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ВыдСообщение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОКодахДекларации.КодСтроки КАК КодСтроки,
	|		НалоговыйОбороты.Сумма КАК Сумма,
	|		НалоговыйОбороты.ДоходРасход КАК ДоходРасход,
	|		ЛОЖЬ КАК КурсоваяРазница
	|	ИЗ
	|		ВТ_ОбщиеДоходыЗатраты КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
	|			ПО НалоговыйОбороты.ДоходРасход = ДанныеОКодахДекларации.ДоходРасход
	|				И (ДанныеОКодахДекларации.КодСтроки ПОДОБНО &КодСтроки)
	|	ГДЕ
	|		НЕ ДанныеОКодахДекларации.КодСтроки В (&КодыДляИсключенияИзОсновногоЗапроса)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
	|				ТОГДА ""220.00.028""
	|			ИНАЧЕ ""220.00.010""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР < 0
	|				ТОГДА КурсоваяРазница.ОтрицательнаяКР - КурсоваяРазница.ПоложительнаяКР
	|			ИНАЧЕ КурсоваяРазница.ПоложительнаяКР - КурсоваяРазница.ОтрицательнаяКР
	|		КОНЕЦ,
	|		0,
	|		ИСТИНА
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СУММА(КонечныеИтоговыеДанные.ПоложительнаяКР) КАК ПоложительнаяКР,
	|			СУММА(КонечныеИтоговыеДанные.ОтрицательнаяКР) КАК ОтрицательнаяКР
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаДоходов)
	|						ТОГДА НалоговыйОбороты.СуммаОборотКт
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ПоложительнаяКР,
	|				ВЫБОР
	|					КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетаРасходов)
	|						ТОГДА НалоговыйОбороты.СуммаОборотДт
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ОтрицательнаяКР
	|			ИЗ
	|				РегистрБухгалтерии.Налоговый.Обороты(
	|						&НачПериода,
	|						&КонПериода,
	|						,
	|						Счет В ИЕРАРХИИ (&СчетаДоходов)
	|							ИЛИ Счет В ИЕРАРХИИ (&СчетаРасходов)
	|								И НЕ Счет = &Счет7900Н
	|								И НЕ Счет = &Счет7410,
	|						,
	|						Организация В (&СписокОрганизаций)
	|							И ВидУчета = &ВидУчетаНУ,
	|						НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|							И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
	|							И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов),
	|						) КАК НалоговыйОбороты
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОкодахСтрокДекларации КАК ДанныеОКодахДекларации
	|					ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахДекларации.ДоходРасход
	|						И (ДанныеОКодахДекларации.КодСтроки В (&КодСтрокиКурсовойРазницы))) КАК КонечныеИтоговыеДанные) КАК КурсоваяРазница) КАК ОсновнойЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновнойЗапрос.КурсоваяРазница,
	|	ОсновнойЗапрос.ДоходРасход,
	|	ОсновнойЗапрос.КодСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СтрокаIIIA.КодСтроки,
	|	ВТ_СтрокаIIIA.ДоходРасход,
	|	ВТ_СтрокаIIIA.Сумма,
	|	ВТ_СтрокаIIIA.ВыдСообщение
	|ИЗ
	|	ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СтрокиIII.КодСтроки,
	|	ВТ_СтрокиIII.ДоходРасход,
	|	ВТ_СтрокиIII.Сумма,
	|	ВТ_СтрокиIII.ВыдСообщение
	|ИЗ
	|	ВТ_СтрокиIII КАК ВТ_СтрокиIII
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""220.00.016.IV"",
	|	ВложенныйЗапрос.ДоходРасход,
	|	НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&СчетаРасходов)
	|				И НЕ Счет = &Счет7900Н,
	|			&ВидСубконтоЗатрат,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета = &ВидУчетаНУ,
	|			НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|				И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода)
	|				И НЕ КорСчет В ИЕРАРХИИ (&СчетаРасходов)
	|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
	|			) КАК НалоговыйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаДохода.Доход КАК ДоходРасход,
	|			ТаблицаДохода.Приоритет КАК Приоритет,
	|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаДохода.Доход КАК Доход,
	|				МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|			ИЗ
	|				ВТ_Приоритет КАК ТаблицаДохода
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТаблицаДохода.Доход) КАК ТаблицаДохода
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|				ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|					И ТаблицаДохода.Доход = ДанныеОКодахДекларации.Доход
	|		ГДЕ
	|			ДанныеОКодахДекларации.КодСтроки = &КодСтрокЗП) КАК ВложенныйЗапрос
	|		ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.ДоходРасход
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеV.КодСтроки,
	|	ДанныеV.ДоходРасход,
	|	ДанныеV.Сумма,
	|	ДанныеV.ВыдСообщение
	|ИЗ
	|	(ВЫБРАТЬ
	|		""220.00.016.V"" КАК КодСтроки,
	|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
	|		НалоговыйОбороты.СуммаОборотКт КАК Сумма,
	|		0 КАК ВыдСообщение
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет = &Счет1620Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И Субконто1 <> &ПустоеРБП
	|					И ВидУчета = &ВидУчетаНУ,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000)
	|					И НЕ КорСчет В ИЕРАРХИИ (&СчетИтоговогоДохода),
	|				) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НалоговыйОстатки.Субконто1 КАК Субконто1
	|			ИЗ
	|				РегистрБухгалтерии.Налоговый.Остатки(
	|						&НачГраница,
	|						Счет = &Счет1620Н,
	|						,
	|						Организация В (&СписокОрганизаций)
	|							И Субконто1 <> &ПустоеРБП
	|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|					ИЗ
	|						(ВЫБРАТЬ
	|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|						ИЗ
	|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|					ГДЕ
	|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
	|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК НачальныйОстатокРБП
	|			ПО НалоговыйОбороты.Субконто1 = НачальныйОстатокРБП.Субконто1
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|					ИЗ
	|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|				ГДЕ
	|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.016"") КАК СтатьиЗатратПоКоду
	|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
	|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
	|	ГДЕ
	|		(НалоговыйОбороты.СуммаОборотДт = 0
	|				ИЛИ НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт)) КАК ДанныеV
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонечныеИтоговыеДанные.КодСтроки,
	|	КонечныеИтоговыеДанные.ДоходРасход,
	|	КонечныеИтоговыеДанные.Сумма,
	|	КонечныеИтоговыеДанные.ВыдСообщение
	|ИЗ
	|	(ВЫБРАТЬ
	|		""220.00.016.VIII"" КАК КодСтроки,
	|		ВТ_СтрокаIIIA.ДоходРасход КАК ДоходРасход,
	|		ВТ_СтрокаIIIA.Сумма КАК Сумма,
	|		ВТ_СтрокаIIIA.ВыдСообщение КАК ВыдСообщение,
	|		NULL КАК Счет
	|	ИЗ
	|		ВТ_СтрокаIIIA КАК ВТ_СтрокаIIIA
	|	ГДЕ
	|		ВТ_СтрокаIIIA.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""220.00.016.VIII"",
	|		ВТ_СтрокиIII.ДоходРасход,
	|		ВТ_СтрокиIII.Сумма,
	|		ВТ_СтрокиIII.ВыдСообщение,
	|		ВТ_СтрокиIII.Счет
	|	ИЗ
	|		ВТ_СтрокиIII КАК ВТ_СтрокиIII
	|	ГДЕ
	|		ВТ_СтрокиIII.ВидУчета В ИЕРАРХИИ(&ВидУчетаПР)
	|		И ВТ_СтрокиIII.Счет <> &Счет7900Н
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""220.00.016.VIII"",
	|		0,
	|		НалоговыйОбороты.СуммаОборотДт - НалоговыйОбороты.СуммаОборотКт,
	|		0,
	|		NULL
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет В ИЕРАРХИИ (&СписокСчетовРасходов)
	|					И НЕ Счет В ИЕРАРХИИ (&Счет7900Н),
	|				&ВидСубконтоЗатрат,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета В ИЕРАРХИИ (&ВидУчетаПР),
	|				КорСчет В ИЕРАРХИИ (&СписокСчетов30Н)
	|					ИЛИ КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
	|				) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК ВложенныйЗапрос
	|			ПО НалоговыйОбороты.Субконто1 = ВложенныйЗапрос.СтатьяЗатрат
	|	ГДЕ
	|		(ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 14) = ""220.00.016.VII""
	|				ИЛИ ПОДСТРОКА(ВложенныйЗапрос.КодСтроки, 1, 15) = ""220.00.016.VIII"")) КАК КонечныеИтоговыеДанные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоСтроке49VI.КодСтроки,
	|	ЗапросПоСтроке49VI.ДоходРасход,
	|	ЗапросПоСтроке49VI.Сумма,
	|	ЗапросПоСтроке49VI.ВыдСообщение
	|ИЗ
	|	(ВЫБРАТЬ
	|		""220.00.016.VI"" КАК КодСтроки,
	|		0 КАК ДоходРасход,
	|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
	|		0 КАК ВыдСообщение
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет = &Счет7900Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета <> &ВидУчетаВР,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СчетИтоговогоДохода, &СписокСчетовНалогов),
	|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет) КАК СтатьиЗатратПоКоду
	|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""220.00.016.VI"",
	|		0,
	|		НалоговыйОбороты.СуммаОборотДт,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет = &Счет7900Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета <> &ВидУчетаВР,
	|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
	|				) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|			ГДЕ
	|				ДанныеОКодахДекларации.КодСтроки = ""220.00.016.VI"") КАК СтатьиЗатратПоКоду
	|			ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат) КАК ЗапросПоСтроке49VI
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеIX.КодСтроки,
	|	ДанныеIX.ДоходРасход,
	|	ДанныеIX.Сумма,
	|	ДанныеIX.ВыдСообщение
	|ИЗ
	|	(ВЫБРАТЬ
	|		""220.00.016.IX"" КАК КодСтроки,
	|		НалоговыйОбороты.Субконто1 КАК ДоходРасход,
	|		ВЫБОР
	|			КОГДА НалоговыйОбороты.СуммаОборотДт < НалоговыйОбороты.СуммаОборотКт
	|				ТОГДА НалоговыйОбороты.СуммаОборотДт
	|			ИНАЧЕ КонечныйОстатокРБП.СуммаОстаток
	|		КОНЕЦ КАК Сумма,
	|		0 КАК ВыдСообщение
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет = &Счет1620Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И Субконто1 <> &ПустоеРБП
	|					И ВидУчета = &ВидУчетаНУ,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000),
	|				) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НалоговыйОстатки.Субконто1 КАК Субконто1,
	|				НалоговыйОстатки.СуммаОстаток КАК СуммаОстаток
	|			ИЗ
	|				РегистрБухгалтерии.Налоговый.Остатки(
	|						&КонГраница,
	|						Счет = &Счет1620Н,
	|						,
	|						Организация В (&СписокОрганизаций)
	|							И Субконто1 <> &ПустоеРБП
	|							И ВидУчета = &ВидУчетаНУ) КАК НалоговыйОстатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|						ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|						ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|					ИЗ
	|						(ВЫБРАТЬ
	|							ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|							МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|						ИЗ
	|							ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|						
	|						СГРУППИРОВАТЬ ПО
	|							ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|							ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|							ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|								И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|					ГДЕ
	|						ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = &КодСтрокиРБП) КАК СтатьиЗатратПоКоду
	|					ПО (ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|							ИЛИ ВЫРАЗИТЬ(НалоговыйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)) КАК КонечныйОстатокРБП
	|			ПО НалоговыйОбороты.Субконто1 = КонечныйОстатокРБП.Субконто1
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РасходыБудущихПериодов КАК РасходыБудущихПериодов
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|					ИЗ
	|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|				ГДЕ
	|					ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 10) = ""220.00.016"") КАК СтатьиЗатратПоКоду
	|				ПО (РасходыБудущихПериодов.СубконтоНУ1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|						ИЛИ РасходыБудущихПериодов.СубконтоНУ2 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|						ИЛИ РасходыБудущихПериодов.СубконтоНУ3 = СтатьиЗатратПоКоду.СтатьяЗатрат)
	|			ПО НалоговыйОбороты.Субконто1 = РасходыБудущихПериодов.Ссылка
	|	ГДЕ
	|		НалоговыйОбороты.СуммаОборотДт <> 0) КАК ДанныеIX
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоСтроке49VII.КодСтроки,
	|	ЗапросПоСтроке49VII.ДоходРасход,
	|	ЗапросПоСтроке49VII.Сумма,
	|	ЗапросПоСтроке49VII.ВыдСообщение
	|ИЗ
	|	(ВЫБРАТЬ
	|		""220.00.016.VII"" КАК КодСтроки,
	|		0 КАК ДоходРасход,
	|		НалоговыйОбороты.СуммаОборотДт КАК Сумма,
	|		0 КАК ВыдСообщение
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет = &Счет2400Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета = &ВидУчетаНУ,
	|				НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов),
	|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|				ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.Доход КАК СтатьяЗатрат,
	|					МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаСтатейЗатрат.Доход) КАК ТаблицаСтатейЗатрат
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.Доход
	|						И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	//|			ГДЕ
	//|				ПОДСТРОКА(ДанныеОКодахДекларации.КодСтроки, 1, 14) = ""220.00.016.III""
	|			) КАК СтатьиЗатратПоКоду
	|			ПО НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""220.00.016.VII"",
	|		0,
	|		НалоговыйОбороты.СуммаОборотДт,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнеоборотныеАктивы)),
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета = &ВидУчетаНУ,
	|				КорСчет В ИЕРАРХИИ (&СписокСчетовАктивов),
	|				) КАК НалоговыйОбороты) КАК ЗапросПоСтроке49VII
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	КодСтроки";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Процедура Форма2202023Кв1_Форма220_01ЗаполнитьАвто(ПараметрыОтчета)
	
	ТекИмяФормы = "Форма220_01";
	
	ФормаСтруктура  = ПараметрыОтчета.ФормаСтруктура;
	Налогоплательщик = ФормаСтруктура.Налогоплательщик;
	СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
	
	ПериодыДляФормированияПроверка = Форма220_01ПроверкаНаПлательщикаНДС(Налогоплательщик, СтруктураРеквизитовФормы);
	
	Если ПериодыДляФормированияПроверка = Неопределено Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как организация %1 является плательщиком НДС.'"), Налогоплательщик);				
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	ИначеЕсли ПериодыДляФормированияПроверка = Ложь Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Приложение 220.01 не заполняется, так как для организации %1 не заполнен регистр ""Учетная политика (налоговый учет)"".'"), Налогоплательщик);				
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	Иначе
		КолПериодов = ПериодыДляФормированияПроверка.Количество();
		Если КолПериодов = 0 Тогда 
			КолПовторов = 1;
		Иначе 
			КолПовторов = КолПериодов / 2;
		КонецЕсли;
	КонецЕсли;
	
	ТекущаяСтраница = 1;
	ЕстьДанныеДляВыводаНаФорму = Ложь;
	
	ТаблицаОтчета  = Форма2202023Кв1_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
	
	СтруктураФормы = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуруВФоне(ФормаСтруктура, ТекИмяФормы);
	
	Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
		НомерСтроки = 2;
		ИмяГруппы = ЭлементСтруктуры.Ключ;
		ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
		ОбщиеЭлементыГруппы = ЭлементСтруктуры.Значение.ШапкаИПодвал;  			
		ТаблицаСтрокГруппы.Очистить();
		
		Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл  			
			ЕстьДанныеДляВыводаНаФорму = Истина;
			Элемент = ТаблицаСтрокГруппы.Добавить();   			 
			Если ИмяГруппы = "Страница1" Тогда
				//Так должны заполнять по отдельности значения выборки 
				//для каждого листа
				Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
				КодСтраныРезидентства = "";
				
				Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" Тогда
					Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
						Строка(СтрокаОтчета.Контрагент));
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
					КонецЕсли;
					СтрокаБИНКонтрагента = "";                                                                             						
				ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
					// В ИИН/БИН имеются символы, отличные от цифр (0..9)
					Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
						Строка(СтрокаОтчета.Контрагент));
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
					КонецЕсли;
					СтрокаБИНКонтрагента = "";						
				Иначе
					СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
				КонецЕсли; 
				
				Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
					КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
				КонецЕсли; 					
				
				Элемент.Ф220_01_B = СтрокаБИНКонтрагента;
				Элемент.Ф220_01_C = КодСтраныРезидентства;
				
				//заполним таблицу расшифровки
				РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
				
				Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
					Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщениия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;	
						НомерНалоговойРегистрации = "";
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
						// В Номере имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						НомерНалоговойРегистрации = "";
					Иначе						
						НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
					КонецЕсли;
				Иначе 
					НомерНалоговойРегистрации = "";
				КонецЕсли;
				
				Элемент.Ф220_01_D = НомерНалоговойРегистрации;
				НомерНалоговойРегистрации = "";
				
				//заполним таблицу расшифровки
				РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
				
				Если СокрЛП(СтрокаОтчета.КодСтроки) <> "" Тогда 
					ДлинаКодаСтроки  = СтрДлина(СтрокаОтчета.КодСтроки);
					БуквеннаяЧастьКода = СокрЛП(Сред(СтрокаОтчета.КодСтроки, 15, ДлинаКодаСтроки));
					Если БуквеннаяЧастьКода = "B" Тогда 
						Элемент.Ф220_01_E = 1;
					ИначеЕсли БуквеннаяЧастьКода = "C" Тогда 
						Элемент.Ф220_01_E = 2;
					ИначеЕсли БуквеннаяЧастьКода = "D" Тогда 
						Элемент.Ф220_01_E = 3;
					ИначеЕсли БуквеннаяЧастьКода = "E" Тогда 
						Элемент.Ф220_01_E = 4;
					ИначеЕсли БуквеннаяЧастьКода = "F" Тогда 
						Элемент.Ф220_01_E = 5;
					ИначеЕсли БуквеннаяЧастьКода = "G" Тогда 
						Элемент.Ф220_01_E = 6;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяГруппы = "Страница2" Тогда
				
				Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
				
				
				Элемент.Ф220_01_F = Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
				
			КонецЕсли;
			НомерСтроки = НомерСтроки + 1;           			 
		КонецЦикла; 	 
	КонецЦикла; 	
	
	//Выдаем сообщения о статьях затрат, у которых нет соответствия в регистре сведений о кодах строк Декларации
	//или о контрагентах, у которых не указана статья затрат в проводках
	Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда
		ТаблицаСтатейЗатрат = Форма2202023Кв1_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодыДляФормированияПроверка, ФормаСтруктура);
		Для Каждого СтрокаСтатьиЗатрат из ТаблицаСтатейЗатрат Цикл
			Если  СтрокаСтатьиЗатрат.ПризнакСтатьи Тогда //Выбираем статьи затрат из запроса
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для статьи затрат <%1> не задан код строки Декларации!'"),
				Строка(СтрокаСтатьиЗатрат.Значение));					
			Иначе  //Выбираем контрагентов из запроса
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'При заполнении приложения 220.0 для контрагента <%1> не заполнена статья затрат!'"),
				Строка(СтрокаСтатьиЗатрат.Значение));					
			КонецЕсли;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаСтатьиЗатрат.Значение); 
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаОтчета = Форма2202023Кв1_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодыДляФормированияПроверка, ФормаСтруктура, Истина);	
	
	Если НомерСтроки <> Неопределено Тогда 
		НачальныйНомерСтроки = НомерСтроки;
	КонецЕсли;
	
	Для Каждого ЭлементСтруктуры Из СтруктураФормы Цикл
		ИмяГруппы = ЭлементСтруктуры.Ключ;			
		ТаблицаСтрокГруппы = ЭлементСтруктуры.Значение.Строки;
		
		Если НомерСтроки = Неопределено Тогда 
			ТаблицаРасшифровки = РегламентированнаяОтчетность.ПолучитьТаблицуРасшифровкиВФоне(ФормаСтруктура, ТекИмяФормы);
			ТаблицаРасшифровки.Очистить();
			НомерСтроки = 2;
			ТаблицаСтрокГруппы.Очистить();
			НачальныйНомерСтроки = НомерСтроки;
		Иначе 
			НомерСтроки = НачальныйНомерСтроки;
		КонецЕсли;
		
		Для Каждого СтрокаОтчета из ТаблицаОтчета Цикл 
			
			ЕстьДанныеДляВыводаНаФорму = Истина;
			
			Элемент = ТаблицаСтрокГруппы.Добавить();   			 
			Если ИмяГруппы = "Страница1" Тогда
				//Так должны заполнять по отдельности значения выборки 
				//для каждого листа
				Элемент.Ф220_01_A = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
				КодСтраныРезидентства = "";
				
				Если СокрЛП(СтрокаОтчета.ИдентификационныйКодЛичности) = "" ТОгда
					Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ИИН/БИН контрагента %1 не заполнен'"),
						Строка(СтрокаОтчета.Контрагент));
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
					КонецЕсли;
					СтрокаБИНКонтрагента = "";                                                                             						
				ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.ИдентификационныйКодЛичности)  ТОгда
					// В ИИН/БИН имеются символы, отличные от цифр (0..9)
					Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В ИИН/БИН контрагента %1 имеются символы, отличные от цифр (0..9)'"),
						Строка(СтрокаОтчета.Контрагент));
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент);
					КонецЕсли;
					СтрокаБИНКонтрагента = "";						
				Иначе
					СтрокаБИНКонтрагента = СтрокаОтчета.ИдентификационныйКодЛичности;
				КонецЕсли; 
				
				Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
					КодСтраныРезидентства = СтрокаОтчета.Код; // заполняем только для нерезидентов
				КонецЕсли;
				
				Элемент.Ф220_01_B    = СтрокаБИНКонтрагента;
				СтрокаБИНКонтрагента = "";
				Элемент.Ф220_01_C    = КодСтраныРезидентства;
				
				РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_B",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));
				
				Если Лев(СтрокаОтчета.КБЕ, 1) = "2" Тогда 
					Если СокрЛП(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) = "" ТОгда
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Номер налоговой регистрации в стране резидентства контрагента <%1> не заполнен'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;	
						НомерНалоговойРегистрации = "";
					ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства) Тогда
						// В Номере имеются символы, отличные от цифр (0..9)
						Если ЗначениеЗаполнено(СтрокаОтчета.Контрагент) Тогда
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В Номере налоговой регистрации в стране резидентства контрагента <%1> имеются символы, отличные от цифр (0..9)'"),
							Строка(СтрокаОтчета.Контрагент));
							ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, СтрокаОтчета.Контрагент); 
						КонецЕсли;
						НомерНалоговойРегистрации = "";
					Иначе						
						НомерНалоговойРегистрации = СтрокаОтчета.НомерНалоговойРегистрацииВСтранеРезидентства;
					КонецЕсли;
				КонецЕсли;
				
				Элемент.Ф220_01_D 			= НомерНалоговойРегистрации;
				
				//заполним таблицу расшифровки
				РегламентированнаяОтчетность.ДобавитьРасшифровкуСтрокиМногострочнойФормы(ТаблицаСтрокГруппы, Элемент, "Ф220_01_D",  ?(СтрокаОтчета.Контрагент = NULL, Неопределено, СтрокаОтчета.Контрагент));					 
				
				НомерНалоговойРегистрации 	= "";
				
				Элемент.Ф220_01_E			= 7;
				
			ИначеЕсли ИмяГруппы = "Страница2" Тогда
				
				Элемент.Ф220_01_A2 = Формат(НомерСтроки, ФормаСтруктура.мФорматНомераСтроки);
				
				Элемент.Ф220_01_F 			= Окр(?(СтрокаОтчета.Сумма <> NULL, СтрокаОтчета.Сумма, 0));
			КонецЕсли;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЦикла;
	
	ФормаСтруктура.Вставить("СтруктураФормы" + ТекИмяФормы, СтруктураФормы);
	
КонецПроцедуры

Функция Форма2202023Кв1_Форма220_01СтрокиС1По6РассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь)
	
	Налогоплательщик = ФормаСтруктура.Налогоплательщик;
	СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
	
	Запрос =  Новый Запрос;
	
	ТекстЗапросаПоМесяцам = "";
	
	Если ПериодФормирования <> Неопределено Тогда 
		
		КолПериодов = ПериодФормирования.Количество() - 1;
		
		Для Счетчик = 0 по КолПериодов Цикл
			НазПериодаНач = ПериодФормирования[Счетчик].Представление;
			НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
			ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
			ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
			Если ТекстЗапросаПоМесяцам = "" Тогда
				ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
				|   ГДЕ
				|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
				| ";
			Иначе 
				ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
				|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
				| ";
			КонецЕсли;
			Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
			Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
			Счетчик = Счетчик + 1;
		КонецЦикла;	
		
	Иначе 
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачПериода", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить(ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
	СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
	СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);	//счет 80
	
	Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300
	Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
	
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
	
	СписокСчетовНалогов = Новый СписокЗначений;
	СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
	СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
	Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
	
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
	Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
	
	СписокКодовСтрок = Новый СписокЗначений;
	СписокКодовСтрок.Добавить("220.00.016.IIIB");
	СписокКодовСтрок.Добавить("220.00.016.IIIC");
	СписокКодовСтрок.Добавить("220.00.016.IIID");
	СписокКодовСтрок.Добавить("220.00.016.IIIE");
	СписокКодовСтрок.Добавить("220.00.016.IIIF");
	СписокКодовСтрок.Добавить("220.00.016.IIIG");
	
	Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
	
	Запрос.УстановитьПараметр("ВидУчетаВР",             Справочники.ВидыУчетаНУ.ВР);
	
	Запрос.УстановитьПараметр("ПустаяДата",             '00010101');
	Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
	|			ТОГДА 3
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
	|			ТОГДА 2
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
	|			ТОГДА 1
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ВТ_Приоретет
	|ИЗ
	|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
	|			&КонПериода,
	|			(Налогоплательщик = &ПустаяОрганизация
	|				ИЛИ Налогоплательщик = &ПустоеЗначение
	|				ИЛИ Налогоплательщик = &Организация)
	|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонечныеИтоговыеДанные.Контрагент,
	|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
	|	КонечныеИтоговыеДанные.Код,
	|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
	|	КонечныеИтоговыеДанные.КБЕ,
	|	КонечныеИтоговыеДанные.КодСтроки,
	|	КонечныеИтоговыеДанные.Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		Контрагенты.Ссылка КАК Контрагент,
	|		Контрагенты.СерияСвидетельстваПоНДС КАК СерияСвидетельстваПоНДС,
	|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
	|		Контрагенты.НомерСвидетельстваПоНДС КАК НомерСвидетельстваПоНДС,
	|		Контрагенты.ДатаСвидетельстваПоНДС КАК ДатаСвидетельстваПоНДС,
	|		КлассификаторСтранМира.КодАльфа3 КАК Код,
	|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
	|		Контрагенты.КБЕ КАК КБЕ,
	|		Сумма(ВложенныйЗапрос.Сумма) КАК Сумма,
	|		ВложенныйЗапрос.КодСтроки КАК КодСтроки
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма,
	|			СтатьиЗатратПоКоду.КодСтроки КАК КодСтроки,
	|			НалоговыйОбороты.КорСубконто1 КАК КорСубконто1
	|		ИЗ
	|			РегистрБухгалтерии.Налоговый.Обороты(
	|					&НачПериода,
	|					&КонПериода,
	|					Запись,
	|					Счет В ИЕРАРХИИ (&СписокСчетов),
	|					&ВидСубконтоЗатрат,
	|					Организация В (&СписокОрганизаций)
	|						И ВидУчета <> &ВидУчетаВР,
	|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
	|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|					ИЗ
	|						ВТ_Приоретет КАК ТаблицаСтатейЗатрат
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
	|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
	|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
	|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|				ГДЕ
	|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК СтатьиЗатратПоКоду
	|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	| 	" + ТекстЗапросаПоМесяцам + "
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтатьиЗатратПоКоду.КодСтроки,
	|			НалоговыйОбороты.КорСубконто1
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)),
	|			ВложенныйЗапрос.КодСтроки,
	|			НалоговыйОбороты.КорСубконто1
	|		ИЗ
	|			РегистрБухгалтерии.Налоговый.Обороты(
	|					&НачПериода,
	|					&КонПериода,
	|					Запись,
	|					Счет = &Счет1620Н,
	|					,
	|					Организация В (&СписокОрганизаций)
	|						И ВидУчета <> &ВидУчетаВР,
	|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
	|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
	|					ТаблицаДохода.Приоритет КАК Приоритет,
	|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
	|						МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|					ИЗ
	|						ВТ_Приоретет КАК ТаблицаДохода
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
	|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоретет КАК ДанныеОКодахДекларации
	|						ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|							И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
	|				ГДЕ
	|					ДанныеОКодахДекларации.КодСтроки В(&КодСтроки)) КАК ВложенныйЗапрос
	|				ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
	|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
	|				   ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход
	| 	" + ТекстЗапросаПоМесяцам + "
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.КодСтроки,
	|			НалоговыйОбороты.КорСубконто1) КАК ВложенныйЗапрос
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
	|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
	|			ПО ВложенныйЗапрос.КорСубконто1 = Контрагенты.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Контрагенты.Ссылка,
	|		Контрагенты.СерияСвидетельстваПоНДС,
	|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
	|		Контрагенты.НомерСвидетельстваПоНДС,
	|		Контрагенты.ДатаСвидетельстваПоНДС,
	|		КлассификаторСтранМира.КодАльфа3,
	|		Контрагенты.ИдентификационныйКодЛичности,
	|		Контрагенты.КБЕ,	              
	|		ВложенныйЗапрос.КодСтроки) КАК КонечныеИтоговыеДанные
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() И ВыдаватьСообщения Тогда
		
		ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по кодам вида расхода с 1 по 6 за отчетный период отсутствуют...'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ТаблицаРезультата = Результат.Выгрузить();
	
	Возврат ТаблицаРезультата;
	
КонецФункции

Функция Форма2202023Кв1_Форма220_01СтрокаПрочееРассчитатьДанныеФормы(ПериодФормирования, ФормаСтруктура, ВыдаватьСообщения = Ложь) 
	
	Налогоплательщик = ФормаСтруктура.Налогоплательщик;
	СтруктураРеквизитовФормы = ФормаСтруктура.СтруктураРеквизитовФормы;
	
	Запрос =  Новый Запрос;
	
	ТекстЗапросаПоМесяцам = "";
	
	Если ПериодФормирования <> Неопределено Тогда 
		
		КолПериодов = ПериодФормирования.Количество() - 1;
		
		Для Счетчик = 0 по КолПериодов Цикл
			НазПериодаНач = ПериодФормирования[Счетчик].Представление;
			НазПериодаКон = ПериодФормирования[Счетчик + 1].Представление;
			ПериодНач  	  = ПериодФормирования[Счетчик].Значение;
			ПериодКон     = ПериодФормирования[Счетчик + 1].Значение;
			Если ТекстЗапросаПоМесяцам = "" Тогда
				ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
				|   ГДЕ
				|	НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
				| ";
			Иначе 
				ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам +  "
				|	ИЛИ НалоговыйОбороты.Период МЕЖДУ &" + НазПериодаНач + " И &" + НазПериодаКон + "
				| ";
			КонецЕсли;
			Запрос.УстановитьПараметр(НазПериодаНач, ПериодНач); 	
			Запрос.УстановитьПараметр(НазПериодаКон, ПериодКон); 	
			Счетчик = Счетчик + 1;
		КонецЦикла;	
		
	Иначе 
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачПериода", 			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", 			СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить(ПланыСчетов.Налоговый.Расходы);
	СписокСчетов.Добавить(ПланыСчетов.Налоговый.Производство_);
	
	Запрос.УстановитьПараметр("СписокСчетов",           СписокСчетов);    //счет Н800 счет Н300 
	Запрос.УстановитьПараметр("ВидСубконтоЗатрат",      ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);  // Субконто1 - СтатьиЗатрат
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);     
	
	СписокСчетовНалогов = Новый СписокЗначений;
	СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.РасчетыСБюджетомПоНалогамИОтчислениям);
	СписокСчетовНалогов.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоДругимОбязательнымИДобровольнымПлатежам);
	Запрос.УстановитьПараметр("СписокСчетовНалогов",	СписокСчетовНалогов);
	
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	Запрос.УстановитьПараметр("СписокОрганизаций", 		ФормаСтруктура.мСписокСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("ПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеЗначение", 		Неопределено);
	
	СписокКодовСтрок = Новый СписокЗначений;
	СписокКодовСтрок.Добавить("220.00.016.IIIB"); 					
	СписокКодовСтрок.Добавить("220.00.016.IIIC"); 					
	СписокКодовСтрок.Добавить("220.00.016.IIID"); 					
	СписокКодовСтрок.Добавить("220.00.016.IIIE"); 					
	СписокКодовСтрок.Добавить("220.00.016.IIIF"); 					
	СписокКодовСтрок.Добавить("220.00.016.IIIG"); 					
	
	Запрос.УстановитьПараметр("КодСтроки", 				СписокКодовСтрок);
	
	Запрос.УстановитьПараметр("ВидУчетаВР",   			Справочники.ВидыУчетаНУ.ВР);
	Запрос.УстановитьПараметр("ПустаяДата",    			'00010101');
	Запрос.УстановитьПараметр("Счет1310Н",              ПланыСчетов.Налоговый.СырьеИМатериалы);     //счет Н214
	Запрос.УстановитьПараметр("Счет1330Н",              ПланыСчетов.Налоговый.Товары);     			//счет Н211
	Запрос.УстановитьПараметр("Счет1350Н",              ПланыСчетов.Налоговый.ПрочиеЗапасы);     	
	Запрос.УстановитьПараметр("СписокСчетов30Н",        ПланыСчетов.Налоговый.РасчетыСКонтрагентамиИПрочиеВзаиморасчеты);   
	Запрос.УстановитьПараметр("Счет3350",       		ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками);   			
	Запрос.УстановитьПараметр("Счет20Н",       			ПланыСчетов.Налоговый.ВнеоборотныеАктивы);   				
	Запрос.УстановитьПараметр("Счет2400Н",       		ПланыСчетов.Налоговый.НезавершенноеСтроительство);   	
	Запрос.УстановитьПараметр("Счет2500Н",       		ПланыСчетов.Налоговый.ПреренцииДоВводаВЭксплуатацию);   
	Запрос.УстановитьПараметр("Счет1620Н",				ПланыСчетов.Налоговый.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Счет000",				ПланыСчетов.Налоговый.Вспомогательный);
	
	Если ФормаСтруктура.ПризнакВключенияДопЗатрат22001 Тогда 
		ТекстДобУсл = СтрЗаменить(ТекстЗапросаПоМесяцам, "ГДЕ", "И (");
		ТекстДобЗапроса = "ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			НалоговыйОбороты.КорСубконто1,
		|			НалоговыйОбороты.СуммаОборот
		|		ИЗ
		|			РегистрБухгалтерии.Налоговый.Обороты(
		|					&НачПериода,
		|					&КонПериода,
		|					Запись,
		|					Счет В ИЕРАРХИИ (&СписокСчетов),
		|					&ВидСубконтоЗатрат,
		|					Организация В (&СписокОрганизаций)
		|						И ВидУчета <> &ВидУчетаВР,
		|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)),
		|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК ВидДоходаРасхода
		|				ИЗ
		|					РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
		|							&КонПериода,
		|							(Налогоплательщик = &ПустаяОрганизация
		|								ИЛИ Налогоплательщик = &ПустоеЗначение
		|								ИЛИ Налогоплательщик = &Организация)
		|								И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
		|				
		|				СГРУППИРОВАТЬ ПО
		|					КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода) КАК ДанныеОКодахСтрок
		|				ПО НалоговыйОбороты.Субконто1 = ДанныеОКодахСтрок.ВидДоходаРасхода
		|		ГДЕ
		|			ДанныеОКодахСтрок.ВидДоходаРасхода ЕСТЬ NULL 
		| " + ТекстДобУсл + ") ";
	КонецЕсли;
	
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Период КАК Период,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.ВидДоходаРасхода КАК СтатьяЗатрат,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик КАК Организация,
	|	КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустаяОрганизация
	|			ТОГДА 3
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &ПустоеЗначение
	|			ТОГДА 2
	|		КОГДА КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних.Налогоплательщик = &Организация
	|			ТОГДА 1
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ВТ_Приоритет
	|ИЗ
	|	РегистрСведений.КодыСтрокДекларацииПоНалогуНаПрибыль.СрезПоследних(
	|			&КонПериода,
	|			(Налогоплательщик = &ПустаяОрганизация
	|				ИЛИ Налогоплательщик = &ПустоеЗначение
	|				ИЛИ Налогоплательщик = &Организация)
	|				И (НЕ КодСтроки = """")) КАК КодыСтрокДекларацииПоНалогуНаПрибыльСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяЗатрат,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонечныеИтоговыеДанные.Контрагент,
	|	КонечныеИтоговыеДанные.Сумма,
	|	КонечныеИтоговыеДанные.ИдентификационныйКодЛичности,
	|	КонечныеИтоговыеДанные.НомерНалоговойРегистрацииВСтранеРезидентства,
	|	КонечныеИтоговыеДанные.Код,
	|	КонечныеИтоговыеДанные.КБЕ
	|ИЗ
	|	(ВЫБРАТЬ
	|		Контрагенты.Ссылка КАК Контрагент,
	|		СУММА(ИтоговыеДанные.Сумма) КАК Сумма,
	|		Контрагенты.ИдентификационныйКодЛичности КАК ИдентификационныйКодЛичности,
	|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства КАК НомерНалоговойРегистрацииВСтранеРезидентства,
	|		КлассификаторСтранМира.КодАльфа3 КАК Код,
	|		Контрагенты.КБЕ Как КБЕ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
	|			ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
	|		ИЗ
	|			РегистрБухгалтерии.Налоговый.Обороты(
	|					&НачПериода,
	|					&КонПериода,
	|					Запись,
	|					Счет = &Счет1330Н
	|						ИЛИ Счет = &Счет1310Н,
	|					,
	|					Организация В (&СписокОрганизаций)
	|						И ВидУчета <> &ВидУчетаВР,
	|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &Счет1350Н, &СписокСчетовНалогов)),
	|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	| 	" + ТекстЗапросаПоМесяцам + "
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			НалоговыйОбороты.КорСубконто1,
	|			СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0))
	|		ИЗ
	|			РегистрБухгалтерии.Налоговый.Обороты(
	|					&НачПериода,
	|					&КонПериода,
	|					Запись,
	|					Счет В ИЕРАРХИИ (&СписокСчетов),
	|					&ВидСубконтоЗатрат,
	|					Организация В (&СписокОрганизаций)
	|						И ВидУчета <> &ВидУчетаВР,
	|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетов, &СписокСчетовНалогов)  ),
	|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|					ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|					ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|				ИЗ
	|					(ВЫБРАТЬ
	|						ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|						МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|					ИЗ
	|						ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
	|						ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|						ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
	|							И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|				ГДЕ
	|					(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
	|				ПО НалоговыйОбороты.Субконто1 = СтатьиЗатратПоКоду.СтатьяЗатрат
	| 	" + ТекстЗапросаПоМесяцам + "
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НалоговыйОбороты.КорСубконто1
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		   ВЫБРАТЬ
	|			НалоговыйОбороты.КорСубконто1 КАК Контрагент,
	|			ВЫБОР
	|				КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&Счет20Н)
	|					ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0)
	|				ИНАЧЕ ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)
	|			КОНЕЦ КАК Сумма
	|		ИЗ
	|			РегистрБухгалтерии.Налоговый.Обороты(
	|					&НачПериода,
	|					&КонПериода,
	|					Запись,
	|					Счет В ИЕРАРХИИ (&Счет20Н)
	|							И НЕ Счет = &Счет2400Н
	|							И НЕ Счет = &Счет2500Н,
	|					,
	|					Организация В (&СписокОрганизаций)
	|						И ВидУчета <> &ВидУчетаВР,
	|					(НЕ КорСчет В ИЕРАРХИИ (&Счет000, &СписокСчетовНалогов)),
	|					&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	| 	" + ТекстЗапросаПоМесяцам + "
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|   ВЫБРАТЬ
	|	НалоговыйОбороты.КорСубконто1 КАК Контрагент,
	|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			Запись,
	|			Счет = &Счет2400Н
	|				ИЛИ Счет = &Счет2500Н,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВидУчета <> &ВидУчетаВР,
	|					(НЕ КорСчет В ИЕРАРХИИ (&СписокСчетовНалогов)),
	|			&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|			ТаблицаСтатейЗатрат.Приоритет КАК Приоритет,
	|			ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаСтатейЗатрат.СтатьяЗатрат КАК СтатьяЗатрат,
	|				МИНИМУМ(ТаблицаСтатейЗатрат.Приоритет) КАК Приоритет
	|			ИЗ
	|				ВТ_Приоритет КАК ТаблицаСтатейЗатрат
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТаблицаСтатейЗатрат.СтатьяЗатрат) КАК ТаблицаСтатейЗатрат
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|				ПО ТаблицаСтатейЗатрат.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
	|					И ТаблицаСтатейЗатрат.Приоритет = ДанныеОКодахДекларации.Приоритет
	|		ГДЕ
	|			(НЕ ДанныеОКодахДекларации.КодСтроки В (&КодСтроки))) КАК СтатьиЗатратПоКоду
	|		ПО (НалоговыйОбороты.Субконто2 = СтатьиЗатратПоКоду.СтатьяЗатрат)
	| 	" + ТекстЗапросаПоМесяцам + "
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НалоговыйОбороты.КорСубконто1,
	|		СУММА(ЕСТЬNULL(НалоговыйОбороты.СуммаОборот, 0)) КАК Сумма
	|	ИЗ
	|		РегистрБухгалтерии.Налоговый.Обороты(
	|				&НачПериода,
	|				&КонПериода,
	|				Запись,
	|				Счет = &Счет1620Н,
	|				,
	|				Организация В (&СписокОрганизаций)
	|					И ВидУчета <> &ВидУчетаВР,
	|				(НЕ КорСчет В ИЕРАРХИИ (&Счет000)),
	|				&ВидСубконтоКонтрагенты) КАК НалоговыйОбороты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаДохода.СтатьяЗатрат КАК ДоходРасход,
	|				ТаблицаДохода.Приоритет КАК Приоритет,
	|				ДанныеОКодахДекларации.КодСтроки КАК КодСтроки
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ТаблицаДохода.СтатьяЗатрат КАК СтатьяЗатрат,
	|					МИНИМУМ(ТаблицаДохода.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВТ_Приоритет КАК ТаблицаДохода
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ТаблицаДохода.СтатьяЗатрат) КАК ТаблицаДохода
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приоритет КАК ДанныеОКодахДекларации
	|					ПО ТаблицаДохода.Приоритет = ДанныеОКодахДекларации.Приоритет
	|						И ТаблицаДохода.СтатьяЗатрат = ДанныеОКодахДекларации.СтатьяЗатрат
	|			ГДЕ
	|				(НЕ ДанныеОКодахДекларации.КодСтроки В(&КодСтроки))) КАК ВложенныйЗапрос
	|			ПО ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ1 = ВложенныйЗапрос.ДоходРасход
	|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ2 = ВложенныйЗапрос.ДоходРасход
	|			ИЛИ ВЫРАЗИТЬ(НалоговыйОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).СубконтоНУ3 = ВложенныйЗапрос.ДоходРасход	
	| 	" + ТекстЗапросаПоМесяцам + "
	|
	|	СГРУППИРОВАТЬ ПО
	|		НалоговыйОбороты.КорСубконто1
	|
	|
	| " + ТекстДобЗапроса + ") КАК ИтоговыеДанные
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
	|				ПО Контрагенты.СтранаРезидентства = КлассификаторСтранМира.Ссылка
	|			ПО ИтоговыеДанные.Контрагент = Контрагенты.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Контрагенты.Ссылка,
	|		Контрагенты.ИдентификационныйКодЛичности,
	|		Контрагенты.НомерНалоговойРегистрацииВСтранеРезидентства,
	|		КлассификаторСтранМира.КодАльфа3,
	|		Контрагенты.КБЕ) КАК КонечныеИтоговыеДанные
	|ГДЕ
	|	КонечныеИтоговыеДанные.Сумма <> 0
	|	И (НЕ КонечныеИтоговыеДанные.Контрагент ЕСТЬ NULL )
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонечныеИтоговыеДанные.Контрагент.ИдентификационныйКодЛичности";
	
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() И ВыдаватьСообщения Тогда
		ТекстСообщения = НСтр("ru = 'Данные для заполнения Приложения 220.01 по коду вида расхода 7 за отчетный период отсутствуют...'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ТаблицаРезультата = Результат.Выгрузить();
	
	Возврат ТаблицаРезультата;
	
КонецФункции

Функция Форма2202023Кв1_Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура)
	
	Возврат Форма220_01РассчитатьДанныеОбОтсутствующихКодахСтрокДляСтатейЗатрат(ПериодФормирования, ФормаСтруктура);
	
КонецФункции

Процедура Форма2202023Кв1_Форма220_02ЗаполнитьАвто(ПараметрыОтчета)
	
	Форма220_02ЗаполнитьАвто(ПараметрыОтчета);
	
КонецПроцедуры

Функция Форма2202023Кв1_ПолучитьВычетыИндивидуальногоПредпринимателя(Налогоплательщик, НачПериода, КонПериода)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачПериода", 			НачПериода);
	Запрос.УстановитьПараметр("КонПериода", 			КонПериода);
	Запрос.УстановитьПараметр("Организация", 			Налогоплательщик);
	
	ВидыВычетов = Новый Массив;
	ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"));
	ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"));
	ВидыВычетов.Добавить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"));
	
	Запрос.УстановитьПараметр("ВидыВычетов", ВидыВычетов);
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	Организации.ИндивидуальныйПредприниматель КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ФизЛицо
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|	И Организации.ИндивидуальныйПредприниматель <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВычетыФизическихЛицИПН.Период < &НачПериода
	|			ТОГДА НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВычетыФизическихЛицИПН.Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	ВычетыФизическихЛицИПН.ВидВычета КАК ВидВычета,
	|	ВЫБОР
	|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
	|		КОГДА ВычетыФизическихЛицИПН.ДействуетПо > &КонПериода
	|			ТОГДА КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ВычетыФизическихЛицИПН.ДействуетПо, МЕСЯЦ)
	|	КОНЕЦ КАК ДействуетПо,
	|	ВычетыФизическихЛицИПН.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТ_ВычетыИПН
	|ИЗ
	|	РегистрСведений.ВычетыФизическихЛицИПН КАК ВычетыФизическихЛицИПН
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛицо КАК ВТ_ФизЛицо
	|		ПО ВычетыФизическихЛицИПН.ФизическоеЛицо = ВТ_ФизЛицо.Ссылка
	|ГДЕ
	|	ВычетыФизическихЛицИПН.Активность
	|	И ВычетыФизическихЛицИПН.ПредоставлятьВычет
	|	И ВычетыФизическихЛицИПН.ВидВычета В(&ВидыВычетов)
	|	И ВычетыФизическихЛицИПН.Период < &КонПериода
	|	И (ВычетыФизическихЛицИПН.ДействуетПо > &НачПериода
	|			ИЛИ ВычетыФизическихЛицИПН.ДействуетПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 0) КАК Месяц
	|ПОМЕСТИТЬ ВТ_МесяцыГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 3)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 4)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 5)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 6)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 7)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 8)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 9)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 11)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&НачПериода, МЕСЯЦ, 12)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
	|			ТОГДА 75
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоМЗП,
	|	ВТ_ВычетыИПН.ВидВычета КАК ВидВычета
	|ПОМЕСТИТЬ ВТ_Вычеты
	|ИЗ
	|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
	|ГДЕ
	|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_ВычетыИПН.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачПериода, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонПериода, МЕСЯЦ)
	|			ТОГДА 75
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВТ_ВычетыИПН.ВидВычета
	|ИЗ
	|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
	|ГДЕ
	|	ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПРодители)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_МесяцыГода.Месяц),
	|	МАКСИМУМ(ВТ_ВычетыИПН.ВидВычета)
	|ИЗ
	|	ВТ_МесяцыГода КАК ВТ_МесяцыГода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
	|		ПО ВТ_МесяцыГода.Месяц >= ВТ_ВычетыИПН.Период
	|			И ВТ_МесяцыГода.Месяц <= ВТ_ВычетыИПН.ДействуетПо
	|			И (ВТ_ВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_Вычеты.КоличествоМЗП) КАК КоличествоМЗП,
	|	ВТ_Вычеты.ВидВычета КАК ВидВычета
	|ИЗ
	|	ВТ_Вычеты КАК ВТ_Вычеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Вычеты.ВидВычета"
	;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Соответствие = Новый Соответствие();
	Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный1МЗП"), "1");
	Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды"), "2");
	Соответствие.Вставить(ПредопределенноеЗначение("Справочник.ВычетыИПН.Стандартный75МЗПРодители"), "3");
	
	СоответствиеВозврат = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеВозврат.Вставить(?(Соответствие.Получить(Выборка.ВидВычета)<>Неопределено,Соответствие.Получить(Выборка.ВидВычета),"1"), Выборка.КоличествоМЗП);
	КонецЦикла;
	Возврат СоответствиеВозврат;
	
КонецФункции

#КонецОбласти

Процедура ДополнитьСписокКодовСтрокИзКлассификатора(ИмяЯчейки, СписокКодовСтрок, МакетКодовСтрок)
	
	ИмяЯчейкиДляПоиска = СтрЗаменить(ИмяЯчейки, ".", "_");
	
	Для Каждого Область Из МакетКодовСтрок.Области Цикл
		Если СтрНайти(Область.Имя, ИмяЯчейкиДляПоиска) <> 0 Тогда
			Для НомерСтроки = Область.Верх По Область.Низ Цикл
				КодСтроки           = СокрЛП(МакетКодовСтрок.Область(НомерСтроки, 1).Текст);  // 1 - номер колонки с кодом
				КодСтрокиВключаемый = ИмяЯчейки + "." + КодСтроки;
				Если КодСтроки <> "" И СписокКодовСтрок.НайтиПоЗначению(КодСтрокиВключаемый) = Неопределено Тогда
					СписокКодовСтрок.Добавить(КодСтрокиВключаемый);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли